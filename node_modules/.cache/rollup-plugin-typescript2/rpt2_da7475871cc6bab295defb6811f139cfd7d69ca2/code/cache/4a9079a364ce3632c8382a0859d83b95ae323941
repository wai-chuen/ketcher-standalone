{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nexport var Command;\r\n(function (Command) {\r\n    Command[Command[\"Info\"] = 0] = \"Info\";\r\n    Command[Command[\"Convert\"] = 1] = \"Convert\";\r\n    Command[Command[\"Layout\"] = 2] = \"Layout\";\r\n    Command[Command[\"Clean\"] = 3] = \"Clean\";\r\n    Command[Command[\"Aromatize\"] = 4] = \"Aromatize\";\r\n    Command[Command[\"Dearomatize\"] = 5] = \"Dearomatize\";\r\n    Command[Command[\"CalculateCip\"] = 6] = \"CalculateCip\";\r\n    Command[Command[\"Automap\"] = 7] = \"Automap\";\r\n    Command[Command[\"Check\"] = 8] = \"Check\";\r\n    Command[Command[\"Calculate\"] = 9] = \"Calculate\";\r\n    Command[Command[\"GenerateImageAsBase64\"] = 10] = \"GenerateImageAsBase64\";\r\n    Command[Command[\"GenerateInchIKey\"] = 11] = \"GenerateInchIKey\";\r\n})(Command || (Command = {}));\r\nexport var WorkerEvent;\r\n(function (WorkerEvent) {\r\n    WorkerEvent[\"Info\"] = \"info\";\r\n    WorkerEvent[\"Convert\"] = \"convert\";\r\n    WorkerEvent[\"Layout\"] = \"layout\";\r\n    WorkerEvent[\"Clean\"] = \"clean\";\r\n    WorkerEvent[\"Aromatize\"] = \"aromatize\";\r\n    WorkerEvent[\"Dearomatize\"] = \"dearomatize\";\r\n    WorkerEvent[\"CalculateCip\"] = \"calculateCip\";\r\n    WorkerEvent[\"Automap\"] = \"automap\";\r\n    WorkerEvent[\"Check\"] = \"check\";\r\n    WorkerEvent[\"Calculate\"] = \"calculate\";\r\n    WorkerEvent[\"GenerateImageAsBase64\"] = \"generateImageAsBase64\";\r\n    WorkerEvent[\"GenerateInchIKey\"] = \"generateInchIKey\";\r\n})(WorkerEvent || (WorkerEvent = {}));\r\nexport var SupportedFormat;\r\n(function (SupportedFormat) {\r\n    SupportedFormat[\"Rxn\"] = \"rxnfile\";\r\n    SupportedFormat[\"Mol\"] = \"molfile\";\r\n    SupportedFormat[\"Smiles\"] = \"smiles\";\r\n    SupportedFormat[\"Smarts\"] = \"smarts\";\r\n    SupportedFormat[\"CML\"] = \"cml\";\r\n    SupportedFormat[\"InChI\"] = \"inchi\";\r\n    SupportedFormat[\"InChIAuxInfo\"] = \"inchi-aux\";\r\n    SupportedFormat[\"Ket\"] = \"ket\";\r\n    SupportedFormat[\"CDX\"] = \"cdx\";\r\n    SupportedFormat[\"CDXML\"] = \"cdxml\";\r\n})(SupportedFormat || (SupportedFormat = {}));\r\n//# sourceMappingURL=indigoWorker.types.js.map","references":[],"map":"{\"version\":3,\"file\":\"indigoWorker.types.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/infrastructure/services/struct/indigoWorker.types.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;6EAc6E;AAE7E,MAAM,CAAN,IAAkB,OAajB;AAbD,WAAkB,OAAO;IACvB,qCAAI,CAAA;IACJ,2CAAO,CAAA;IACP,yCAAM,CAAA;IACN,uCAAK,CAAA;IACL,+CAAS,CAAA;IACT,mDAAW,CAAA;IACX,qDAAY,CAAA;IACZ,2CAAO,CAAA;IACP,uCAAK,CAAA;IACL,+CAAS,CAAA;IACT,wEAAqB,CAAA;IACrB,8DAAgB,CAAA;AAClB,CAAC,EAbiB,OAAO,KAAP,OAAO,QAaxB;AAED,MAAM,CAAN,IAAkB,WAajB;AAbD,WAAkB,WAAW;IAC3B,4BAAa,CAAA;IACb,kCAAmB,CAAA;IACnB,gCAAiB,CAAA;IACjB,8BAAe,CAAA;IACf,sCAAuB,CAAA;IACvB,0CAA2B,CAAA;IAC3B,4CAA6B,CAAA;IAC7B,kCAAmB,CAAA;IACnB,8BAAe,CAAA;IACf,sCAAuB,CAAA;IACvB,8DAA+C,CAAA;IAC/C,oDAAqC,CAAA;AACvC,CAAC,EAbiB,WAAW,KAAX,WAAW,QAa5B;AAED,MAAM,CAAN,IAAY,eAWX;AAXD,WAAY,eAAe;IACzB,kCAAe,CAAA;IACf,kCAAe,CAAA;IACf,oCAAiB,CAAA;IACjB,oCAAiB,CAAA;IACjB,8BAAW,CAAA;IACX,kCAAe,CAAA;IACf,6CAA0B,CAAA;IAC1B,8BAAW,CAAA;IACX,8BAAW,CAAA;IACX,kCAAe,CAAA;AACjB,CAAC,EAXW,eAAe,KAAf,eAAe,QAW1B\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-standalone/node_modules/.cache/rollup-plugin-typescript2/placeholder/infrastructure/services/struct/indigoWorker.types.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nexport declare const enum Command {\r\n    Info = 0,\r\n    Convert = 1,\r\n    Layout = 2,\r\n    Clean = 3,\r\n    Aromatize = 4,\r\n    Dearomatize = 5,\r\n    CalculateCip = 6,\r\n    Automap = 7,\r\n    Check = 8,\r\n    Calculate = 9,\r\n    GenerateImageAsBase64 = 10,\r\n    GenerateInchIKey = 11\r\n}\r\nexport declare const enum WorkerEvent {\r\n    Info = \"info\",\r\n    Convert = \"convert\",\r\n    Layout = \"layout\",\r\n    Clean = \"clean\",\r\n    Aromatize = \"aromatize\",\r\n    Dearomatize = \"dearomatize\",\r\n    CalculateCip = \"calculateCip\",\r\n    Automap = \"automap\",\r\n    Check = \"check\",\r\n    Calculate = \"calculate\",\r\n    GenerateImageAsBase64 = \"generateImageAsBase64\",\r\n    GenerateInchIKey = \"generateInchIKey\"\r\n}\r\nexport declare enum SupportedFormat {\r\n    Rxn = \"rxnfile\",\r\n    Mol = \"molfile\",\r\n    Smiles = \"smiles\",\r\n    Smarts = \"smarts\",\r\n    CML = \"cml\",\r\n    InChI = \"inchi\",\r\n    InChIAuxInfo = \"inchi-aux\",\r\n    Ket = \"ket\",\r\n    CDX = \"cdx\",\r\n    CDXML = \"cdxml\"\r\n}\r\nexport interface WithStruct {\r\n    struct: string;\r\n}\r\nexport interface WithFormat {\r\n    format: SupportedFormat;\r\n}\r\nexport interface WithSelection {\r\n    selectedAtoms: Array<number>;\r\n}\r\nexport interface CommandOptions {\r\n    [key: string]: string | number | boolean | undefined;\r\n}\r\nexport interface CommandData {\r\n    options?: CommandOptions;\r\n}\r\nexport interface CheckCommandData extends CommandData, WithStruct {\r\n    types: Array<string>;\r\n}\r\nexport interface ConvertCommandData extends CommandData, WithStruct, WithFormat {\r\n}\r\nexport interface GenerateInchIKeyCommandData extends CommandData, WithStruct {\r\n}\r\nexport interface GenerateImageCommandData extends CommandData, WithStruct {\r\n    outputFormat: 'png' | 'svg';\r\n    backgroundColor?: string;\r\n}\r\nexport interface LayoutCommandData extends CommandData, WithStruct, WithFormat {\r\n}\r\nexport interface CleanCommandData extends CommandData, WithStruct, WithSelection, WithFormat {\r\n}\r\nexport interface AromatizeCommandData extends CommandData, WithStruct, WithFormat {\r\n}\r\nexport interface DearomatizeCommandData extends CommandData, WithStruct, WithFormat {\r\n}\r\nexport interface CalculateCipCommandData extends CommandData, WithStruct, WithFormat {\r\n}\r\nexport declare type CalculateProps = 'molecular-weight' | 'most-abundant-mass' | 'monoisotopic-mass' | 'gross' | 'gross-formula' | 'mass-composition';\r\nexport interface CalculateCommandData extends CommandData, WithStruct, WithSelection {\r\n    properties: Array<string>;\r\n}\r\nexport interface AutomapCommandData extends CommandData, WithStruct, WithFormat {\r\n    mode: string;\r\n}\r\nexport interface OutputMessage<T> {\r\n    type?: Command;\r\n    hasError?: boolean;\r\n    payload?: T;\r\n    error?: string;\r\n}\r\nexport interface InputMessage<T> {\r\n    type: Command;\r\n    data: T;\r\n}\r\n"}}
