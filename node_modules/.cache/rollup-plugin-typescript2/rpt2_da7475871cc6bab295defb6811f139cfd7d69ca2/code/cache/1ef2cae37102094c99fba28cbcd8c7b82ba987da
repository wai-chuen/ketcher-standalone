{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\n/* eslint-disable no-restricted-globals */\r\nimport { Command } from './indigoWorker.types';\r\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n// @ts-ignore\r\nimport indigoModuleFn from 'indigo-ketcher';\r\nfunction handle(handler, options, messageType) {\r\n    module.then((indigo) => {\r\n        const indigoOptions = new indigo.MapStringString();\r\n        setOptions(indigoOptions, options || {});\r\n        let msg;\r\n        try {\r\n            const payload = handler(indigo, indigoOptions);\r\n            msg = {\r\n                type: messageType,\r\n                payload,\r\n                hasError: false\r\n            };\r\n        }\r\n        catch (error) {\r\n            msg = {\r\n                type: messageType,\r\n                hasError: true,\r\n                error: error\r\n            };\r\n        }\r\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n        // @ts-ignore\r\n        self.postMessage(msg);\r\n    });\r\n}\r\nfunction setOptions(indigoOptions, options) {\r\n    for (const [key, value] of Object.entries(options)) {\r\n        if (value == null)\r\n            continue;\r\n        indigoOptions.set(key, value.toString());\r\n    }\r\n}\r\nconst module = indigoModuleFn();\r\nself.onmessage = (e) => {\r\n    const message = e.data;\r\n    switch (message.type) {\r\n        case Command.GenerateImageAsBase64: {\r\n            const data = message.data;\r\n            handle((indigo, indigoOptions) => indigo.render(data.struct, indigoOptions), {\r\n                ...data.options,\r\n                'render-output-format': data.outputFormat,\r\n                'render-background-color': data.backgroundColor,\r\n                'render-coloring': true\r\n            }, Command.GenerateImageAsBase64);\r\n            break;\r\n        }\r\n        case Command.Layout: {\r\n            const data = message.data;\r\n            handle((indigo, indigoOptions) => indigo.layout(data.struct, data.format, indigoOptions), data.options, Command.Layout);\r\n            break;\r\n        }\r\n        case Command.Dearomatize: {\r\n            const data = message.data;\r\n            handle((indigo, indigoOptions) => indigo.dearomatize(data.struct, data.format, indigoOptions), data.options, Command.Dearomatize);\r\n            break;\r\n        }\r\n        case Command.Check: {\r\n            const data = message.data;\r\n            handle((indigo, indigoOptions) => indigo.check(data.struct, data.types?.length ? data.types.join(';') : '', indigoOptions), data.options, Command.Check);\r\n            break;\r\n        }\r\n        case Command.CalculateCip: {\r\n            const data = message.data;\r\n            handle((indigo, indigoOptions) => indigo.calculateCip(data.struct, data.format, indigoOptions), data.options, Command.CalculateCip);\r\n            break;\r\n        }\r\n        case Command.Calculate: {\r\n            const data = message.data;\r\n            handle((indigo, indigoOptions) => {\r\n                const selectedAtoms = new indigo.VectorInt();\r\n                data.selectedAtoms.forEach((atomId) => selectedAtoms.push_back(atomId));\r\n                return indigo.calculate(data.struct, indigoOptions, selectedAtoms);\r\n            }, data.options, Command.Calculate);\r\n            break;\r\n        }\r\n        case Command.Automap: {\r\n            const data = message.data;\r\n            handle((indigo, indigoOptions) => indigo.automap(data.struct, data.mode, data.format, indigoOptions), data.options, Command.Automap);\r\n            break;\r\n        }\r\n        case Command.Aromatize: {\r\n            const data = message.data;\r\n            handle((indigo, indigoOptions) => indigo.aromatize(data.struct, data.format, indigoOptions), data.options, Command.Aromatize);\r\n            break;\r\n        }\r\n        case Command.Clean: {\r\n            const data = message.data;\r\n            handle((indigo, indigoOptions) => {\r\n                const selectedAtoms = new indigo.VectorInt();\r\n                data.selectedAtoms.forEach((atomId) => selectedAtoms.push_back(atomId));\r\n                return indigo.clean2d(data.struct, data.format, indigoOptions, selectedAtoms);\r\n            }, data.options, Command.Clean);\r\n            break;\r\n        }\r\n        case Command.Convert: {\r\n            const data = message.data;\r\n            handle((indigo, indigoOptions) => indigo.convert(data.struct, data.format, indigoOptions), data.options, Command.Convert);\r\n            break;\r\n        }\r\n        case Command.Info: {\r\n            handle((indigo) => indigo.version(), undefined, Command.Info);\r\n            break;\r\n        }\r\n        case Command.GenerateInchIKey: {\r\n            const data = message.data;\r\n            handle((indigo, indigoOptions) => indigo.convert(data.struct, 'inchi-key', indigoOptions), undefined, Command.GenerateInchIKey);\r\n            break;\r\n        }\r\n        default:\r\n            throw Error('Unsupported enum type');\r\n    }\r\n};\r\n//# sourceMappingURL=indigoWorker.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-standalone/src/infrastructure/services/struct/indigoWorker.types.ts","/usr/local/google/home/waich/workspace/ketcher/node_modules/indigo-ketcher/indigo-ketcher.js"],"map":"{\"version\":3,\"file\":\"indigoWorker.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/infrastructure/services/struct/indigoWorker.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-standalone/node_modules/.cache/rollup-plugin-typescript2/placeholder/infrastructure/services/struct/indigoWorker.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nexport {};\r\n"}}
