declare namespace _default {
    export { recenterText };
    export { arrow };
    export { plus };
    export { aromaticBondPaths };
    export { bondSingle };
    export { bondSingleUp };
    export { bondSingleStereoBold };
    export { bondDoubleStereoBold };
    export { bondSingleDown };
    export { bondSingleEither };
    export { bondDouble };
    export { bondSingleOrDouble };
    export { bondTriple };
    export { bondAromatic };
    export { bondAny };
    export { bondHydrogen };
    export { bondDative };
    export { reactingCenter };
    export { topologyMark };
    export { radicalCap };
    export { radicalBullet };
    export { bracket };
    export { selectionRectangle };
    export { selectionPolygon };
    export { selectionLine };
    export { ellipse };
    export { rectangle };
    export { rectangleArrowHighlightAndSelection };
    export { polyline };
    export { line };
}
export default _default;
declare function recenterText(path: any, rbb: any): void;
declare function arrow(paper: any, item: any, length: any, angle: any, options: any): any;
declare function plus(paper: any, c: any, options: any): any;
declare function aromaticBondPaths(a2: any, a3: any, b2: any, b3: any, mask: any, dash: any): string[];
declare function bondSingle(paper: any, hb1: any, hb2: any, options: any, color?: string): any;
declare function bondSingleUp(paper: any, a: any, b2: any, b3: any, options: any, color?: string): any;
declare function bondSingleStereoBold(paper: any, a1: any, a2: any, a3: any, a4: any, options: any, color?: string): any;
declare function bondDoubleStereoBold(paper: any, sgBondPath: any, b1: any, b2: any, options: any, color?: string): any;
declare function bondSingleDown(paper: any, hb1: any, d: any, nlines: any, step: any, options: any, color?: string): any;
declare function bondSingleEither(paper: any, hb1: any, d: any, nlines: any, step: any, options: any, color?: string): any;
declare function bondDouble(paper: any, a1: any, a2: any, b1: any, b2: any, cisTrans: any, options: any): any;
declare function bondSingleOrDouble(paper: any, hb1: any, hb2: any, nSect: any, options: any): any;
declare function bondTriple(paper: any, hb1: any, hb2: any, options: any, color?: string): any;
declare function bondAromatic(paper: any, paths: any, bondShift: any, options: any): any;
declare function bondAny(paper: any, hb1: any, hb2: any, options: any): any;
declare function bondHydrogen(paper: any, hb1: any, hb2: any, options: any): any;
declare function bondDative(paper: any, hb1: any, hb2: any, options: any): any;
declare function reactingCenter(paper: any, p: any, options: any): any;
declare function topologyMark(paper: any, p: any, mark: any, options: any): any;
declare function radicalCap(paper: any, p: any, options: any): any;
declare function radicalBullet(paper: any, p: any, options: any): any;
declare function bracket(paper: any, d: any, n: any, c: any, bracketWidth: any, bracketHeight: any, options: any): any;
declare function selectionRectangle(paper: any, p0: any, p1: any, options: any): any;
declare function selectionPolygon(paper: any, r: any, options: any): any;
declare function selectionLine(paper: any, p0: any, p1: any, options: any): any;
declare function ellipse(paper: any, pos: any, options: any): any;
declare function rectangle(paper: any, pos: any, options: any): any;
declare function rectangleArrowHighlightAndSelection(paper: any, { pos, height }: {
    pos: any;
    height: any;
}, length: any, angle: any, options: any): string;
declare function polyline(paper: any, pos: any, options: any): any;
declare function line(paper: any, pos: any, options: any): any;
