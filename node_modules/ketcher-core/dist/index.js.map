{"version":3,"file":"index.js","sources":["../src/domain/constants/elementColor.ts","../src/domain/constants/elements.ts","../src/domain/constants/generics.ts","../src/domain/entities/atomList.ts","../src/domain/entities/vec2.ts","../src/domain/entities/pile.ts","../src/domain/entities/atom.ts","../src/domain/entities/bond.ts","../src/domain/entities/fragment.ts","../src/domain/helpers/scale.ts","../src/domain/helpers/stereoValidator.ts","../src/domain/helpers/functionalGroupsProvider.ts","../src/domain/helpers/saltsAndSolventsProvider.ts","../src/domain/entities/box2Abs.ts","../src/domain/entities/sgroup.ts","../src/domain/entities/functionalGroup.ts","../src/domain/entities/halfBond.ts","../src/domain/entities/loop.ts","../src/domain/entities/rgroup.ts","../src/domain/entities/rxnArrow.ts","../src/domain/entities/rxnPlus.ts","../src/domain/entities/sgroupForest.ts","../src/domain/entities/simpleObject.ts","../src/domain/entities/pool.ts","../src/domain/entities/struct.ts","../src/domain/entities/text.ts","../src/domain/entities/highlight.ts","../src/domain/serializers/ket/helpers.ts","../src/domain/serializers/ket/toKet/rxnToKet.ts","../src/utilities/ifDef.ts","../src/utilities/tfx.ts","../src/utilities/runAsyncAction.ts","../src/utilities/b64toBlob.ts","../src/domain/serializers/ket/toKet/headerToKet.ts","../src/domain/serializers/ket/toKet/moleculeToKet.ts","../src/domain/serializers/ket/fromKet/moleculeToStruct.ts","../src/domain/serializers/ket/toKet/prepare.ts","../src/domain/serializers/ket/toKet/rgroupToKet.ts","../src/domain/serializers/ket/fromKet/rgroupToStruct.ts","../src/domain/serializers/ket/fromKet/rxnToStruct.ts","../src/domain/serializers/ket/toKet/simpleObjectToKet.ts","../src/domain/serializers/ket/fromKet/simpleObjectToStruct.ts","../src/domain/serializers/ket/toKet/textToKet.ts","../src/domain/serializers/ket/fromKet/textToStruct.ts","../src/domain/serializers/ket/validate.ts","../src/domain/serializers/ket/ketSerializer.ts","../src/domain/serializers/mol/utils.js","../src/domain/serializers/mol/parseSGroup.js","../src/domain/serializers/mol/v2000.js","../src/domain/serializers/mol/v3000.js","../src/domain/serializers/mol/common.js","../src/domain/serializers/mol/molfile.ts","../src/domain/serializers/mol/molSerializer.ts","../src/domain/serializers/smi/cis_trans.js","../src/domain/serializers/smi/dfs.js","../src/domain/serializers/smi/stereocenters.js","../src/domain/serializers/smi/smiles.js","../src/domain/serializers/smi/smiSerializer.ts","../src/domain/serializers/sdf/sdfSerializer.ts","../src/domain/services/struct/structService.types.ts","../src/infrastructure/services/struct/remoteStructService.ts","../src/infrastructure/services/struct/remoteStructServiceProvider.ts","../src/application/formatters/supportedFormatProperties.ts","../src/application/formatters/formatProperties.ts","../src/application/formatters/structFormatter.types.ts","../src/application/formatters/ketFormatter.ts","../src/application/formatters/rxnFormatter.ts","../src/application/formatters/serverFormatter.ts","../src/application/formatters/molfileV2000Formatter.ts","../src/application/formatters/formatterFactory.ts","../src/application/formatters/identifyStructFormat.ts","../src/application/render/raphael-ext.js","../src/application/render/restruct/generalEnumTypes.ts","../src/application/render/restruct/visel.js","../src/application/render/restruct/reobject.ts","../src/application/render/util.ts","../src/application/render/draw.js","../src/application/render/restruct/reatom.ts","../src/application/render/restruct/rebond.ts","../src/application/render/restruct/reenhancedFlag.ts","../src/application/render/restruct/refrag.js","../src/application/render/restruct/rergroup.js","../src/application/render/restruct/rerxnarrow.ts","../src/application/render/restruct/rerxnplus.js","../src/application/render/restruct/redatasgroupdata.js","../src/application/render/restruct/resgroup.js","../src/application/render/restruct/resimpleObject.ts","../src/application/render/restruct/reloop.js","../src/application/render/restruct/retext.ts","../src/application/render/restruct/restruct.ts","../src/application/editor/shared/utils.js","../src/application/render/options.js","../src/application/render/raphaelRender.js","../src/application/editor/operations/base.ts","../src/application/editor/operations/OperationType.ts","../src/application/editor/operations/atom/AtomAttr.ts","../src/application/editor/operations/atom/AtomMove.ts","../src/application/editor/operations/atom/index.ts","../src/application/editor/operations/bond/BondAttr.ts","../src/application/editor/operations/bond/BondMove.ts","../src/application/editor/operations/bond/index.ts","../src/application/editor/operations/CanvasLoad.ts","../src/application/editor/operations/descriptors.ts","../src/application/editor/operations/EnhancedFlagMove.ts","../src/application/editor/operations/ifThen.ts","../src/application/editor/operations/fragment.ts","../src/application/editor/operations/fragmentStereoAtom.ts","../src/application/editor/operations/FragmentStereoFlag.ts","../src/application/editor/operations/calcimplicitH.ts","../src/application/editor/operations/LoopMove.ts","../src/application/editor/operations/rgroup/RGroupAttr.ts","../src/application/editor/operations/rgroup/RGroupFragment.ts","../src/application/editor/operations/rxn/RxnArrowMove.ts","../src/application/editor/operations/rxn/RxnArrowResize.ts","../src/application/editor/operations/rxn/plus/RxnPlusMove.ts","../src/application/editor/operations/rxn/plus/index.ts","../src/application/editor/operations/rxn/index.ts","../src/application/editor/operations/simpleObject.ts","../src/application/editor/operations/sgroup/sgroupAtom.ts","../src/application/editor/operations/sgroup/SGroupAttr.ts","../src/application/editor/operations/sgroup/SGroupDataMove.ts","../src/application/editor/operations/sgroup/sgroupHierarchy.ts","../src/application/editor/operations/sgroup/index.ts","../src/application/editor/operations/Text/TextCreateDelete.ts","../src/application/editor/operations/Text/TextUpdate.ts","../src/application/editor/operations/Text/TextMove.ts","../src/application/editor/actions/action.ts","../src/application/editor/actions/aromaticFusing.ts","../src/application/editor/shared/closest.js","../src/application/editor/actions/utils.ts","../src/application/editor/actions/rgroup.ts","../src/application/editor/actions/sgroup.ts","../src/application/editor/actions/bond.ts","../src/application/editor/actions/atom.ts","../src/application/editor/actions/basic.ts","../src/application/editor/actions/chain.ts","../src/application/editor/actions/closelyFusing.ts","../src/application/editor/actions/fragment.ts","../src/application/editor/actions/erase.ts","../src/application/editor/actions/paste.ts","../src/application/editor/actions/reaction.ts","../src/application/editor/actions/rotate.ts","../src/application/editor/actions/simpleobject.ts","../src/application/editor/actions/template.ts","../src/application/editor/actions/text.ts","../src/application/editor/operations/highlight.ts","../src/application/editor/actions/highlight.ts","../src/application/editor/shared/constants.js","../src/application/editor/index.ts","../src/application/indigo.ts","../../../node_modules/events/events.js","../src/application/ketcher.ts","../src/application/ketcherBuilder.ts"],"sourcesContent":["/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport type { ElementLabel } from './element.types'\n\ntype ElementColorType = {\n  [key in ElementLabel]: string\n}\n\nexport const ElementColor: ElementColorType = {\n  H: '#000000',\n  He: '#89a1a1',\n  Li: '#bd77ed',\n  Be: '#8fbc00',\n  B: '#c18989',\n  C: '#000000',\n  N: '#304ff7',\n  O: '#ff0d0d',\n  F: '#78bc42',\n  Ne: '#80a2af',\n  Na: '#ab5cf2',\n  Mg: '#6fcd00',\n  Al: '#a99393',\n  Si: '#b29478',\n  P: '#ff8000',\n  S: '#c99a19',\n  Cl: '#1fd01f',\n  Ar: '#69acba',\n  K: '#8f40d4',\n  Ca: '#38e900',\n  Sc: '#999999',\n  Ti: '#979a9e',\n  V: '#99999e',\n  Cr: '#8a99c7',\n  Mn: '#9c7ac7',\n  Fe: '#e06633',\n  Co: '#d37e8e',\n  Ni: '#4ece4e',\n  Cu: '#c78033',\n  Zn: '#7d80b0',\n  Ga: '#bc8b8b',\n  Ge: '#668f8f',\n  As: '#b87ddd',\n  Se: '#e59100',\n  Br: '#a62929',\n  Kr: '#59b1c9',\n  Rb: '#702eb0',\n  Sr: '#00ff00',\n  Y: '#66afaf',\n  Zr: '#71abab',\n  Nb: '#67aeb4',\n  Mo: '#54b5b5',\n  Tc: '#3b9e9e',\n  Ru: '#248f8f',\n  Rh: '#0a7d8c',\n  Pd: '#006985',\n  Ag: '#9a9a9a',\n  Cd: '#b29764',\n  In: '#a67573',\n  Sn: '#668080',\n  Sb: '#9e63b5',\n  Te: '#d47a00',\n  I: '#940094',\n  Xe: '#429eb0',\n  Cs: '#57178f',\n  Ba: '#00c900',\n  La: '#5caed1',\n  Ce: '#9d9d7b',\n  Pr: '#8ca581',\n  Nd: '#84a984',\n  Pm: '#71b18a',\n  Sm: '#66b68e',\n  Eu: '#4ac298',\n  Gd: '#37cb9e',\n  Tb: '#28d1a4',\n  Dy: '#1bd7a8',\n  Ho: '#00e98f',\n  Er: '#00e675',\n  Tm: '#00d452',\n  Yb: '#00bf38',\n  Lu: '#00ab24',\n  Hf: '#47b3ec',\n  Ta: '#4da6ff',\n  W: '#2194d6',\n  Re: '#267dab',\n  Os: '#266696',\n  Ir: '#175487',\n  Pt: '#9898a3',\n  Au: '#c19e1c',\n  Hg: '#9797ac',\n  Tl: '#a6544d',\n  Pb: '#575961',\n  Bi: '#9e4fb5',\n  Po: '#ab5c00',\n  At: '#754f45',\n  Rn: '#428296',\n  Fr: '#420066',\n  Ra: '#007d00',\n  Ac: '#6aa2ec',\n  Th: '#00baff',\n  Pa: '#00a1ff',\n  U: '#008fff',\n  Np: '#0080ff',\n  Pu: '#006bff',\n  Am: '#545cf2',\n  Cm: '#785ce3',\n  Bk: '#8a4fe3',\n  Cf: '#a136d4',\n  Es: '#b31fd4',\n  // Need to fix colors for the elements below (c)\n  Fm: '#000000',\n  Md: '#000000',\n  No: '#000000',\n  Lr: '#000000',\n  Rf: '#47b3ec',\n  Db: '#4da6ff',\n  Sg: '#2194d6',\n  Bh: '#267dab',\n  Hs: '#266696',\n  Mt: '#175487',\n  Ds: '#9898a3',\n  Rg: '#c19e1c',\n  Cn: '#9797ac',\n  Nh: '#000000',\n  Fl: '#000000',\n  Mc: '#000000',\n  Lv: '#000000',\n  Ts: '#000000',\n  Og: '#000000'\n} as const\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport type { Element } from './element.types'\n\nconst elementsArray: Array<Element> = [\n  {\n    number: 1,\n    label: 'H',\n    period: 1,\n    group: 1,\n    title: 'Hydrogen',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 1.00794\n  },\n  {\n    number: 2,\n    label: 'He',\n    period: 1,\n    group: 8,\n    title: 'Helium',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 4.0026022\n  },\n  {\n    number: 3,\n    label: 'Li',\n    period: 2,\n    group: 1,\n    title: 'Lithium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 6.94\n  },\n  {\n    number: 4,\n    label: 'Be',\n    period: 2,\n    group: 2,\n    title: 'Beryllium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 9.01218315\n  },\n  {\n    number: 5,\n    label: 'B',\n    period: 2,\n    group: 3,\n    title: 'Boron',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 10.81\n  },\n  {\n    number: 6,\n    label: 'C',\n    period: 2,\n    group: 4,\n    title: 'Carbon',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 12.011\n  },\n  {\n    number: 7,\n    label: 'N',\n    period: 2,\n    group: 5,\n    title: 'Nitrogen',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 14.007\n  },\n  {\n    number: 8,\n    label: 'O',\n    period: 2,\n    group: 6,\n    leftH: true,\n    title: 'Oxygen',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 15.999\n  },\n  {\n    number: 9,\n    label: 'F',\n    period: 2,\n    group: 7,\n    leftH: true,\n    title: 'Fluorine',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'halogen',\n    mass: 18.9984031636\n  },\n  {\n    number: 10,\n    label: 'Ne',\n    period: 2,\n    group: 8,\n    title: 'Neon',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 20.17976\n  },\n  {\n    number: 11,\n    label: 'Na',\n    period: 3,\n    group: 1,\n    title: 'Sodium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 22.989769282\n  },\n  {\n    number: 12,\n    label: 'Mg',\n    period: 3,\n    group: 2,\n    title: 'Magnesium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 24.305\n  },\n  {\n    number: 13,\n    label: 'Al',\n    period: 3,\n    group: 3,\n    title: 'Aluminium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 26.98153857\n  },\n  {\n    number: 14,\n    label: 'Si',\n    period: 3,\n    group: 4,\n    title: 'Silicon',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 28.085\n  },\n  {\n    number: 15,\n    label: 'P',\n    period: 3,\n    group: 5,\n    title: 'Phosphorus',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 30.9737619985\n  },\n  {\n    number: 16,\n    label: 'S',\n    period: 3,\n    group: 6,\n    leftH: true,\n    title: 'Sulfur',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 32.06\n  },\n  {\n    number: 17,\n    label: 'Cl',\n    period: 3,\n    group: 7,\n    leftH: true,\n    title: 'Chlorine',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'halogen',\n    mass: 35.45\n  },\n  {\n    number: 18,\n    label: 'Ar',\n    period: 3,\n    group: 8,\n    title: 'Argon',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 39.9481\n  },\n  {\n    number: 19,\n    label: 'K',\n    period: 4,\n    group: 1,\n    title: 'Potassium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 39.09831\n  },\n  {\n    number: 20,\n    label: 'Ca',\n    period: 4,\n    group: 2,\n    title: 'Calcium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 40.0784\n  },\n  {\n    number: 21,\n    label: 'Sc',\n    period: 4,\n    group: 3,\n    title: 'Scandium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 44.9559085\n  },\n  {\n    number: 22,\n    label: 'Ti',\n    period: 4,\n    group: 4,\n    title: 'Titanium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 47.8671\n  },\n  {\n    number: 23,\n    label: 'V',\n    period: 4,\n    group: 5,\n    title: 'Vanadium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 50.94151\n  },\n  {\n    number: 24,\n    label: 'Cr',\n    period: 4,\n    group: 6,\n    title: 'Chromium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 51.99616\n  },\n  {\n    number: 25,\n    label: 'Mn',\n    period: 4,\n    group: 7,\n    title: 'Manganese',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 54.9380443\n  },\n  {\n    number: 26,\n    label: 'Fe',\n    period: 4,\n    group: 8,\n    title: 'Iron',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 55.8452\n  },\n  {\n    number: 27,\n    label: 'Co',\n    period: 4,\n    group: 8,\n    title: 'Cobalt',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 58.9331944\n  },\n  {\n    number: 28,\n    label: 'Ni',\n    period: 4,\n    group: 8,\n    title: 'Nickel',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 58.69344\n  },\n  {\n    number: 29,\n    label: 'Cu',\n    period: 4,\n    group: 1,\n    title: 'Copper',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 63.5463\n  },\n  {\n    number: 30,\n    label: 'Zn',\n    period: 4,\n    group: 2,\n    title: 'Zinc',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 65.382\n  },\n  {\n    number: 31,\n    label: 'Ga',\n    period: 4,\n    group: 3,\n    title: 'Gallium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 69.7231\n  },\n  {\n    number: 32,\n    label: 'Ge',\n    period: 4,\n    group: 4,\n    title: 'Germanium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 72.6308\n  },\n  {\n    number: 33,\n    label: 'As',\n    period: 4,\n    group: 5,\n    title: 'Arsenic',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 74.9215956\n  },\n  {\n    number: 34,\n    label: 'Se',\n    period: 4,\n    group: 6,\n    leftH: true,\n    title: 'Selenium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 78.9718\n  },\n  {\n    number: 35,\n    label: 'Br',\n    period: 4,\n    group: 7,\n    leftH: true,\n    title: 'Bromine',\n    state: 'liquid',\n    origin: 'primordial',\n    type: 'halogen',\n    mass: 79.904\n  },\n  {\n    number: 36,\n    label: 'Kr',\n    period: 4,\n    group: 8,\n    title: 'Krypton',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 83.7982\n  },\n  {\n    number: 37,\n    label: 'Rb',\n    period: 5,\n    group: 1,\n    title: 'Rubidium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 85.46783\n  },\n  {\n    number: 38,\n    label: 'Sr',\n    period: 5,\n    group: 2,\n    title: 'Strontium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 87.621\n  },\n  {\n    number: 39,\n    label: 'Y',\n    period: 5,\n    group: 3,\n    title: 'Yttrium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 88.905842\n  },\n  {\n    number: 40,\n    label: 'Zr',\n    period: 5,\n    group: 4,\n    title: 'Zirconium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 91.2242\n  },\n  {\n    number: 41,\n    label: 'Nb',\n    period: 5,\n    group: 5,\n    title: 'Niobium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 92.906372\n  },\n  {\n    number: 42,\n    label: 'Mo',\n    period: 5,\n    group: 6,\n    title: 'Molybdenum',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 95.951\n  },\n  {\n    number: 43,\n    label: 'Tc',\n    period: 5,\n    group: 7,\n    title: 'Technetium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'transition',\n    mass: 98\n  },\n  {\n    number: 44,\n    label: 'Ru',\n    period: 5,\n    group: 8,\n    title: 'Ruthenium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 101.072\n  },\n  {\n    number: 45,\n    label: 'Rh',\n    period: 5,\n    group: 8,\n    title: 'Rhodium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 102.905502\n  },\n  {\n    number: 46,\n    label: 'Pd',\n    period: 5,\n    group: 8,\n    title: 'Palladium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 106.421\n  },\n  {\n    number: 47,\n    label: 'Ag',\n    period: 5,\n    group: 1,\n    title: 'Silver',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 107.86822\n  },\n  {\n    number: 48,\n    label: 'Cd',\n    period: 5,\n    group: 2,\n    title: 'Cadmium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 112.4144\n  },\n  {\n    number: 49,\n    label: 'In', // 49\n    period: 5,\n    group: 3,\n    title: 'Indium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 114.8181\n  },\n  {\n    number: 50,\n    label: 'Sn',\n    period: 5,\n    group: 4,\n    title: 'Tin',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 118.7107\n  },\n  {\n    number: 51,\n    label: 'Sb',\n    period: 5,\n    group: 5,\n    title: 'Antimony',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 121.7601\n  },\n  {\n    number: 52,\n    label: 'Te',\n    period: 5,\n    group: 6,\n    title: 'Tellurium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 127.603\n  },\n  {\n    number: 53,\n    label: 'I',\n    period: 5,\n    group: 7,\n    leftH: true,\n    title: 'Iodine',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'halogen',\n    mass: 126.904473\n  },\n  {\n    number: 54,\n    label: 'Xe',\n    period: 5,\n    group: 8,\n    title: 'Xenon',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 131.2936\n  },\n  {\n    number: 55,\n    label: 'Cs',\n    period: 6,\n    group: 1,\n    title: 'Caesium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 132.905451966\n  },\n  {\n    number: 56,\n    label: 'Ba',\n    period: 6,\n    group: 2,\n    title: 'Barium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 137.3277\n  },\n  {\n    number: 57,\n    label: 'La',\n    period: 6,\n    group: 3,\n    title: 'Lanthanum',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 138.905477\n  },\n  {\n    number: 58,\n    label: 'Ce',\n    period: 6,\n    group: 3,\n    title: 'Cerium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 140.1161\n  },\n  {\n    number: 59,\n    label: 'Pr',\n    period: 6,\n    group: 3,\n    title: 'Praseodymium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 140.907662\n  },\n  {\n    number: 60,\n    label: 'Nd',\n    period: 6,\n    group: 3,\n    title: 'Neodymium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 144.2423\n  },\n  {\n    number: 61,\n    label: 'Pm',\n    period: 6,\n    group: 3,\n    title: 'Promethium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'lanthanide',\n    mass: 145\n  },\n  {\n    number: 62,\n    label: 'Sm',\n    period: 6,\n    group: 3,\n    title: 'Samarium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 150.362\n  },\n  {\n    number: 63,\n    label: 'Eu',\n    period: 6,\n    group: 3,\n    title: 'Europium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 151.9641\n  },\n  {\n    number: 64,\n    label: 'Gd',\n    period: 6,\n    group: 3,\n    title: 'Gadolinium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 157.253\n  },\n  {\n    number: 65,\n    label: 'Tb',\n    period: 6,\n    group: 3,\n    title: 'Terbium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 158.925352\n  },\n  {\n    number: 66,\n    label: 'Dy',\n    period: 6,\n    group: 3,\n    title: 'Dysprosium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 162.5001\n  },\n  {\n    number: 67,\n    label: 'Ho',\n    period: 6,\n    group: 3,\n    title: 'Holmium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 164.930332\n  },\n  {\n    number: 68,\n    label: 'Er',\n    period: 6,\n    group: 3,\n    title: 'Erbium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 167.2593\n  },\n  {\n    number: 69,\n    label: 'Tm',\n    period: 6,\n    group: 3,\n    title: 'Thulium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 168.934222\n  },\n  {\n    number: 70,\n    label: 'Yb',\n    period: 6,\n    group: 3,\n    title: 'Ytterbium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 173.0451\n  },\n  {\n    number: 71,\n    label: 'Lu',\n    period: 6,\n    group: 3,\n    title: 'Lutetium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 174.96681\n  },\n  {\n    number: 72,\n    label: 'Hf',\n    period: 6,\n    group: 4,\n    title: 'Hafnium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 178.492\n  },\n  {\n    number: 73,\n    label: 'Ta',\n    period: 6,\n    group: 5,\n    title: 'Tantalum',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 180.947882\n  },\n  {\n    number: 74,\n    label: 'W',\n    period: 6,\n    group: 6,\n    title: 'Tungsten',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 183.841\n  },\n  {\n    number: 75,\n    label: 'Re',\n    period: 6,\n    group: 7,\n    title: 'Rhenium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 186.2071\n  },\n  {\n    number: 76,\n    label: 'Os',\n    period: 6,\n    group: 8,\n    title: 'Osmium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 190.233\n  },\n  {\n    number: 77,\n    label: 'Ir',\n    period: 6,\n    group: 8,\n    title: 'Iridium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 192.2173\n  },\n  {\n    number: 78,\n    label: 'Pt',\n    period: 6,\n    group: 8,\n    title: 'Platinum',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 195.0849\n  },\n  {\n    number: 79,\n    label: 'Au',\n    period: 6,\n    group: 1,\n    title: 'Gold',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 196.9665695\n  },\n  {\n    number: 80,\n    label: 'Hg',\n    period: 6,\n    group: 2,\n    title: 'Mercury',\n    state: 'liquid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 200.5923\n  },\n  {\n    number: 81,\n    label: 'Tl',\n    period: 6,\n    group: 3,\n    title: 'Thallium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 204.38\n  },\n  {\n    number: 82,\n    label: 'Pb',\n    period: 6,\n    group: 4,\n    title: 'Lead',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 207.21\n  },\n  {\n    number: 83,\n    label: 'Bi',\n    period: 6,\n    group: 5,\n    title: 'Bismuth',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 208.980401\n  },\n  {\n    number: 84,\n    label: 'Po',\n    period: 6,\n    group: 6,\n    title: 'Polonium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'metalloid',\n    mass: 209\n  },\n  {\n    number: 85,\n    label: 'At',\n    period: 6,\n    group: 7,\n    title: 'Astatine',\n    state: 'solid',\n    origin: 'decay',\n    type: 'halogen',\n    mass: 210\n  },\n  {\n    number: 86,\n    label: 'Rn',\n    period: 6,\n    group: 8,\n    title: 'Radon',\n    state: 'gas',\n    origin: 'decay',\n    type: 'noble',\n    mass: 222\n  },\n  {\n    number: 87,\n    label: 'Fr',\n    period: 7,\n    group: 1,\n    title: 'Francium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'alkali',\n    mass: 223\n  },\n  {\n    number: 88,\n    label: 'Ra',\n    period: 7,\n    group: 2,\n    title: 'Radium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'alkaline-earth',\n    mass: 226\n  },\n  {\n    number: 89,\n    label: 'Ac',\n    period: 7,\n    group: 3,\n    title: 'Actinium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'transition',\n    mass: 227\n  },\n  {\n    number: 90,\n    label: 'Th',\n    period: 7,\n    group: 3,\n    title: 'Thorium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'actinide',\n    mass: 232.03774\n  },\n  {\n    number: 91,\n    label: 'Pa',\n    period: 7,\n    group: 3,\n    title: 'Protactinium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'actinide',\n    mass: 231.035882\n  },\n  {\n    number: 92,\n    label: 'U',\n    period: 7,\n    group: 3,\n    title: 'Uranium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'actinide',\n    mass: 238.028913\n  },\n  {\n    number: 93,\n    label: 'Np',\n    period: 7,\n    group: 3,\n    title: 'Neptunium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'actinide',\n    mass: 237\n  },\n  {\n    number: 94,\n    label: 'Pu',\n    period: 7,\n    group: 3,\n    title: 'Plutonium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'actinide',\n    mass: 244\n  },\n  {\n    number: 95,\n    label: 'Am',\n    period: 7,\n    group: 3,\n    title: 'Americium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 243\n  },\n  {\n    number: 96,\n    label: 'Cm',\n    period: 7,\n    group: 3,\n    title: 'Curium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 247\n  },\n  {\n    number: 97,\n    label: 'Bk',\n    period: 7,\n    group: 3,\n    title: 'Berkelium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 247\n  },\n  {\n    number: 98,\n    label: 'Cf',\n    period: 7,\n    group: 3,\n    title: 'Californium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 251\n  },\n  {\n    number: 99,\n    label: 'Es',\n    period: 7,\n    group: 3,\n    title: 'Einsteinium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 252\n  },\n  {\n    number: 100,\n    label: 'Fm',\n    period: 7,\n    group: 3,\n    title: 'Fermium',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 257\n  },\n  {\n    number: 101,\n    label: 'Md',\n    period: 7,\n    group: 3,\n    title: 'Mendelevium',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 258\n  },\n  {\n    number: 102,\n    label: 'No',\n    period: 7,\n    group: 3,\n    title: 'Nobelium',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 259\n  },\n  {\n    number: 103,\n    label: 'Lr',\n    period: 7,\n    group: 3,\n    title: 'Lawrencium',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 266\n  },\n  {\n    number: 104,\n    label: 'Rf',\n    period: 7,\n    group: 4,\n    title: 'Rutherfordium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 267\n  },\n  {\n    number: 105,\n    label: 'Db',\n    period: 7,\n    group: 5,\n    title: 'Dubnium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 268\n  },\n  {\n    number: 106,\n    label: 'Sg',\n    period: 7,\n    group: 6,\n    title: 'Seaborgium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 269\n  },\n  {\n    number: 107,\n    label: 'Bh',\n    period: 7,\n    group: 7,\n    title: 'Bohrium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 270\n  },\n  {\n    number: 108,\n    label: 'Hs',\n    period: 7,\n    group: 8,\n    title: 'Hassium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 269\n  },\n  {\n    number: 109,\n    label: 'Mt',\n    period: 7,\n    group: 8,\n    title: 'Meitnerium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 278\n  },\n  {\n    number: 110,\n    label: 'Ds',\n    period: 7,\n    group: 8,\n    title: 'Darmstadtium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 281\n  },\n  {\n    number: 111,\n    label: 'Rg',\n    period: 7,\n    group: 1,\n    title: 'Roentgenium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 282\n  },\n  {\n    number: 112,\n    label: 'Cn',\n    period: 7,\n    group: 2,\n    title: 'Copernicium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 285\n  },\n  {\n    number: 113,\n    label: 'Nh',\n    period: 7,\n    group: 3,\n    title: 'Nihonium',\n    origin: 'synthetic',\n    type: 'post-transition',\n    mass: 286\n  },\n  {\n    number: 114,\n    label: 'Fl',\n    period: 7,\n    group: 4,\n    title: 'Flerovium',\n    origin: 'synthetic',\n    type: 'post-transition',\n    mass: 289\n  },\n  {\n    number: 115,\n    label: 'Mc',\n    period: 7,\n    group: 5,\n    title: 'Moscovium',\n    origin: 'synthetic',\n    type: 'post-transition',\n    mass: 289\n  },\n  {\n    number: 116,\n    label: 'Lv',\n    period: 7,\n    group: 6,\n    title: 'Livermorium',\n    origin: 'synthetic',\n    type: 'post-transition',\n    mass: 293\n  },\n  {\n    number: 117,\n    label: 'Ts',\n    period: 7,\n    group: 7,\n    title: 'Tennessine',\n    origin: 'synthetic',\n    type: 'halogen',\n    mass: 294\n  },\n  {\n    number: 118,\n    label: 'Og',\n    period: 7,\n    group: 8,\n    title: 'Oganesson',\n    origin: 'synthetic',\n    type: 'noble',\n    mass: 294\n  }\n]\n\nconst elementsMap = elementsArray.reduce((acc, element) => {\n  acc.set(element.label, element)\n  acc.set(element.number, element)\n  return acc\n}, new Map<string | number, Element>())\n\nexport const Elements = {\n  get: (key: number | string): Element | undefined => elementsMap.get(key),\n  filter: (predicate: (element: Element) => boolean): Array<Element> => {\n    return elementsArray.filter(predicate)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport type GenItem = {\n  label: string\n  description?: string\n}\n\nexport type GenItemSet = {\n  items: GenItem[]\n  displayName?: string\n}\n\nexport type GenGroup = {\n  itemSets: GenItemSet[]\n  title: string\n}\n\nexport type GenericsType = {\n  [index: string]: GenGroup & { subGroups?: GenericsType }\n}\n\nexport const Generics: GenericsType = {\n  'atoms-gen': {\n    title: 'Atom Generics',\n    itemSets: [\n      {\n        displayName: 'any atom',\n        items: [\n          { label: 'A', description: 'Any atom except hydrogen' },\n          { label: 'AH', description: 'Any atom, including hydrogen' }\n        ]\n      },\n      {\n        displayName: 'except C or H',\n        items: [\n          {\n            label: 'Q',\n            description: 'Any heteroatom (any atom except C or H)'\n          },\n          { label: 'QH', description: 'Any atom except C' }\n        ]\n      },\n      {\n        displayName: 'any metal',\n        items: [\n          { label: 'M', description: 'Any metal' },\n          { label: 'MH', description: 'Any metal or hydrogen' }\n        ]\n      },\n      {\n        displayName: 'any halogen',\n        items: [\n          { label: 'X', description: 'Any halogen' },\n          { label: 'XH', description: 'Any halogen or hydrogen' }\n        ]\n      }\n    ]\n  },\n  'special-nodes': {\n    title: 'Special Nodes',\n    itemSets: [\n      {\n        items: [\n          { label: 'H+', description: 'Proton' },\n          { label: 'D', description: 'Deuterium' },\n          { label: 'T', description: 'Tritium' },\n          { label: 'R', description: 'Pseudoatom' },\n          { label: 'Pol', description: 'Polymer Bead' }\n        ]\n      }\n    ]\n  },\n\n  'group-gen': {\n    title: 'Group Generics',\n    itemSets: [\n      {\n        items: [\n          {\n            label: 'G',\n            description: 'Any group'\n          },\n          {\n            label: 'GH',\n            description: 'Any group or hydrogen'\n          }\n        ]\n      },\n      {\n        items: [\n          {\n            label: 'G*',\n            description: 'Any group with a ring closure'\n          },\n          {\n            label: 'GH*',\n            description: 'Any group of hydrogen with a ring closure'\n          }\n        ]\n      }\n    ],\n    subGroups: {\n      'group-acyclic': {\n        title: 'Acyclic',\n        itemSets: [\n          {\n            items: [\n              { label: 'ACY', description: 'Acyclic group' },\n              { label: 'ACH', description: 'Acyclic group or hydrogen' }\n            ]\n          }\n        ],\n        subGroups: {\n          'acyclic-carbo': {\n            title: 'Acyclic Carbo',\n            itemSets: [\n              {\n                items: [\n                  { label: 'ABC', description: 'Carbocyclic' },\n                  { label: 'ABH', description: 'Carbocyclic of hydrogen' }\n                ]\n              },\n              {\n                displayName: 'alkynyl',\n                items: [\n                  { label: 'AYL', description: 'Alkynyl' },\n                  { label: 'AYH', description: 'Alkynyl or hydrogen' }\n                ]\n              },\n              {\n                displayName: 'alkyl',\n                items: [\n                  { label: 'ALK', description: 'Alkyl' },\n                  { label: 'ALH', description: 'Alkyl or hydrogen' }\n                ]\n              },\n              {\n                displayName: 'alkenyl',\n                items: [\n                  { label: 'AEL', description: 'Alkenyl' },\n                  { label: 'AEH', description: 'Alkenyl or hydrogen' }\n                ]\n              }\n            ]\n          },\n          'acyclic-hetero': {\n            title: 'Acyclic Hetero',\n            itemSets: [\n              {\n                items: [\n                  { label: 'AHC', description: 'Heteroacyclic' },\n                  { label: 'AHH', description: 'Heterocyclic or hydrogen' }\n                ]\n              },\n              {\n                items: [\n                  { label: 'AOX', description: 'Alkoxy' },\n                  { label: 'AOH', description: 'Alkoxy or hydrogen' }\n                ]\n              }\n            ]\n          }\n        }\n      },\n      'group-cyclic': {\n        title: 'Cyclic',\n        itemSets: [\n          {\n            items: [\n              { label: 'CYC', description: 'Cyclic group' },\n              { label: 'CYH', description: 'Cyclic group or hydrogen' }\n            ]\n          },\n          {\n            displayName: 'no carbon',\n            items: [\n              {\n                label: 'CXX',\n                description: 'Cyclic group with no Carbon atoms'\n              },\n              {\n                label: 'CXH',\n                description: 'Cyclic group with no Carbon atoms or hydrogen'\n              }\n            ]\n          }\n        ],\n        subGroups: {\n          'cyclic-carbo': {\n            title: 'Cyclic Carbo',\n            itemSets: [\n              {\n                items: [\n                  { label: 'CBC', description: 'Carbocyclic derivatives' },\n                  {\n                    label: 'CBH',\n                    description: 'Carbocyclic derivatives or hydrogen'\n                  }\n                ]\n              },\n              {\n                displayName: 'atyl',\n                items: [\n                  { label: 'ARY', description: 'Any aryl group' },\n                  { label: 'ARH', description: 'Any aryl group or hydrogen' }\n                ]\n              },\n              {\n                displayName: 'cycloalkyl',\n                items: [\n                  { label: 'CAL', description: 'Any cycloalkyl group' },\n                  {\n                    label: 'CAH',\n                    description: 'Any cycloalkyl group or hydrogen'\n                  }\n                ]\n              },\n              {\n                displayName: 'cycloalkenyl',\n                items: [\n                  { label: 'CEL', description: 'Any cyloalkenyl group' },\n                  {\n                    label: 'CEH',\n                    description: 'Any cyloalkenyl group or hydrogen'\n                  }\n                ]\n              }\n            ]\n          },\n          'cyclic-hetero': {\n            title: 'Cyclic Hetero',\n            itemSets: [\n              {\n                items: [\n                  { label: 'CHC', description: 'Heterocyclic group' },\n                  {\n                    label: 'CHH',\n                    description: 'Heterocyclic group or hydrogen'\n                  }\n                ]\n              },\n              {\n                displayName: 'hetero aryl',\n                items: [\n                  { label: 'HAR', description: 'Heteroaryl group' },\n                  { label: 'HAH', description: 'Heteroaryl group or hydrogen' }\n                ]\n              }\n            ]\n          }\n        }\n      }\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ElementLabel, Elements } from 'domain/constants'\n\nexport interface AtomListParams {\n  readonly notList: boolean\n  readonly ids: Array<number>\n}\n\nexport class AtomList {\n  notList: boolean\n  ids: Array<number>\n\n  constructor(params: AtomListParams) {\n    this.notList = params.notList\n    this.ids = params.ids\n  }\n\n  labelList() {\n    const labels: Array<ElementLabel> = []\n    for (const id of this.ids) {\n      const currenElement = Elements.get(id)\n      currenElement && labels.push(currenElement!.label)\n    }\n\n    return labels\n  }\n\n  label() {\n    let label = '[' + this.labelList().join(',') + ']'\n    if (this.notList) {\n      label = '!' + label\n    }\n    return label\n  }\n\n  equals(atomList: AtomList) {\n    return (\n      this.notList === atomList.notList &&\n      (this.ids || []).sort().toString() ===\n        (atomList.ids || []).sort().toString()\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport assert from 'assert'\n\nexport interface Point {\n  x?: number\n  y?: number\n  z?: number\n}\nexport class Vec2 {\n  static ZERO = new Vec2(0, 0)\n  static UNIT = new Vec2(1, 1)\n\n  x: number\n  y: number\n  z: number\n\n  constructor(point: Point)\n  constructor(x?: number, y?: number, z?: number)\n  constructor(...args: Array<any>) {\n    if (args.length === 0) {\n      this.x = 0\n      this.y = 0\n      this.z = 0\n    } else if (arguments.length === 1) {\n      this.x = parseFloat(args[0].x || 0)\n      this.y = parseFloat(args[0].y || 0)\n      this.z = parseFloat(args[0].z || 0)\n    } else if (arguments.length === 2) {\n      this.x = parseFloat(args[0] || 0)\n      this.y = parseFloat(args[1] || 0)\n      this.z = 0\n    } else if (arguments.length === 3) {\n      this.x = parseFloat(args[0])\n      this.y = parseFloat(args[1])\n      this.z = parseFloat(args[2])\n    } else {\n      throw new Error('Vec2(): invalid arguments')\n    }\n  }\n\n  static dist(a: Vec2, b: Vec2): number {\n    return Vec2.diff(a, b).length()\n  }\n\n  static max(v1: Vec2, v2: Vec2): Vec2 {\n    return new Vec2(\n      Math.max(v1.x, v2.x),\n      Math.max(v1.y, v2.y),\n      Math.max(v1.z, v2.z)\n    )\n  }\n\n  static min(v1: Vec2, v2: Vec2): Vec2 {\n    return new Vec2(\n      Math.min(v1.x, v2.x),\n      Math.min(v1.y, v2.y),\n      Math.min(v1.z, v2.z)\n    )\n  }\n\n  static sum(v1: Vec2, v2: Vec2): Vec2 {\n    return new Vec2(v1.x + v2.x, v1.y + v2.y, v1.z + v2.z)\n  }\n\n  static dot(v1: Vec2, v2: Vec2): number {\n    return v1.x * v2.x + v1.y * v2.y\n  }\n\n  static cross(v1: Vec2, v2: Vec2): number {\n    return v1.x * v2.y - v1.y * v2.x\n  }\n\n  static angle(v1: Vec2, v2: Vec2): number {\n    return Math.atan2(Vec2.cross(v1, v2), Vec2.dot(v1, v2))\n  }\n\n  static diff(v1: Vec2, v2: Vec2): Vec2 {\n    return new Vec2(v1.x - v2.x, v1.y - v2.y, v1.z - v2.z)\n  }\n\n  // assume arguments v1, f1, v2, f2, v3, f3, etc.\n  // where v[i] are vectors and f[i] are corresponding coefficients\n  static lc(...args: Array<Vec2 | number>): Vec2 {\n    let v = new Vec2()\n    for (let i = 0; i < arguments.length / 2; ++i) {\n      v = v.addScaled(args[2 * i] as Vec2, args[2 * i + 1] as number)\n    }\n    return v\n  }\n\n  static lc2(v1: Vec2, f1: number, v2: Vec2, f2: number): Vec2 {\n    return new Vec2(\n      v1.x * f1 + v2.x * f2,\n      v1.y * f1 + v2.y * f2,\n      v1.z * f1 + v2.z * f2\n    )\n  }\n\n  static centre(v1: Vec2, v2: Vec2) {\n    return Vec2.lc2(v1, 0.5, v2, 0.5)\n  }\n\n  length(): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y)\n  }\n\n  equals(v: Vec2): boolean {\n    return this.x === v.x && this.y === v.y && this.z === v.z\n  }\n\n  add(v: Vec2): Vec2 {\n    return new Vec2(this.x + v.x, this.y + v.y, this.z + v.z)\n  }\n\n  add_(v: Vec2): void {\n    this.x += v.x\n    this.y += v.y\n    this.z += v.z\n  }\n\n  get_xy0(): Vec2 {\n    return new Vec2(this.x, this.y)\n  }\n\n  sub(v: Vec2): Vec2 {\n    return new Vec2(this.x - v.x, this.y - v.y, this.z - v.z)\n  }\n\n  scaled(s: number): Vec2 {\n    return new Vec2(this.x * s, this.y * s, this.z * s)\n  }\n\n  negated(): Vec2 {\n    return new Vec2(-this.x, -this.y, -this.z)\n  }\n\n  yComplement(y1: number): Vec2 {\n    y1 = y1 || 0\n    return new Vec2(this.x, y1 - this.y, this.z)\n  }\n\n  addScaled(v: Vec2, f: number): Vec2 {\n    return new Vec2(this.x + v.x * f, this.y + v.y * f, this.z + v.z * f)\n  }\n\n  normalized(): Vec2 {\n    return this.scaled(1 / this.length())\n  }\n\n  normalize(): boolean {\n    const l = this.length()\n\n    if (l < 0.000001) return false\n\n    this.x /= l\n    this.y /= l\n\n    return true\n  }\n\n  turnLeft(): Vec2 {\n    return new Vec2(-this.y, this.x, this.z)\n  }\n\n  coordStr(): string {\n    return this.x.toString() + ' , ' + this.y.toString()\n  }\n\n  toString(): string {\n    return '(' + this.x.toFixed(2) + ',' + this.y.toFixed(2) + ')'\n  }\n\n  max(v: Vec2): Vec2 {\n    assert(v != null)\n\n    return Vec2.max(this, v)\n  }\n\n  min(v: Vec2): Vec2 {\n    return Vec2.min(this, v)\n  }\n\n  ceil(): Vec2 {\n    return new Vec2(Math.ceil(this.x), Math.ceil(this.y), Math.ceil(this.z))\n  }\n\n  floor(): Vec2 {\n    return new Vec2(Math.floor(this.x), Math.floor(this.y), Math.floor(this.z))\n  }\n\n  rotate(angle: number) {\n    const sin = Math.sin(angle)\n    const cos = Math.cos(angle)\n\n    return this.rotateSC(sin, cos)\n  }\n\n  rotateSC(sin: number, cos: number): Vec2 {\n    assert(sin === 0 || !!sin)\n    assert(cos === 0 || !!cos)\n\n    return new Vec2(\n      this.x * cos - this.y * sin,\n      this.x * sin + this.y * cos,\n      this.z\n    )\n  }\n\n  oxAngle(): number {\n    return Math.atan2(this.y, this.x)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport class Pile<TValue = any> extends Set<TValue> {\n  // TODO: it's used only in dfs.js in one place in some strange way.\n  // Should be removed after dfs.js refactoring\n  find(predicate: (item: TValue) => boolean) {\n    for (const item of this) {\n      if (predicate(item)) return item\n    }\n\n    return null\n  }\n\n  equals(setB: Pile): boolean {\n    return this.isSuperset(setB) && setB.isSuperset(this)\n  }\n\n  isSuperset(subset: Pile): boolean {\n    for (const item of subset) {\n      if (!this.has(item)) return false\n    }\n\n    return true\n  }\n\n  filter(expression: (arg: TValue) => boolean): Pile<TValue> {\n    return new Pile(Array.from(this).filter(expression))\n  }\n\n  union(setB: Pile): Pile<TValue> {\n    const union = new Pile(this)\n\n    for (const item of setB) union.add(item)\n\n    return union\n  }\n\n  intersection(setB: Pile): Pile<TValue> {\n    const thisSet = new Pile(this)\n    return new Pile([...thisSet].filter((item) => setB.has(item)))\n  }\n\n  /**\n   * Union multiple sets which have intersections\n   * @example ```\n   * const setA = new Pile([0, 1])\n   * const setB = new Pile([1, 2])\n   * const setC = new Pile([2, 3])\n   * const setD = new Pile([4, 5])\n   * console.log(Pile.unionMultiple([setA, setB, setC, setD]))\n   * // [{0, 1, 2, 3}, {4, 5}]\n   * ```\n   */\n  static unionIntersections<T>(sets: Array<Pile<T>>): Array<Pile<T>> {\n    let unionized = false\n\n    // Union two of sets\n    const setsToReturn = sets.reduce((prevSets, curSet) => {\n      let isCurSetMerged = false\n\n      const newSets = prevSets.map((set) => {\n        const intersec = set.intersection(curSet)\n        if (intersec.size > 0) {\n          unionized = true\n          isCurSetMerged = true\n          return set.union(curSet)\n        }\n        return set\n      })\n\n      if (!isCurSetMerged) newSets.push(curSet)\n      return newSets\n    }, new Array<Pile<T>>())\n\n    // Recursively union two of sets === union all sets\n    return unionized ? Pile.unionIntersections(setsToReturn) : setsToReturn\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { AtomList, AtomListParams } from './atomList'\nimport { Point, Vec2 } from './vec2'\n\nimport { Elements } from 'domain/constants'\nimport { Pile } from './pile'\n\nfunction getValueOrDefault<T>(value: T | undefined, defaultValue: T): T {\n  return typeof value !== 'undefined' ? value : defaultValue\n}\n\nfunction isCorrectPseudo(label) {\n  return (\n    !Elements.get(label) && label !== 'L' && label !== 'L#' && label !== 'R#'\n  )\n}\n\nfunction getPseudo(label: string) {\n  return isCorrectPseudo(label) ? label : ''\n}\n\nexport function radicalElectrons(radical: any) {\n  radical -= 0\n  if (radical === Atom.PATTERN.RADICAL.DOUPLET) return 1\n  else if (\n    radical === Atom.PATTERN.RADICAL.SINGLET ||\n    radical === Atom.PATTERN.RADICAL.TRIPLET\n  ) {\n    return 2\n  } else {\n    return 0\n  }\n}\n\nexport enum StereoLabel {\n  Abs = 'abs',\n  And = '&',\n  Or = 'or'\n}\n\nexport interface AtomAttributes {\n  stereoParity?: number\n  stereoLabel?: string | null\n  exactChangeFlag?: number\n  rxnFragmentType?: number\n  invRet?: number\n  aam?: number\n  hCount?: number\n  unsaturatedAtom?: number\n  substitutionCount?: number\n  ringBondCount?: number\n  explicitValence?: number\n  attpnt?: any\n  rglabel?: string | null\n  charge?: number\n  radical?: number\n  isotope?: number\n  alias?: string | null\n  pseudo?: string\n  atomList?: AtomListParams | null\n  label: string\n  fragment?: number\n  pp?: Point\n  implicitH?: number\n}\n\nexport class Atom {\n  static PATTERN = {\n    RADICAL: {\n      NONE: 0,\n      SINGLET: 1,\n      DOUPLET: 2,\n      TRIPLET: 3\n    },\n    STEREO_PARITY: {\n      NONE: 0,\n      ODD: 1,\n      EVEN: 2,\n      EITHER: 3\n    }\n  }\n\n  // TODO: rename\n  static attrlist = {\n    alias: null,\n    label: 'C',\n    isotope: 0,\n    radical: 0,\n    charge: 0,\n    explicitValence: -1,\n    ringBondCount: 0,\n    substitutionCount: 0,\n    unsaturatedAtom: 0,\n    hCount: 0,\n    atomList: null,\n    invRet: 0,\n    exactChangeFlag: 0,\n    rglabel: null,\n    attpnt: null,\n    aam: 0,\n    // enhanced stereo\n    stereoLabel: null,\n    stereoParity: 0\n  }\n\n  label: string\n  fragment: number\n  atomList: AtomList | null\n  attpnt: any\n  isotope: number\n  hCount: number\n  radical: number\n  charge: number\n  explicitValence: number\n  ringBondCount: number\n  unsaturatedAtom: number\n  substitutionCount: number\n  valence: number\n  implicitH: number\n  pp: Vec2\n  neighbors: Array<number>\n  sgs: Pile<number>\n  badConn: boolean\n  alias: string | null\n  rglabel: string | null\n  aam: number\n  invRet: number\n  exactChangeFlag: number\n  rxnFragmentType: number\n  stereoLabel?: string | null\n  stereoParity: number\n  hasImplicitH?: boolean\n  pseudo!: string\n\n  constructor(attributes: AtomAttributes) {\n    this.label = attributes.label\n    this.fragment = getValueOrDefault(attributes.fragment, -1)\n    this.alias = getValueOrDefault(attributes.alias, Atom.attrlist.alias)\n    this.isotope = getValueOrDefault(attributes.isotope, Atom.attrlist.isotope)\n    this.radical = getValueOrDefault(attributes.radical, Atom.attrlist.radical)\n    this.charge = getValueOrDefault(attributes.charge, Atom.attrlist.charge)\n    this.rglabel = getValueOrDefault(attributes.rglabel, Atom.attrlist.rglabel)\n    this.attpnt = getValueOrDefault(attributes.attpnt, Atom.attrlist.attpnt)\n    this.explicitValence = getValueOrDefault(\n      attributes.explicitValence,\n      Atom.attrlist.explicitValence\n    )\n\n    this.valence = 0\n    this.implicitH = attributes.implicitH || 0 // implicitH is not an attribute\n    this.pp = attributes.pp ? new Vec2(attributes.pp) : new Vec2()\n\n    // sgs should only be set when an atom is added to an s-group by an appropriate method,\n    //   or else a copied atom might think it belongs to a group, but the group be unaware of the atom\n    // TODO: make a consistency check on atom/s-group assignments\n    this.sgs = new Pile()\n\n    // query\n    this.ringBondCount = getValueOrDefault(\n      attributes.ringBondCount,\n      Atom.attrlist.ringBondCount\n    )\n    this.substitutionCount = getValueOrDefault(\n      attributes.substitutionCount,\n      Atom.attrlist.substitutionCount\n    )\n    this.unsaturatedAtom = getValueOrDefault(\n      attributes.unsaturatedAtom,\n      Atom.attrlist.unsaturatedAtom\n    )\n    this.hCount = getValueOrDefault(attributes.hCount, Atom.attrlist.hCount)\n\n    // reaction\n    this.aam = getValueOrDefault(attributes.aam, Atom.attrlist.aam)\n    this.invRet = getValueOrDefault(attributes.invRet, Atom.attrlist.invRet)\n    this.exactChangeFlag = getValueOrDefault(\n      attributes.exactChangeFlag,\n      Atom.attrlist.exactChangeFlag\n    )\n    this.rxnFragmentType = getValueOrDefault(attributes.rxnFragmentType, -1)\n\n    // stereo\n    this.stereoLabel = getValueOrDefault(\n      attributes.stereoLabel,\n      Atom.attrlist.stereoLabel\n    )\n    this.stereoParity = getValueOrDefault(\n      attributes.stereoParity,\n      Atom.attrlist.stereoParity\n    )\n\n    this.atomList = attributes.atomList\n      ? new AtomList(attributes.atomList)\n      : null\n    this.neighbors = [] // set of half-bonds having this atom as their origin\n    this.badConn = false\n\n    Object.defineProperty(this, 'pseudo', {\n      enumerable: true,\n      get: function () {\n        return getPseudo(this.label)\n      },\n      set: function (value) {\n        if (isCorrectPseudo(value)) {\n          this.label = value\n        }\n      }\n    })\n  }\n\n  static getAttrHash(atom: Atom) {\n    const attrs: any = {}\n    for (const attr in Atom.attrlist) {\n      if (typeof atom[attr] !== 'undefined') attrs[attr] = atom[attr]\n    }\n    return attrs\n  }\n\n  static attrGetDefault(attr: string) {\n    if (attr in Atom.attrlist) {\n      return Atom.attrlist[attr]\n    }\n  }\n\n  clone(fidMap: Map<number, number>): Atom {\n    const ret = new Atom(this)\n    if (fidMap && fidMap.has(this.fragment)) {\n      ret.fragment = fidMap.get(this.fragment)!\n    }\n    return ret\n  }\n\n  isQuery(): boolean {\n    return (\n      this.atomList !== null || this.label === 'A' || this.attpnt || this.hCount\n    )\n  }\n\n  pureHydrogen(): boolean {\n    return this.label === 'H' && this.isotope === 0\n  }\n\n  isPlainCarbon(): boolean {\n    return (\n      this.label === 'C' &&\n      this.isotope === 0 &&\n      this.radical === 0 &&\n      this.charge === 0 &&\n      this.explicitValence < 0 &&\n      this.ringBondCount === 0 &&\n      this.substitutionCount === 0 &&\n      this.unsaturatedAtom === 0 &&\n      this.hCount === 0 &&\n      !this.atomList\n    )\n  }\n\n  isPseudo(): boolean {\n    // TODO: handle reaxys generics separately\n    return !this.atomList && !this.rglabel && !Elements.get(this.label)\n  }\n\n  hasRxnProps(): boolean {\n    return !!(\n      this.invRet ||\n      this.exactChangeFlag ||\n      this.attpnt !== null ||\n      this.aam\n    )\n  }\n\n  calcValence(conn: number): boolean {\n    const label = this.label\n    const charge = this.charge\n    if (this.isQuery()) {\n      this.implicitH = 0\n      return true\n    }\n    const element = Elements.get(label)\n    if (!element) {\n      this.implicitH = 0\n      return true\n    }\n\n    const groupno = element.group\n    const rad = radicalElectrons(this.radical)\n    let valence = conn\n    let hyd = 0\n    const absCharge = Math.abs(charge)\n    if (groupno === 1) {\n      if (\n        label === 'H' ||\n        label === 'Li' ||\n        label === 'Na' ||\n        label === 'K' ||\n        label === 'Rb' ||\n        label === 'Cs' ||\n        label === 'Fr'\n      ) {\n        valence = 1\n        hyd = 1 - rad - conn - absCharge\n      }\n    } else if (groupno === 2) {\n      if (conn + rad + absCharge === 2 || conn + rad + absCharge === 0) {\n        valence = 2\n      } else hyd = -1\n    } else if (groupno === 3) {\n      if (label === 'B' || label === 'Al' || label === 'Ga' || label === 'In') {\n        if (charge === -1) {\n          valence = 4\n          hyd = 4 - rad - conn\n        } else {\n          valence = 3\n          hyd = 3 - rad - conn - absCharge\n        }\n      } else if (label === 'Tl') {\n        if (charge === -1) {\n          if (rad + conn <= 2) {\n            valence = 2\n            hyd = 2 - rad - conn\n          } else {\n            valence = 4\n            hyd = 4 - rad - conn\n          }\n        } else if (charge === -2) {\n          if (rad + conn <= 3) {\n            valence = 3\n            hyd = 3 - rad - conn\n          } else {\n            valence = 5\n            hyd = 5 - rad - conn\n          }\n        } else if (rad + conn + absCharge <= 1) {\n          valence = 1\n          hyd = 1 - rad - conn - absCharge\n        } else {\n          valence = 3\n          hyd = 3 - rad - conn - absCharge\n        }\n      }\n    } else if (groupno === 4) {\n      if (label === 'C' || label === 'Si' || label === 'Ge') {\n        valence = 4\n        hyd = 4 - rad - conn - absCharge\n      } else if (label === 'Sn' || label === 'Pb') {\n        if (conn + rad + absCharge <= 2) {\n          valence = 2\n          hyd = 2 - rad - conn - absCharge\n        } else {\n          valence = 4\n          hyd = 4 - rad - conn - absCharge\n        }\n      }\n    } else if (groupno === 5) {\n      if (label === 'N' || label === 'P') {\n        if (charge === 1) {\n          valence = 4\n          hyd = 4 - rad - conn\n        } else if (charge === 2) {\n          valence = 3\n          hyd = 3 - rad - conn\n        } else if (label === 'N' || rad + conn + absCharge <= 3) {\n          valence = 3\n          hyd = 3 - rad - conn - absCharge\n        } else {\n          // ELEM_P && rad + conn + absCharge > 3\n          valence = 5\n          hyd = 5 - rad - conn - absCharge\n        }\n      } else if (label === 'Bi' || label === 'Sb' || label === 'As') {\n        if (charge === 1) {\n          if (rad + conn <= 2 && label !== 'As') {\n            valence = 2\n            hyd = 2 - rad - conn\n          } else {\n            valence = 4\n            hyd = 4 - rad - conn\n          }\n        } else if (charge === 2) {\n          valence = 3\n          hyd = 3 - rad - conn\n        } else if (rad + conn <= 3) {\n          valence = 3\n          hyd = 3 - rad - conn - absCharge\n        } else {\n          valence = 5\n          hyd = 5 - rad - conn - absCharge\n        }\n      }\n    } else if (groupno === 6) {\n      if (label === 'O') {\n        if (charge >= 1) {\n          valence = 3\n          hyd = 3 - rad - conn\n        } else {\n          valence = 2\n          hyd = 2 - rad - conn - absCharge\n        }\n      } else if (label === 'S' || label === 'Se' || label === 'Po') {\n        if (charge === 1) {\n          if (conn <= 3) {\n            valence = 3\n            hyd = 3 - rad - conn\n          } else {\n            valence = 5\n            hyd = 5 - rad - conn\n          }\n        } else if (conn + rad + absCharge <= 2) {\n          valence = 2\n          hyd = 2 - rad - conn - absCharge\n        } else if (conn + rad + absCharge <= 4) {\n          // See examples in PubChem\n          // [S] : CID 16684216\n          // [Se]: CID 5242252\n          // [Po]: no example, just following ISIS/Draw logic here\n          valence = 4\n          hyd = 4 - rad - conn - absCharge\n        } else {\n          // See examples in PubChem\n          // [S] : CID 46937044\n          // [Se]: CID 59786\n          // [Po]: no example, just following ISIS/Draw logic here\n          valence = 6\n          hyd = 6 - rad - conn - absCharge\n        }\n      } else if (label === 'Te') {\n        if (charge === -1) {\n          if (conn <= 2) {\n            valence = 2\n            hyd = 2 - rad - conn - absCharge\n          }\n        } else if (charge === 0 || charge === 2) {\n          if (conn <= 2) {\n            valence = 2\n            hyd = 2 - rad - conn - absCharge\n          } else if (conn <= 4) {\n            valence = 4\n            hyd = 4 - rad - conn - absCharge\n          } else if (charge === 0 && conn <= 6) {\n            valence = 6\n            hyd = 6 - rad - conn - absCharge\n          } else {\n            hyd = -1\n          }\n        }\n      }\n    } else if (groupno === 7) {\n      if (label === 'F') {\n        valence = 1\n        hyd = 1 - rad - conn - absCharge\n      } else if (\n        label === 'Cl' ||\n        label === 'Br' ||\n        label === 'I' ||\n        label === 'At'\n      ) {\n        if (charge === 1) {\n          if (conn <= 2) {\n            valence = 2\n            hyd = 2 - rad - conn\n          } else if (conn === 3 || conn === 5 || conn >= 7) {\n            hyd = -1\n          }\n        } else if (charge === 0) {\n          if (conn <= 1) {\n            valence = 1\n            hyd = 1 - rad - conn\n            // While the halogens can have valence 3, they can not have\n            // hydrogens in that case.\n          } else if (conn === 2 || conn === 4 || conn === 6) {\n            if (rad === 1) {\n              valence = conn\n              hyd = 0\n            } else {\n              hyd = -1 // will throw an error in the end\n            }\n          } else if (conn > 7) {\n            hyd = -1 // will throw an error in the end\n          }\n        }\n      }\n    } else if (groupno === 8) {\n      if (conn + rad + absCharge === 0) valence = 1\n      else hyd = -1\n    }\n\n    this.valence = valence\n    this.implicitH = hyd\n    if (this.implicitH < 0) {\n      this.valence = conn\n      this.implicitH = 0\n      this.badConn = true\n      return false\n    }\n    return true\n  }\n\n  calcValenceMinusHyd(conn: number): number {\n    const charge = this.charge\n    const label = this.label\n    const element = Elements.get(this.label)\n    if (!element) {\n      // query atom, skip\n      this.implicitH = 0\n      return 0\n    }\n\n    const groupno = element.group\n    const rad = radicalElectrons(this.radical)\n\n    if (groupno === 3) {\n      if (label === 'B' || label === 'Al' || label === 'Ga' || label === 'In') {\n        if (charge === -1) {\n          if (rad + conn <= 4) return rad + conn\n        }\n      }\n    } else if (groupno === 5) {\n      if (label === 'N' || label === 'P') {\n        if (charge === 1) return rad + conn\n        if (charge === 2) return rad + conn\n      } else if (label === 'Sb' || label === 'Bi' || label === 'As') {\n        if (charge === 1) return rad + conn\n        else if (charge === 2) return rad + conn\n      }\n    } else if (groupno === 6) {\n      if (label === 'O') {\n        if (charge >= 1) return rad + conn\n      } else if (label === 'S' || label === 'Se' || label === 'Po') {\n        if (charge === 1) return rad + conn\n      }\n    } else if (groupno === 7) {\n      if (label === 'Cl' || label === 'Br' || label === 'I' || label === 'At') {\n        if (charge === 1) return rad + conn\n      }\n    }\n\n    return rad + conn + Math.abs(charge)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Pile } from './pile'\nimport { Struct } from './struct'\nimport { Vec2 } from './vec2'\n\nexport interface BondAttributes {\n  reactingCenterStatus?: number\n  topology?: number\n  stereo?: number\n  xxx?: string\n  type: number\n  end: number\n  begin: number\n}\n\nexport class Bond {\n  static PATTERN = {\n    TYPE: {\n      SINGLE: 1,\n      DOUBLE: 2,\n      TRIPLE: 3,\n      AROMATIC: 4,\n      SINGLE_OR_DOUBLE: 5,\n      SINGLE_OR_AROMATIC: 6,\n      DOUBLE_OR_AROMATIC: 7,\n      ANY: 8,\n      DATIVE: 9,\n      HYDROGEN: 10\n    },\n\n    STEREO: {\n      NONE: 0,\n      UP: 1,\n      EITHER: 4,\n      DOWN: 6,\n      CIS_TRANS: 3\n    },\n\n    TOPOLOGY: {\n      EITHER: 0,\n      RING: 1,\n      CHAIN: 2\n    },\n\n    REACTING_CENTER: {\n      NOT_CENTER: -1,\n      UNMARKED: 0,\n      CENTER: 1,\n      UNCHANGED: 2,\n      MADE_OR_BROKEN: 4,\n      ORDER_CHANGED: 8,\n      MADE_OR_BROKEN_AND_CHANGED: 12\n    }\n  }\n\n  static attrlist = {\n    type: Bond.PATTERN.TYPE.SINGLE,\n    stereo: Bond.PATTERN.STEREO.NONE,\n    topology: Bond.PATTERN.TOPOLOGY.EITHER,\n    reactingCenterStatus: Bond.PATTERN.REACTING_CENTER.UNMARKED\n  }\n\n  begin: number\n  end: number\n  readonly type: number\n  readonly xxx: string\n  readonly stereo: number\n  readonly topology: number\n  readonly reactingCenterStatus: number\n  len: number\n  sb: number\n  sa: number\n  hb1?: number\n  hb2?: number\n  angle: number\n  center: Vec2\n\n  constructor(attributes: BondAttributes) {\n    this.begin = attributes.begin\n    this.end = attributes.end\n    this.type = attributes.type\n    this.xxx = attributes.xxx || ''\n    this.stereo = Bond.PATTERN.STEREO.NONE\n    this.topology = Bond.PATTERN.TOPOLOGY.EITHER\n    this.reactingCenterStatus = 0\n    this.len = 0\n    this.sb = 0\n    this.sa = 0\n    this.angle = 0\n\n    if (attributes.stereo) this.stereo = attributes.stereo\n    if (attributes.topology) this.topology = attributes.topology\n    if (attributes.reactingCenterStatus) {\n      this.reactingCenterStatus = attributes.reactingCenterStatus\n    }\n\n    this.center = new Vec2()\n  }\n\n  static getAttrHash(bond: Bond) {\n    const attrs = {}\n    for (const attr in Bond.attrlist) {\n      if (bond[attr] || attr === 'stereo') {\n        attrs[attr] = bond[attr]\n      }\n    }\n    return attrs\n  }\n\n  static attrGetDefault(attr: string) {\n    if (attr in Bond.attrlist) {\n      return Bond.attrlist[attr]\n    }\n  }\n\n  hasRxnProps(): boolean {\n    return !!this.reactingCenterStatus\n  }\n\n  getCenter(struct: any): Vec2 {\n    const p1 = struct.atoms.get(this.begin).pp\n    const p2 = struct.atoms.get(this.end).pp\n    return Vec2.lc2(p1, 0.5, p2, 0.5)\n  }\n\n  getDir(struct: any): Vec2 {\n    const p1 = struct.atoms.get(this.begin)!.pp\n    const p2 = struct.atoms.get(this.end)!.pp\n    return p2.sub(p1).normalized()\n  }\n\n  clone(aidMap?: Map<number, number> | null): Bond {\n    const cp = new Bond(this)\n    if (aidMap) {\n      cp.begin = aidMap.get(cp.begin)!\n      cp.end = aidMap.get(cp.end)!\n    }\n    return cp\n  }\n\n  getAttachedSGroups(struct: Struct) {\n    const sGroupsWithBeginAtom = struct.atoms.get(this.begin)?.sgs || new Pile()\n    const sGroupsWithEndAtom = struct.atoms.get(this.end)?.sgs || new Pile()\n    return sGroupsWithBeginAtom?.intersection(sGroupsWithEndAtom)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Point, Vec2 } from './vec2'\n\nimport { Bond } from './bond'\nimport { StereoLabel } from './atom'\nimport { Struct } from './struct'\n\nexport enum StereoFlag {\n  Mixed = 'MIXED',\n  Abs = 'ABS',\n  And = 'AND',\n  Or = 'OR'\n}\n\nfunction calcStereoFlag(\n  struct: Struct,\n  stereoAids: Array<number>\n): StereoFlag | undefined {\n  if (!stereoAids || stereoAids.length === 0) return undefined\n  const filteredStereoAtoms = stereoAids\n    .map((aid) => struct.atoms.get(aid))\n    .filter((atom) => atom?.stereoLabel)\n  if (!filteredStereoAtoms.length) return undefined\n\n  const atom = filteredStereoAtoms[0]!\n  const stereoLabel = atom.stereoLabel! // {string | null} \"<abs|and|or>-<group>\"\n\n  const hasAnotherLabel = filteredStereoAtoms.some(\n    (atom) => atom?.stereoLabel !== stereoLabel\n  )\n\n  let stereoFlag: StereoFlag\n  if (hasAnotherLabel) {\n    stereoFlag = StereoFlag.Mixed\n  } else {\n    const label = stereoLabel.match(/\\D+/g)?.[0]\n    switch (label) {\n      case StereoLabel.Abs: {\n        stereoFlag = StereoFlag.Abs\n        break\n      }\n      case StereoLabel.And: {\n        stereoFlag = StereoFlag.And\n        break\n      }\n      case StereoLabel.Or: {\n        stereoFlag = StereoFlag.Or\n        break\n      }\n      default: {\n        throw new Error(`Unsupported stereo label: ${label}.`)\n      }\n    }\n  }\n  return stereoFlag\n}\n\nexport class Fragment {\n  #enhancedStereoFlag?: StereoFlag\n  stereoFlagPosition?: Vec2\n  #stereoAtoms: Array<number>\n\n  get stereoAtoms(): Array<number> {\n    return [...this.#stereoAtoms]\n  }\n\n  get enhancedStereoFlag() {\n    return this.#enhancedStereoFlag\n  }\n\n  constructor(stereoAtoms: Array<number> = [], stereoFlagPosition?: Point) {\n    if (stereoFlagPosition) {\n      this.stereoFlagPosition = new Vec2(stereoFlagPosition)\n    }\n\n    this.#stereoAtoms = stereoAtoms\n  }\n\n  static getDefaultStereoFlagPosition(\n    struct: Struct,\n    fragmentId: number\n  ): Vec2 | undefined {\n    const fragment = struct.getFragment(fragmentId)\n    if (!fragment) return undefined\n    const bb = fragment.getCoordBoundingBox()\n    return new Vec2(bb.max.x, bb.min.y - 1)\n  }\n\n  clone(aidMap: Map<number, number>) {\n    const stereoAtoms = this.#stereoAtoms.map((aid) => aidMap.get(aid)!)\n    const fr = new Fragment(stereoAtoms, this.stereoFlagPosition)\n    fr.#enhancedStereoFlag = this.#enhancedStereoFlag\n    return fr\n  }\n\n  updateStereoFlag(struct: Struct) {\n    this.#enhancedStereoFlag = calcStereoFlag(struct, this.stereoAtoms)\n    return this.#enhancedStereoFlag\n  }\n\n  // TODO: split to 'add' and 'remove methods\n  updateStereoAtom(struct: Struct, aid: number, frId: number, isAdd: boolean) {\n    if (isAdd && !this.#stereoAtoms.includes(aid)) this.#stereoAtoms.push(aid)\n    if (\n      !isAdd &&\n      (struct.atoms.get(aid)?.fragment !== frId ||\n        !Array.from(struct.bonds.values())\n          .filter(\n            (bond) => bond.stereo && bond.type !== Bond.PATTERN.TYPE.DOUBLE\n          )\n          .some((bond) => bond.begin === aid))\n    ) {\n      this.#stereoAtoms = this.stereoAtoms.filter((item) => item !== aid)\n    }\n\n    this.#enhancedStereoFlag = calcStereoFlag(struct, this.stereoAtoms)\n  }\n\n  addStereoAtom(atomId: number): boolean {\n    if (!this.#stereoAtoms.includes(atomId)) {\n      this.stereoAtoms.push(atomId)\n      return true\n    }\n    return false\n  }\n\n  deleteStereoAtom(\n    struct: Struct,\n    fragmentId: number,\n    atomId: number\n  ): boolean {\n    if (\n      struct.atoms.get(atomId)?.fragment !== fragmentId ||\n      !Array.from(struct.bonds.values())\n        .filter((bond) => bond.stereo && bond.type !== Bond.PATTERN.TYPE.DOUBLE)\n        .some((bond) => bond.begin === atomId)\n    ) {\n      this.#stereoAtoms = this.#stereoAtoms.filter((item) => item !== atomId)\n      return true\n    }\n    return false\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from 'domain/entities'\n\nexport interface ScaleOptions {\n  scale: number\n}\n\nfunction scaled2obj(v: Vec2, options: ScaleOptions): Vec2 {\n  return v.scaled(1 / options.scale)\n}\n\nfunction obj2scaled(v: Vec2, options: ScaleOptions): Vec2 {\n  return v.scaled(options.scale)\n}\n\nexport const Scale = {\n  scaled2obj,\n  obj2scaled\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Neighbor, Struct } from 'domain/entities'\n\nfunction isCorrectStereoCenter(\n  bond: Bond,\n  beginNeighs: Array<Neighbor> | undefined,\n  endNeighs: Array<Neighbor> | undefined,\n  struct: Struct\n) {\n  const beginAtom = struct.atoms.get(bond.begin)\n\n  let EndAtomNeigh: number | undefined = NaN\n\n  if (endNeighs?.length === 2) {\n    EndAtomNeigh =\n      endNeighs[0].aid === bond.begin ? endNeighs[1].aid : endNeighs[0].aid\n  }\n\n  if (bond.stereo > 0) {\n    if (\n      endNeighs?.length === 1 &&\n      beginNeighs?.length === 2 &&\n      Number(beginAtom?.implicitH) % 2 === 0\n    ) {\n      return false\n    }\n\n    if (\n      endNeighs?.length === 2 &&\n      beginNeighs?.length === 2 &&\n      Number(beginAtom?.implicitH) % 2 === 0 &&\n      struct.atomGetNeighbors(EndAtomNeigh)?.length === 1\n    ) {\n      return false\n    }\n\n    if (beginNeighs?.length === 1) {\n      return false\n    }\n\n    return true\n  } else {\n    return false\n  }\n}\n\nexport const StereoValidator = {\n  isCorrectStereoCenter\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { Struct } from '../entities'\n\nexport class FunctionalGroupsProvider {\n  // eslint-disable-next-line no-use-before-define\n  private static instance: FunctionalGroupsProvider\n  functionalGroupsList: Struct[]\n  constructor() {\n    this.functionalGroupsList = []\n  }\n\n  public static getInstance(): FunctionalGroupsProvider {\n    if (!FunctionalGroupsProvider.instance) {\n      FunctionalGroupsProvider.instance = new FunctionalGroupsProvider()\n    }\n    return FunctionalGroupsProvider.instance\n  }\n\n  public getFunctionalGroupsList() {\n    return this.functionalGroupsList\n  }\n\n  public setFunctionalGroupsList(list: Struct[]): void {\n    this.functionalGroupsList = list\n  }\n\n  public addToFunctionalGroupsList(list: Struct[]): void {\n    this.functionalGroupsList = [...this.functionalGroupsList, ...list]\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { Struct } from '../entities'\n\nexport class SaltsAndSolventsProvider {\n  // eslint-disable-next-line no-use-before-define\n  private static instance: SaltsAndSolventsProvider\n  saltsAndSolventsList: Struct[]\n  constructor() {\n    this.saltsAndSolventsList = []\n  }\n\n  public static getInstance(): SaltsAndSolventsProvider {\n    if (!SaltsAndSolventsProvider.instance) {\n      SaltsAndSolventsProvider.instance = new SaltsAndSolventsProvider()\n    }\n    return SaltsAndSolventsProvider.instance\n  }\n\n  public getSaltsAndSolventsList() {\n    return this.saltsAndSolventsList\n  }\n\n  public setSaltsAndSolventsList(list: Struct[]): void {\n    this.saltsAndSolventsList = list\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from './vec2'\nimport assert from 'assert'\n\nexport class Box2Abs {\n  readonly p0: Vec2\n  readonly p1: Vec2\n\n  constructor()\n  constructor(p: Vec2)\n  constructor(p0: Vec2, p1: Vec2)\n  constructor(x0: number, y0: number, x1: number, y1: number)\n  constructor(...args: Array<any>) {\n    if (args.length === 1 && 'min' in args[0] && 'max' in args[0]) {\n      this.p0 = args[0].min\n      this.p1 = args[0].max\n    }\n\n    if (args.length === 2) {\n      this.p0 = args[0]\n      this.p1 = args[1]\n    } else if (args.length === 4) {\n      this.p0 = new Vec2(args[0], args[1])\n      this.p1 = new Vec2(args[2], args[3])\n    } else if (args.length === 0) {\n      this.p0 = new Vec2()\n      this.p1 = new Vec2()\n    } else {\n      throw new Error(\n        'Box2Abs constructor only accepts 4 numbers or 2 vectors or no args!'\n      )\n    }\n  }\n\n  toString(): string {\n    return this.p0.toString() + ' ' + this.p1.toString()\n  }\n\n  clone(): Box2Abs {\n    return new Box2Abs(this.p0, this.p1)\n  }\n\n  extend(lp: Vec2, rb: Vec2): Box2Abs {\n    rb = rb || lp\n    return new Box2Abs(this.p0.sub(lp), this.p1.add(rb))\n  }\n\n  include(p: Vec2): Box2Abs {\n    assert(p != null)\n\n    return new Box2Abs(this.p0.min(p), this.p1.max(p))\n  }\n\n  contains(p: Vec2, ext = 0.0): boolean {\n    assert(p != null)\n\n    return (\n      p.x >= this.p0.x - ext &&\n      p.x <= this.p1.x + ext &&\n      p.y >= this.p0.y - ext &&\n      p.y <= this.p1.y + ext\n    )\n  }\n\n  translate(d: Vec2): Box2Abs {\n    return new Box2Abs(this.p0.add(d), this.p1.add(d))\n  }\n\n  transform(f: (p: Vec2, options: any) => Vec2, options: any): Box2Abs {\n    assert(typeof f === 'function')\n\n    return new Box2Abs(f(this.p0, options), f(this.p1, options))\n  }\n\n  sz(): Vec2 {\n    return this.p1.sub(this.p0)\n  }\n\n  centre(): Vec2 {\n    return Vec2.centre(this.p0, this.p1)\n  }\n\n  pos() {\n    return this.p0\n  }\n\n  static fromRelBox(relBox: any): Box2Abs {\n    return new Box2Abs(\n      relBox.x,\n      relBox.y,\n      relBox.x + relBox.width,\n      relBox.y + relBox.height\n    )\n  }\n\n  static union(b1: Box2Abs, b2: Box2Abs): Box2Abs {\n    return new Box2Abs(Vec2.min(b1.p0, b2.p0), Vec2.max(b1.p1, b2.p1))\n  }\n\n  static segmentIntersection(a: Vec2, b: Vec2, c: Vec2, d: Vec2): boolean {\n    const dc = (a.x - c.x) * (b.y - c.y) - (a.y - c.y) * (b.x - c.x)\n    const dd = (a.x - d.x) * (b.y - d.y) - (a.y - d.y) * (b.x - d.x)\n    const da = (c.x - a.x) * (d.y - a.y) - (c.y - a.y) * (d.x - a.x)\n    const db = (c.x - b.x) * (d.y - b.y) - (c.y - b.y) * (d.x - b.x)\n\n    return dc * dd <= 0 && da * db <= 0\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom } from './atom'\nimport { Bond } from './bond'\nimport { Box2Abs } from './box2Abs'\nimport { Pile } from './pile'\nimport { Struct } from './struct'\nimport { SaltsAndSolventsProvider } from '../helpers'\nimport { Vec2 } from './vec2'\nimport { ReStruct } from '../../application/render'\n\nexport class SGroupBracketParams {\n  readonly c: Vec2\n  readonly d: Vec2\n  readonly n: Vec2\n  readonly w: number\n  readonly h: number\n\n  constructor(c: Vec2, d: Vec2, w: number, h: number) {\n    this.c = c\n    this.d = d\n    this.n = d.rotateSC(1, 0)\n    this.w = w\n    this.h = h\n  }\n}\n\nexport class SGroup {\n  static TYPES = {\n    SUP: 'SUP',\n    MUL: 'MUL',\n    SRU: 'SRU',\n    MON: 'MON',\n    MER: 'MER',\n    COP: 'COP',\n    CRO: 'CRO',\n    MOD: 'MOD',\n    GRA: 'GRA',\n    COM: 'COM',\n    MIX: 'MIX',\n    FOR: 'FOR',\n    DAT: 'DAT',\n    ANY: 'ANY',\n    GEN: 'GEN'\n  }\n\n  type: string\n  id: number\n  label: number\n  bracketBox: any\n  bracketDir: Vec2\n  areas: any\n  hover: boolean\n  hovering: any\n  selected: boolean\n  selectionPlate: any\n  atoms: any\n  atomSet: any\n  parentAtomSet: any\n  patoms?: any\n  allAtoms: any\n  bonds: any\n  xBonds: any\n  neiAtoms: any\n  pp: Vec2 | null\n  data: any\n  firstSgroupAtom: any\n\n  constructor(type: string) {\n    this.type = type\n    this.id = -1\n    this.label = -1\n    this.bracketBox = null\n    this.bracketDir = new Vec2(1, 0)\n    this.areas = []\n\n    this.hover = false\n    this.hovering = null\n    this.selected = false\n    this.selectionPlate = null\n\n    this.atoms = []\n    this.patoms = []\n    this.bonds = []\n    this.xBonds = []\n    this.neiAtoms = []\n    this.pp = null\n    this.data = {\n      mul: 1, // multiplication count for MUL group\n      connectivity: 'ht', // head-to-head, head-to-tail or either-unknown\n      name: '',\n      subscript: 'n',\n      expanded: undefined,\n      // data s-group fields\n      attached: false,\n      absolute: true,\n      showUnits: false,\n      nCharsToDisplay: -1,\n      tagChar: '',\n      daspPos: 1,\n      fieldType: 'F',\n      fieldName: '',\n      fieldValue: '',\n      units: '',\n      query: '',\n      queryOp: ''\n    }\n  }\n\n  // TODO: these methods should be overridden\n  //      and should only accept valid attributes for each S-group type.\n  //      The attributes should be accessed via these methods only and not directly through this.data.\n  // stub\n  getAttr(attr: string): any {\n    return this.data[attr]\n  }\n\n  // TODO: should be group-specific\n  getAttrs(): any {\n    const attrs = {}\n    Object.keys(this.data).forEach((attr) => {\n      attrs[attr] = this.data[attr]\n    })\n    return attrs\n  }\n\n  // stub\n  setAttr(attr: string, value: any): any {\n    const oldValue = this.data[attr]\n    this.data[attr] = value\n    return oldValue\n  }\n\n  // stub\n  checkAttr(attr: string, value: any): boolean {\n    return this.data[attr] === value\n  }\n\n  updateOffset(offset: Vec2): void {\n    this.pp = Vec2.sum(this.bracketBox.p1, offset)\n  }\n\n  calculatePP(struct: Struct): void {\n    let topLeftPoint\n\n    if (this.data.context === 'Atom' || this.data.context === 'Bond') {\n      const contentBoxes: Array<any> = []\n      let contentBB: Box2Abs | null = null\n      const direction = new Vec2(1, 0)\n\n      this.atoms.forEach((aid) => {\n        const atom = struct.atoms.get(aid)\n        const pos = new Vec2(atom!.pp)\n        const ext = new Vec2(0.05 * 3, 0.05 * 3)\n        const bba = new Box2Abs(pos, pos).extend(ext, ext)\n        contentBoxes.push(bba)\n      })\n      contentBoxes.forEach((bba) => {\n        let bbb: Box2Abs | null = null\n        ;[bba.p0.x, bba.p1.x].forEach((x) => {\n          ;[bba.p0.y, bba.p1.y].forEach((y) => {\n            const v = new Vec2(x, y)\n            const p = new Vec2(\n              Vec2.dot(v, direction),\n              Vec2.dot(v, direction.rotateSC(1, 0))\n            )\n            bbb = !bbb ? new Box2Abs(p, p) : bbb!.include(p)\n          })\n        })\n        contentBB = !contentBB ? bbb : Box2Abs.union(contentBB, bbb!)\n      })\n\n      topLeftPoint = contentBB!.p0\n    } else {\n      topLeftPoint = this.bracketBox.p1.add(new Vec2(0.5, 0.5))\n    }\n\n    const sgroups = Array.from(struct.sgroups.values())\n    for (let i = 0; i < struct.sgroups.size; ++i) {\n      if (!descriptorIntersects(sgroups as [], topLeftPoint)) break\n\n      topLeftPoint = topLeftPoint.add(new Vec2(0, 0.5))\n    }\n\n    // TODO: the code below is a temporary solution that will be removed after the implementation of the internal format\n    // TODO: in schema.json required fields [\"context\", \"FieldValue\"] in sgroups type DAT must be returned\n    if (this.data.fieldName === 'INDIGO_CIP_DESC') {\n      if (this.atoms.length === 1) {\n        const sAtom = this.atoms[0]\n        const sAtomPP = struct.atoms.get(sAtom)?.pp\n\n        if (sAtomPP) {\n          topLeftPoint = sAtomPP\n        }\n      } else {\n        topLeftPoint = SGroup.getMassCentre(struct, this.atoms)\n      }\n    }\n\n    this.pp = topLeftPoint\n  }\n\n  getAttAtomId(struct: Struct): number {\n    for (const atomId of this.atoms) {\n      const atom = struct.atoms.get(atomId)\n      if (!atom) continue\n      if (Number.isInteger(atom.attpnt)) return atomId\n    }\n    // in normal circumstances this should never be invoked\n    return this.atoms[0]\n  }\n\n  isGroupAttached(struct: Struct): boolean {\n    const attachPointId = this.getAttAtomId(struct)\n    const neighbours = struct.atomGetNeighbors(attachPointId)\n\n    return !neighbours?.every(({ aid }) => this.atoms.includes(aid))\n  }\n\n  static getOffset(sgroup: SGroup): null | Vec2 {\n    if (!sgroup?.pp) return null\n    return Vec2.diff(sgroup.pp, sgroup.bracketBox.p1)\n  }\n\n  static isSaltOrSolvent(moleculeName: string): boolean {\n    const saltsAndSolventsProvider = SaltsAndSolventsProvider.getInstance()\n    const saltsAndSolvents = saltsAndSolventsProvider.getSaltsAndSolventsList()\n    return saltsAndSolvents.some(\n      ({ name, abbreviation }) =>\n        name === moleculeName || moleculeName === abbreviation\n    )\n  }\n\n  static isAtomInSaltOrSolvent(\n    atomId: number,\n    sgroupsOnCanvas: SGroup[]\n  ): boolean {\n    const onlySaltsOrSolvents = sgroupsOnCanvas.filter((sgroup) =>\n      this.isSaltOrSolvent(sgroup.data.name)\n    )\n    return onlySaltsOrSolvents.some(({ atoms }) =>\n      atoms.some((atomIdInSaltOrSolvent) => atomIdInSaltOrSolvent === atomId)\n    )\n  }\n\n  static isBondInSaltOrSolvent(\n    bondId: number,\n    sgroupsOnCanvas: SGroup[]\n  ): boolean {\n    const onlySaltsOrSolvents = sgroupsOnCanvas.filter((sgroup) =>\n      this.isSaltOrSolvent(sgroup.data.name)\n    )\n    return onlySaltsOrSolvents.some(({ bonds }) =>\n      bonds.some((bondIdInSaltOrSolvent) => bondIdInSaltOrSolvent === bondId)\n    )\n  }\n\n  static filterAtoms(atoms: any, map: any) {\n    const newAtoms: Array<any> = []\n    for (let i = 0; i < atoms.length; ++i) {\n      const aid = atoms[i]\n      if (typeof map[aid] !== 'number') newAtoms.push(aid)\n      else if (map[aid] >= 0) newAtoms.push(map[aid])\n      else newAtoms.push(-1)\n    }\n    return newAtoms\n  }\n\n  static removeNegative(atoms: any) {\n    const newAtoms: Array<any> = []\n    for (let j = 0; j < atoms.length; ++j) {\n      if (atoms[j] >= 0) newAtoms.push(atoms[j])\n    }\n    return newAtoms\n  }\n\n  static filter(_mol, sg, atomMap) {\n    sg.atoms = SGroup.removeNegative(SGroup.filterAtoms(sg.atoms, atomMap))\n  }\n\n  static clone(sgroup: SGroup, aidMap: Map<number, number>): SGroup {\n    const cp = new SGroup(sgroup.type)\n\n    Object.keys(sgroup.data).forEach((field) => {\n      cp.data[field] = sgroup.data[field]\n    })\n\n    cp.atoms = sgroup.atoms.map((elem) => aidMap.get(elem))\n    cp.pp = sgroup.pp\n    cp.bracketBox = sgroup.bracketBox\n    cp.patoms = null\n    cp.bonds = null\n    cp.allAtoms = sgroup.allAtoms\n    cp.data.expanded = sgroup.data.expanded\n    return cp\n  }\n\n  static addAtom(sgroup: SGroup, aid: number): void {\n    sgroup.atoms.push(aid)\n  }\n\n  static removeAtom(sgroup: SGroup, aid: number): void {\n    if (!sgroup) {\n      return\n    }\n\n    for (let i = 0; i < sgroup.atoms.length; ++i) {\n      if (sgroup.atoms[i] === aid) {\n        sgroup.atoms.splice(i, 1)\n        return\n      }\n    }\n  }\n\n  static getCrossBonds(\n    mol: any,\n    parentAtomSet: Pile<number>\n  ): { [key: number]: Array<Bond> } {\n    const crossBonds: { [key: number]: Array<Bond> } = {}\n    mol.bonds.forEach((bond, bid) => {\n      if (parentAtomSet.has(bond.begin) && !parentAtomSet.has(bond.end)) {\n        if (!crossBonds[bond.begin]) {\n          crossBonds[bond.begin] = []\n        }\n        crossBonds[bond.begin].push(bid)\n      } else if (\n        parentAtomSet.has(bond.end) &&\n        !parentAtomSet.has(bond.begin)\n      ) {\n        if (!crossBonds[bond.end]) {\n          crossBonds[bond.end] = []\n        }\n        crossBonds[bond.end].push(bid)\n      }\n    })\n    return crossBonds\n  }\n\n  static bracketPos(\n    sGroup,\n    mol,\n    crossBondsPerAtom: { [key: number]: Array<Bond> },\n    remol?: ReStruct,\n    render?\n  ): void {\n    const atoms = sGroup.atoms\n    const crossBonds = crossBondsPerAtom\n      ? Object.values(crossBondsPerAtom).flat()\n      : null\n    if (!crossBonds || crossBonds.length !== 2) {\n      sGroup.bracketDir = new Vec2(1, 0)\n    } else {\n      const p1 = mol.bonds.get(crossBonds[0]).getCenter(mol)\n      const p2 = mol.bonds.get(crossBonds[1]).getCenter(mol)\n      sGroup.bracketDir = Vec2.diff(p2, p1).normalized()\n    }\n    const d = sGroup.bracketDir\n\n    let braketBox: Box2Abs | null = null\n    const contentBoxes: Array<any> = []\n    const getAtom = (aid) => {\n      if (remol && render) {\n        return remol.atoms.get(aid)\n      }\n      return mol.atoms.get(aid)\n    }\n    atoms.forEach((aid) => {\n      const atom = getAtom(aid)\n      const ext = new Vec2(0.05 * 3, 0.05 * 3)\n      let position\n      let structBoundingBox\n      if ('getVBoxObj' in atom && render) {\n        structBoundingBox = atom.getVBoxObj(render)\n      } else {\n        position = new Vec2(atom.pp)\n        structBoundingBox = new Box2Abs(position, position)\n      }\n      contentBoxes.push(structBoundingBox.extend(ext, ext))\n    })\n    contentBoxes.forEach((bba) => {\n      let bbb: Box2Abs | null = null\n      ;[bba.p0.x, bba.p1.x].forEach((x) => {\n        ;[bba.p0.y, bba.p1.y].forEach((y) => {\n          const v = new Vec2(x, y)\n          const p = new Vec2(Vec2.dot(v, d), Vec2.dot(v, d.rotateSC(1, 0)))\n          bbb = !bbb ? new Box2Abs(p, p) : bbb!.include(p)\n        })\n      })\n      braketBox = !braketBox ? bbb : Box2Abs.union(braketBox, bbb!)\n    })\n    const vext = new Vec2(0.2, 0.4)\n    if (braketBox) braketBox = (braketBox as Box2Abs).extend(vext, vext)\n    sGroup.bracketBox = braketBox\n  }\n\n  static getBracketParameters(\n    mol,\n    crossBondsPerAtom: { [key: number]: Array<Bond> },\n    atomSet: Pile<number>,\n    bb,\n    d,\n    n\n  ): Array<any> {\n    const brackets: Array<any> = []\n    const crossBondsPerAtomValues = Object.values(crossBondsPerAtom)\n    const crossBonds = crossBondsPerAtomValues.flat()\n    if (crossBonds.length < 2) {\n      ;(function () {\n        d = d || new Vec2(1, 0)\n        n = n || d.rotateSC(1, 0)\n        const bracketWidth = Math.min(0.25, bb.sz().x * 0.3)\n        const cl = Vec2.lc2(d, bb.p0.x, n, 0.5 * (bb.p0.y + bb.p1.y))\n        const cr = Vec2.lc2(d, bb.p1.x, n, 0.5 * (bb.p0.y + bb.p1.y))\n        const bracketHeight = bb.sz().y\n\n        brackets.push(\n          new SGroupBracketParams(cl, d.negated(), bracketWidth, bracketHeight),\n          new SGroupBracketParams(cr, d, bracketWidth, bracketHeight)\n        )\n      })()\n    } else if (\n      crossBonds.length === 2 &&\n      crossBondsPerAtomValues.length === 2\n    ) {\n      ;(function () {\n        const b1 = mol.bonds.get(crossBonds[0])\n        const b2 = mol.bonds.get(crossBonds[1])\n        const cl0 = b1.getCenter(mol)\n        const cr0 = b2.getCenter(mol)\n        const dr = Vec2.diff(cr0, cl0).normalized()\n        const dl = dr.negated()\n\n        const bracketWidth = 0.25\n        const bracketHeight = 1.5\n        brackets.push(\n          new SGroupBracketParams(\n            cl0.addScaled(dl, 0),\n            dl,\n            bracketWidth,\n            bracketHeight\n          ),\n          new SGroupBracketParams(\n            cr0.addScaled(dr, 0),\n            dr,\n            bracketWidth,\n            bracketHeight\n          )\n        )\n      })()\n    } else {\n      ;(function () {\n        for (let i = 0; i < crossBonds.length; ++i) {\n          const b = mol.bonds.get(crossBonds[i])\n          const c = b.getCenter(mol)\n          const d = atomSet.has(b.begin)\n            ? b.getDir(mol)\n            : b.getDir(mol).negated()\n          brackets.push(new SGroupBracketParams(c, d, 0.2, 1.0))\n        }\n      })()\n    }\n    return brackets\n  }\n\n  static getObjBBox(atoms, mol): Box2Abs {\n    const a0 = mol.atoms.get(atoms[0]).pp\n    let bb = new Box2Abs(a0, a0)\n    for (let i = 1; i < atoms.length; ++i) {\n      const aid = atoms[i]\n      const atom = mol.atoms.get(aid)\n      const p = atom.pp\n      bb = bb.include(p)\n    }\n    return bb\n  }\n\n  static getAtoms(mol, sg): Array<any> {\n    if (!sg.allAtoms) return sg.atoms\n    const atoms: Array<any> = []\n    mol.atoms.forEach((_atom, aid) => {\n      atoms.push(aid)\n    })\n    return atoms\n  }\n\n  static getBonds(mol, sg): Array<any> {\n    const atoms = SGroup.getAtoms(mol, sg)\n    const bonds: Array<any> = []\n    mol.bonds.forEach((bond, bid) => {\n      if (atoms.indexOf(bond.begin) >= 0 && atoms.indexOf(bond.end) >= 0) {\n        bonds.push(bid)\n      }\n    })\n    return bonds\n  }\n\n  static prepareMulForSaving(sgroup, mol): void {\n    sgroup.atoms.sort((a, b) => a - b)\n    sgroup.atomSet = new Pile(sgroup.atoms)\n    sgroup.parentAtomSet = new Pile(sgroup.atomSet)\n    const inBonds: Array<any> = []\n    const xBonds: Array<any> = []\n\n    mol.bonds.forEach((bond, bid) => {\n      if (\n        sgroup.parentAtomSet.has(bond.begin) &&\n        sgroup.parentAtomSet.has(bond.end)\n      ) {\n        inBonds.push(bid)\n      } else if (\n        sgroup.parentAtomSet.has(bond.begin) ||\n        sgroup.parentAtomSet.has(bond.end)\n      ) {\n        xBonds.push(bid)\n      }\n    })\n\n    if (xBonds.length !== 0 && xBonds.length !== 2) {\n      throw Error('Unsupported cross-bonds number')\n    }\n\n    let xAtom1 = -1\n    let xAtom2 = -1\n    let crossBond = null\n    if (xBonds.length === 2) {\n      const bond1 = mol.bonds.get(xBonds[0])\n      xAtom1 = sgroup.parentAtomSet.has(bond1.begin) ? bond1.begin : bond1.end\n\n      const bond2 = mol.bonds.get(xBonds[1])\n      xAtom2 = sgroup.parentAtomSet.has(bond2.begin) ? bond2.begin : bond2.end\n      crossBond = bond2\n    }\n\n    let tailAtom = xAtom2\n\n    const newAtoms: Array<any> = []\n    for (let j = 0; j < sgroup.data.mul - 1; j++) {\n      const amap = {}\n      sgroup.atoms.forEach((aid) => {\n        const atom = mol.atoms.get(aid)\n        const aid2 = mol.atoms.add(new Atom(atom))\n        newAtoms.push(aid2)\n        sgroup.atomSet.add(aid2)\n        amap[aid] = aid2\n      })\n      inBonds.forEach((bid) => {\n        const bond = mol.bonds.get(bid)\n        const newBond = new Bond(bond)\n        newBond.begin = amap[newBond.begin]\n        newBond.end = amap[newBond.end]\n        mol.bonds.add(newBond)\n      })\n      if (crossBond !== null) {\n        const newCrossBond = new Bond(crossBond)\n        newCrossBond.begin = tailAtom\n        newCrossBond.end = amap[xAtom1]\n        mol.bonds.add(newCrossBond)\n        tailAtom = amap[xAtom2]\n      }\n    }\n    if (tailAtom >= 0) {\n      const xBond2 = mol.bonds.get(xBonds[1])\n      if (xBond2.begin === xAtom2) xBond2.begin = tailAtom\n      else xBond2.end = tailAtom\n    }\n    sgroup.bonds = xBonds\n\n    newAtoms.forEach((aid) => {\n      mol.sGroupForest\n        .getPathToRoot(sgroup.id)\n        .reverse()\n        .forEach((sgid) => {\n          mol.atomAddToSGroup(sgid, aid)\n        })\n    })\n  }\n\n  static getMassCentre(mol, atoms): Vec2 {\n    let c = new Vec2() // mass centre\n    for (let i = 0; i < atoms.length; ++i) {\n      c = c.addScaled(mol.atoms.get(atoms[i]).pp, 1.0 / atoms.length)\n    }\n    return c\n  }\n}\n\nfunction descriptorIntersects(sgroups: [], topLeftPoint: Vec2): boolean {\n  return sgroups.some((sg: SGroup) => {\n    if (!sg.pp) return false\n\n    const sgBottomRightPoint = sg.pp.add(new Vec2(0.5, 0.5))\n    const bottomRightPoint = topLeftPoint.add(new Vec2(0.5, 0.5))\n\n    return Box2Abs.segmentIntersection(\n      sg.pp,\n      sgBottomRightPoint,\n      topLeftPoint,\n      bottomRightPoint\n    )\n  })\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { ReSGroup } from 'application/render'\nimport assert from 'assert'\nimport { FunctionalGroupsProvider } from '../helpers'\nimport { Bond } from './bond'\nimport { Pool } from './pool'\nimport { SGroup } from './sgroup'\nimport { Struct } from './struct'\n\nexport class FunctionalGroup {\n  #sgroup: SGroup\n\n  constructor(sgroup: SGroup) {\n    assert(sgroup != null)\n\n    this.#sgroup = sgroup\n  }\n\n  get name(): string {\n    return this.#sgroup.data.name\n  }\n\n  get relatedSGroupId(): number {\n    return this.#sgroup.id\n  }\n\n  get isExpanded(): boolean {\n    return this.#sgroup.data.expanded\n  }\n\n  get relatedSGroup(): SGroup {\n    return this.#sgroup\n  }\n\n  static isFunctionalGroup(sgroup): boolean {\n    const provider = FunctionalGroupsProvider.getInstance()\n    const functionalGroups = provider.getFunctionalGroupsList()\n    const {\n      data: { name },\n      type\n    } = sgroup\n    return (\n      type === 'SUP' &&\n      (functionalGroups.some((type) => type.name === name) ||\n        SGroup.isSaltOrSolvent(name))\n    )\n  }\n\n  static getFunctionalGroupByName(searchName: string): Struct | null {\n    const provider = FunctionalGroupsProvider.getInstance()\n    const functionalGroups = provider.getFunctionalGroupsList()\n\n    let foundGroup\n    if (searchName) {\n      foundGroup = functionalGroups.find(({ name, abbreviation }) => {\n        return name === searchName || abbreviation === searchName\n      })\n    }\n\n    return foundGroup || null\n  }\n\n  static atomsInFunctionalGroup(functionalGroups, atom): number | null {\n    if (functionalGroups.size === 0) {\n      return null\n    }\n    for (const fg of functionalGroups.values()) {\n      if (fg.relatedSGroup.atoms.includes(atom)) return atom\n    }\n    return null\n  }\n\n  static bondsInFunctionalGroup(\n    molecule,\n    functionalGroups,\n    bond\n  ): number | null {\n    if (functionalGroups.size === 0) {\n      return null\n    }\n    for (const fg of functionalGroups.values()) {\n      const bonds = SGroup.getBonds(molecule, fg.relatedSGroup)\n      if (bonds.includes(bond)) return bond\n    }\n    return null\n  }\n\n  static findFunctionalGroupByAtom(\n    functionalGroups: Pool<FunctionalGroup>,\n    atomId: number\n  ): number | null\n\n  static findFunctionalGroupByAtom(\n    functionalGroups: Pool<FunctionalGroup>,\n    atomId: number,\n    isFunctionalGroupReturned: true\n  ): FunctionalGroup | null\n\n  static findFunctionalGroupByAtom(\n    functionalGroups: Pool<FunctionalGroup>,\n    atomId: number,\n    isFunctionalGroupReturned?: boolean\n  ): number | FunctionalGroup | null {\n    for (const fg of functionalGroups.values()) {\n      if (fg.relatedSGroup.atoms.includes(atomId))\n        return isFunctionalGroupReturned ? fg : fg.relatedSGroupId\n    }\n    return null\n  }\n\n  static findFunctionalGroupByBond(\n    molecule: Struct,\n    functionalGroups: Pool<FunctionalGroup>,\n    bondId: number | null\n  ): number | null\n\n  static findFunctionalGroupByBond(\n    molecule: Struct,\n    functionalGroups: Pool<FunctionalGroup>,\n    bondId: number | null,\n    isFunctionalGroupReturned: true\n  ): FunctionalGroup | null\n\n  static findFunctionalGroupByBond(\n    molecule: Struct,\n    functionalGroups: Pool<FunctionalGroup>,\n    bondId: number | null,\n    isFunctionalGroupReturned?: boolean\n  ): FunctionalGroup | number | null {\n    for (const fg of functionalGroups.values()) {\n      const bonds = SGroup.getBonds(molecule, fg.relatedSGroup)\n      if (bonds.includes(bondId)) {\n        return isFunctionalGroupReturned ? fg : fg.relatedSGroupId\n      }\n    }\n    return null\n  }\n\n  static findFunctionalGroupBySGroup(\n    functionalGroups: Pool<FunctionalGroup>,\n    sGroup?: SGroup\n  ) {\n    const key = functionalGroups.find(\n      (_, functionalGroup) => functionalGroup.relatedSGroupId === sGroup?.id\n    )\n    return key !== null ? functionalGroups.get(key) : undefined\n  }\n\n  static clone(functionalGroup: FunctionalGroup): FunctionalGroup {\n    return new FunctionalGroup(functionalGroup.#sgroup)\n  }\n\n  static isAttachmentBond(sgroup, { begin, end }) {\n    return (\n      (sgroup.atoms.includes(begin) && !sgroup.atoms.includes(end)) ||\n      (sgroup.atoms.includes(end) && !sgroup.atoms.includes(begin))\n    )\n  }\n\n  // Checks, if S-Group is standalone or attached to some other structure\n  static isAttachedSGroup(sgroup, molecule) {\n    const { bonds } = molecule\n    for (const bond of bonds.values()) {\n      if (FunctionalGroup.isAttachmentBond(sgroup, bond)) {\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * This function determines, if an atom is used for attachment to other structure.\n   * For example, having sgroup CF3, which looks like\n   *              F\n   *              |\n   *            F-C-F\n   *              |\n   *         other struct\n   * C – is an attachment point\n   */\n  static isAttachmentPointAtom(atomId: number, molecule: Struct): boolean {\n    const { sgroups, bonds } = molecule\n    const isAtomInSameFunctionalGroup = (otherAtomId, sgroup) =>\n      sgroup.atoms.includes(otherAtomId)\n    for (const sgroup of sgroups.values()) {\n      const isFunctionalGroup = FunctionalGroup.isFunctionalGroup(sgroup)\n      const isSGroupFound = sgroup.atoms.includes(atomId)\n      if (!isFunctionalGroup || !isSGroupFound) {\n        continue\n      }\n      for (const bond of bonds.values()) {\n        const isBondBeginInSGroupAndBondEndOutside =\n          bond.begin === atomId &&\n          !isAtomInSameFunctionalGroup(bond.end, sgroup)\n        const isBondEndInSGroupAndBondBeginOutside =\n          bond.end === atomId &&\n          !isAtomInSameFunctionalGroup(bond.begin, sgroup)\n        const isAttachmentBond =\n          isBondBeginInSGroupAndBondEndOutside ||\n          isBondEndInSGroupAndBondBeginOutside\n        if (isAttachmentBond) {\n          return true\n        }\n      }\n      // if atom in S-Group, which is not attached to any structure, then\n      // atoms[0] is considered as attachment point\n      if (!this.isAttachedSGroup(sgroup, molecule)) {\n        return sgroup.atoms[0] === atomId\n      }\n    }\n    return false\n  }\n\n  static isFirstAtomInFunctionalGroup(sgroups, aid): boolean {\n    for (const sg of sgroups.values()) {\n      if (FunctionalGroup.isFunctionalGroup(sg) && aid === sg.atoms[0]) {\n        return true\n      }\n    }\n    return false\n  }\n\n  static isAtomInContractedFunctionalGroup(\n    atom,\n    sgroups,\n    functionalGroups,\n    sgroupsFromReStruct: boolean\n  ): boolean {\n    const contractedFunctionalGroups: number[] = []\n    if (sgroupsFromReStruct) {\n      sgroups.forEach((sg) => {\n        if (\n          FunctionalGroup.isContractedFunctionalGroup(\n            sg.item.id,\n            functionalGroups\n          )\n        ) {\n          contractedFunctionalGroups.push(sg.item.id)\n        }\n      })\n    } else {\n      sgroups.forEach((sg) => {\n        if (\n          FunctionalGroup.isContractedFunctionalGroup(sg.id, functionalGroups)\n        ) {\n          contractedFunctionalGroups.push(sg.id)\n        }\n      })\n    }\n    return contractedFunctionalGroups.some((sg) => atom.sgs.has(sg))\n  }\n\n  static isBondInContractedFunctionalGroup(\n    bond: Bond,\n    sGroups: Map<number, ReSGroup> | Pool<SGroup>,\n    functionalGroups: Pool<FunctionalGroup>\n  ) {\n    return [...sGroups.values()].some((sGroup) => {\n      const sGroupId = 'item' in sGroup ? sGroup.item.id : sGroup.id\n      const atomsInSGroup = 'item' in sGroup ? sGroup.item.atoms : sGroup.atoms\n      const isContracted = FunctionalGroup.isContractedFunctionalGroup(\n        sGroupId,\n        functionalGroups\n      )\n      return (\n        isContracted &&\n        atomsInSGroup.includes(bond.begin) &&\n        atomsInSGroup.includes(bond.end)\n      )\n    })\n  }\n\n  static isContractedFunctionalGroup(sgroupId, functionalGroups): boolean {\n    let isFunctionalGroup = false\n    let expanded = false\n    functionalGroups.forEach((fg) => {\n      if (fg.relatedSGroupId === sgroupId) {\n        isFunctionalGroup = true\n        expanded = fg.isExpanded\n      }\n    })\n    return !expanded && isFunctionalGroup\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from './vec2'\nimport assert from 'assert'\n\n/** @internal */\nexport class HalfBond {\n  begin: number\n  end: number\n  bid: number\n  dir: Vec2\n  norm: Vec2\n  ang: number\n  p: Vec2\n  loop: number\n  contra: number\n  next: number\n  leftSin: number\n  leftCos: number\n  leftNeighbor: number\n  rightSin: number\n  rightCos: number\n  rightNeighbor: number\n\n  constructor(begin: number, end: number, bid: number) {\n    assert(arguments.length === 3, 'Invalid parameter number.')\n\n    this.begin = begin\n    this.end = end\n    this.bid = bid\n\n    // rendering properties\n    this.dir = new Vec2() // direction\n    this.norm = new Vec2() // left normal\n    this.ang = 0 // angle to (1,0), used for sorting the bonds\n    this.p = new Vec2() // corrected origin position\n    this.loop = -1 // left loop id if the half-bond is in a loop, otherwise -1\n    this.contra = -1 // the half bond contrary to this one\n    this.next = -1 // the half-bond next ot this one in CCW order\n    this.leftSin = 0\n    this.leftCos = 0\n    this.leftNeighbor = 0\n    this.rightSin = 0\n    this.rightCos = 0\n    this.rightNeighbor = 0\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond } from './bond'\nimport { Struct } from './struct'\n\nexport class Loop {\n  hbs: number[]\n  dblBonds: number\n  aromatic: boolean\n  convex: boolean\n\n  constructor(hbs: Array<number>, struct: Struct, isConvex: boolean) {\n    this.hbs = hbs // set of half-bonds involved\n    this.dblBonds = 0 // number of double bonds in the loop\n    this.aromatic = true\n    this.convex = isConvex || false\n\n    hbs.forEach((hb) => {\n      const bond: Bond = struct.bonds.get(struct.halfBonds.get(hb)!.bid)!\n      if (bond.type !== Bond.PATTERN.TYPE.AROMATIC) this.aromatic = false\n      if (bond.type === Bond.PATTERN.TYPE.DOUBLE) this.dblBonds++\n    })\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Pile } from './pile'\nimport { Pool } from './pool'\n\nexport interface RGroupAttributes {\n  index?: number\n  ifthen?: number\n  resth?: boolean\n  range?: string\n}\nexport class RGroup {\n  frags: Pile<number>\n  resth: boolean\n  range: string\n  ifthen: number\n  index: number\n\n  constructor(atrributes?: RGroupAttributes) {\n    this.frags = new Pile<number>()\n    this.resth = atrributes?.resth || false\n    this.range = atrributes?.range || ''\n    this.ifthen = atrributes?.ifthen || 0\n    this.index = atrributes?.index || -1\n  }\n\n  static findRGroupByFragment(rgroups: Pool<RGroup>, frid: number) {\n    return rgroups.find((_rgid, rgroup) => rgroup.frags.has(frid))\n  }\n\n  getAttrs(): RGroupAttributes {\n    return {\n      resth: this.resth,\n      range: this.range,\n      ifthen: this.ifthen,\n      index: this.index\n    }\n  }\n\n  clone(fidMap?: Map<number, number> | null): RGroup {\n    const ret = new RGroup(this)\n    this.frags.forEach((fid) => {\n      ret.frags.add(fidMap ? fidMap.get(fid)! : fid)\n    })\n    return ret\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Point, Vec2 } from './vec2'\n\nexport enum RxnArrowMode {\n  OpenAngle = 'open-angle',\n  FilledTriangle = 'filled-triangle',\n  FilledBow = 'filled-bow',\n  DashedOpenAngle = 'dashed-open-angle',\n  Failed = 'failed',\n  BothEndsFilledTriangle = 'both-ends-filled-triangle',\n  EquilibriumFilledTriangle = 'equilibrium-filled-triangle',\n  EquilibriumFilledHalfBow = 'equilibrium-filled-half-bow',\n  EquilibriumOpenAngle = 'equilibrium-open-angle',\n  UnbalancedEquilibriumFilledHalfBow = 'unbalanced-equilibrium-filled-half-bow',\n  UnbalancedEquilibriumOpenHalfAngle = 'unbalanced-equilibrium-open-half-angle',\n  UnbalancedEquilibriumLargeFilledHalfBow = 'unbalanced-equilibrium-large-filled-half-bow',\n  UnbalancedEquilibriumFilledHalfTriangle = 'unbalanced-equilibrium-filled-half-triangle',\n  EllipticalArcFilledBow = 'elliptical-arc-arrow-filled-bow',\n  EllipticalArcFilledTriangle = 'elliptical-arc-arrow-filled-triangle',\n  EllipticalArcOpenAngle = 'elliptical-arc-arrow-open-angle',\n  EllipticalArcOpenHalfAngle = 'elliptical-arc-arrow-open-half-angle'\n}\n\nexport interface RxnArrowAttributes {\n  mode: RxnArrowMode\n  pos?: Array<Point>\n  height?: number\n}\n\nexport class RxnArrow {\n  mode: RxnArrowMode\n  pos: Array<Vec2>\n  height?: number\n\n  static isElliptical(arrow) {\n    return [\n      RxnArrowMode.EllipticalArcFilledBow,\n      RxnArrowMode.EllipticalArcFilledTriangle,\n      RxnArrowMode.EllipticalArcOpenHalfAngle,\n      RxnArrowMode.EllipticalArcOpenAngle\n    ].includes(arrow.mode)\n  }\n\n  constructor(attributes: RxnArrowAttributes) {\n    this.pos = []\n\n    if (attributes.pos) {\n      for (let i = 0; i < attributes.pos.length; i++) {\n        const currentP = attributes.pos[i]\n        this.pos[i] = currentP ? new Vec2(attributes.pos[i]) : new Vec2()\n      }\n    }\n    this.mode = attributes.mode\n    const defaultHeight = 2\n\n    if (RxnArrow.isElliptical(this)) {\n      this.height = attributes.height ?? defaultHeight\n    }\n  }\n\n  clone() {\n    return new RxnArrow(this)\n  }\n\n  center(): Vec2 {\n    return Vec2.centre(this.pos[0], this.pos[1])\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Point, Vec2 } from './vec2'\n\nexport interface RxnPlusAttributes {\n  pp?: Point\n}\n\nexport class RxnPlus {\n  pp: Vec2\n\n  constructor(attributes?: RxnPlusAttributes) {\n    this.pp = attributes?.pp ? new Vec2(attributes.pp) : new Vec2()\n  }\n\n  clone() {\n    return new RxnPlus(this)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Pile } from './pile'\nimport { SGroup } from './sgroup'\nimport assert from 'assert'\n\nexport class SGroupForest {\n  /** node id -> parent id */\n  parent: Map<number, number>\n  /** node id -> list of child ids */\n  children: Map<number, number[]>\n  atomSets: Map<number, any>\n\n  constructor() {\n    this.parent = new Map()\n    this.children = new Map()\n\n    this.children.set(-1, []) // extra root node\n    this.atomSets = new Map()\n  }\n\n  /** returns an array or s-group ids in the order of breadth-first search */\n  getSGroupsBFS(): number[] {\n    const order: number[] = []\n    const queue = Array.from(this.children.get(-1) as Array<number>)\n    while (queue.length > 0) {\n      const id = queue.shift()\n      if (typeof id !== 'number') {\n        break\n      }\n      const children = this.children.get(id)\n      if (typeof children === 'undefined') {\n        break\n      }\n\n      children.forEach((id) => {\n        queue.push(id)\n      })\n\n      order.push(id)\n    }\n\n    return order\n  }\n\n  getAtomSetRelations(newId: any, atoms: any) {\n    // find the lowest superset in the hierarchy\n    const isStrictSuperset = new Map()\n    const isSubset = new Map()\n\n    this.atomSets.delete(newId)\n\n    this.atomSets.forEach((atomSet, id) => {\n      isSubset.set(id, atomSet.isSuperset(atoms))\n      isStrictSuperset.set(\n        id,\n        atoms.isSuperset(atomSet) && !atomSet.equals(atoms)\n      )\n    })\n\n    const parents = Array.from(this.atomSets.keys()).filter((sgid) => {\n      if (!isSubset.get(sgid)) {\n        return false\n      }\n      const childs = this.children.get(sgid)\n      return childs && childs.findIndex((childId) => isSubset.get(childId)) < 0\n    })\n\n    const children = Array.from(this.atomSets.keys()).filter(\n      (id) =>\n        isStrictSuperset.get(id) && !isStrictSuperset.get(this.parent.get(id))\n    )\n\n    return {\n      children,\n      parent: parents.length === 0 ? -1 : parents[0]\n    }\n  }\n\n  getPathToRoot(sgid): number[] {\n    const path: number[] = []\n    for (let id = sgid; id >= 0; id = this.parent.get(id)) {\n      path.push(id)\n    }\n    return path\n  }\n\n  insert({ id, atoms }, parent?: number, children?: number[]) {\n    assert(!this.parent.has(id), 'sgid already present in the forest')\n    assert(!this.children.has(id), 'sgid already present in the forest')\n\n    if (!parent || !children) {\n      // if these are not provided, deduce automatically\n      const guess = this.getAtomSetRelations(id, new Pile(atoms))\n      parent = guess.parent\n      children = guess.children\n    }\n\n    // TODO: make children Map<int, Pile> instead of Map<int, []>?\n    children.forEach((childId) => {\n      this.resetParentLink(childId, id)\n    })\n    this.children.set(\n      id,\n      children.filter((id) => this.parent.get(id))\n    )\n    this.parent.set(id, parent)\n    this.children.get(parent)?.push(id)\n    this.atomSets.set(id, new Pile(atoms))\n\n    return { parent, children }\n  }\n\n  private resetParentLink(childId, id) {\n    const parentId = this.parent.get(childId)\n    if (typeof parentId === 'undefined') {\n      return\n    }\n\n    const childs = this.children.get(parentId)\n    if (!childs) {\n      return\n    }\n\n    const childIndex = childs.indexOf(childId)\n    childs.splice(childIndex, 1)\n    this.parent.set(childId, id)\n  }\n\n  remove(id) {\n    try {\n      assert(this.parent.has(id), 'sgid is not in the forest')\n      assert(this.children.has(id), 'sgid is not in the forest')\n    } catch (e) {\n      console.info('error: sgid is not in the forest')\n    }\n\n    const parentId = this.parent.get(id) as any\n    const childs = this.children.get(parentId) as any\n\n    if (!parentId || !childs) return\n\n    this.children.get(id)?.forEach((childId) => {\n      this.parent.set(childId, parentId)\n      this.children.get(parentId)?.push(childId)\n    })\n\n    const i = childs.indexOf(id)\n    childs.splice(i, 1)\n\n    this.children.delete(id)\n    this.parent.delete(id)\n    this.atomSets.delete(id)\n  }\n}\n\nexport function checkOverlapping(struct, atoms) {\n  const sgroups = atoms.reduce((res, aid) => {\n    const atom = struct.atoms.get(aid)\n    return res.union(atom.sgs)\n  }, new Pile())\n\n  return Array.from(sgroups).some((sid) => {\n    const sg = struct.sgroups.get(sid)\n    if (sg.type === 'DAT') return false\n    const sgAtoms = SGroup.getAtoms(struct, sg)\n\n    return sgAtoms.length < atoms.length\n      ? sgAtoms.findIndex((aid) => atoms.indexOf(aid) === -1) >= 0\n      : atoms.findIndex((aid) => sgAtoms.indexOf(aid) === -1) >= 0\n  })\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Point, Vec2 } from './vec2'\n\nexport enum SimpleObjectMode {\n  ellipse = 'ellipse',\n  rectangle = 'rectangle',\n  line = 'line'\n}\n\nexport interface SimpleObjectAttributes {\n  mode: SimpleObjectMode\n  pos?: Array<Point>\n}\n\nexport class SimpleObject {\n  pos: Array<Vec2>\n  mode: SimpleObjectMode\n\n  constructor(attributes?: SimpleObjectAttributes) {\n    this.pos = []\n\n    if (attributes?.pos) {\n      for (let i = 0; i < attributes.pos.length; i++) {\n        const currentP = attributes.pos[i]\n        this.pos[i] = currentP ? new Vec2(attributes.pos[i]) : new Vec2()\n      }\n    }\n\n    this.mode = attributes?.mode || SimpleObjectMode.line\n  }\n\n  clone(): SimpleObject {\n    return new SimpleObject(this)\n  }\n\n  center(): Vec2 {\n    switch (this.mode) {\n      case SimpleObjectMode.rectangle: {\n        return Vec2.centre(this.pos[0], this.pos[1])\n      }\n      default:\n        return this.pos[0]\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport class Pool<TValue = any> extends Map<number, TValue> {\n  private nextId = 0\n\n  add(item: TValue): number {\n    const id = this.nextId++\n    super.set(id, item)\n    return id\n  }\n\n  newId(): number {\n    return this.nextId++\n  }\n\n  keyOf(item: TValue): number | null {\n    for (const [key, value] of this.entries()) {\n      if (value === item) return key\n    }\n\n    return null\n  }\n\n  find(predicate: (key: number, value: TValue) => boolean): number | null {\n    for (const [key, value] of this.entries()) {\n      if (predicate(key, value)) return key\n    }\n\n    return null\n  }\n\n  filter(predicate: (key: number, value: TValue) => boolean): Pool<TValue> {\n    return new Pool<TValue>(\n      Array.from(this).filter(([key, value]) => predicate(key, value))\n    )\n  }\n\n  some(predicate: (value: TValue) => boolean): boolean {\n    for (const value of this.values()) {\n      if (predicate(value)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, radicalElectrons } from './atom'\n\nimport { Bond } from './bond'\nimport { Box2Abs } from './box2Abs'\nimport { Elements } from 'domain/constants'\nimport { Fragment } from './fragment'\nimport { FunctionalGroup } from './functionalGroup'\nimport { HalfBond } from './halfBond'\nimport { Loop } from './loop'\nimport { Pile } from './pile'\nimport { Pool } from './pool'\nimport { RGroup } from './rgroup'\nimport { RxnArrow } from './rxnArrow'\nimport { RxnPlus } from './rxnPlus'\nimport { SGroup } from './sgroup'\nimport { SGroupForest } from './sgroupForest'\nimport { SimpleObject } from './simpleObject'\nimport { Text } from './text'\nimport { Vec2 } from './vec2'\nimport { Highlight } from './highlight'\n\nexport type Neighbor = {\n  aid: number\n  bid: number\n}\n\nfunction arrayAddIfMissing(array, item) {\n  for (let i = 0; i < array.length; ++i) {\n    if (array[i] === item) return false\n  }\n  array.push(item)\n  return true\n}\n\nexport class Struct {\n  atoms: Pool<Atom>\n  bonds: Pool<Bond>\n  sgroups: Pool<SGroup>\n  halfBonds: Pool<HalfBond>\n  loops: Pool<Loop>\n  isReaction: boolean\n  rxnArrows: Pool<RxnArrow>\n  rxnPluses: Pool<RxnPlus>\n  frags: Pool<Fragment | null>\n  rgroups: Pool<RGroup>\n  name: string\n  abbreviation?: string\n  sGroupForest: SGroupForest\n  simpleObjects: Pool<SimpleObject>\n  texts: Pool<Text>\n  functionalGroups: Pool<FunctionalGroup>\n  highlights: Pool<Highlight>\n\n  constructor() {\n    this.atoms = new Pool<Atom>()\n    this.bonds = new Pool<Bond>()\n    this.sgroups = new Pool<SGroup>()\n    this.halfBonds = new Pool<HalfBond>()\n    this.loops = new Pool<Loop>()\n    this.isReaction = false\n    this.rxnArrows = new Pool<RxnArrow>()\n    this.rxnPluses = new Pool<RxnPlus>()\n    this.frags = new Pool<Fragment>()\n    this.rgroups = new Pool<RGroup>()\n    this.name = ''\n    this.abbreviation = ''\n    this.sGroupForest = new SGroupForest()\n    this.simpleObjects = new Pool<SimpleObject>()\n    this.texts = new Pool<Text>()\n    this.functionalGroups = new Pool<FunctionalGroup>()\n    this.highlights = new Pool<Highlight>()\n  }\n\n  hasRxnProps(): boolean {\n    return !!(\n      this.atoms.find((_aid, atom) => atom.hasRxnProps()) ||\n      this.bonds.find((_bid, bond) => bond.hasRxnProps())\n    )\n  }\n\n  hasRxnArrow(): boolean {\n    return this.rxnArrows.size >= 1\n  }\n\n  hasRxnPluses(): boolean {\n    return this.rxnPluses.size > 0\n  }\n\n  isRxn(): boolean {\n    return this.hasRxnArrow() || this.hasRxnPluses()\n  }\n\n  isBlank(): boolean {\n    return (\n      this.atoms.size === 0 &&\n      this.rxnArrows.size === 0 &&\n      this.rxnPluses.size === 0 &&\n      this.simpleObjects.size === 0 &&\n      this.texts.size === 0\n    )\n  }\n\n  isSingleGroup(): boolean {\n    if (!this.sgroups.size || this.sgroups.size > 1) return false\n    const sgroup = this.sgroups.values().next().value // get sgroup from map\n    return this.atoms.size === sgroup.atoms.length\n  }\n\n  clone(\n    atomSet?: Pile<number> | null,\n    bondSet?: Pile<number> | null,\n    dropRxnSymbols?: boolean,\n    aidMap?: Map<number, number> | null,\n    simpleObjectsSet?: Pile<number> | null,\n    textsSet?: Pile<number> | null\n  ): Struct {\n    return this.mergeInto(\n      new Struct(),\n      atomSet,\n      bondSet,\n      dropRxnSymbols,\n      false,\n      aidMap,\n      simpleObjectsSet,\n      textsSet\n    )\n  }\n\n  getScaffold(): Struct {\n    const atomSet = new Pile<number>()\n    this.atoms.forEach((_atom, aid) => {\n      atomSet.add(aid)\n    })\n\n    this.rgroups.forEach((rg) => {\n      rg.frags.forEach((_fnum, fid) => {\n        this.atoms.forEach((atom, aid) => {\n          if (atom.fragment === fid) atomSet.delete(aid)\n        })\n      })\n    })\n\n    return this.clone(atomSet)\n  }\n\n  getFragmentIds(fid: number): Pile<number> {\n    const atomSet = new Pile<number>()\n\n    this.atoms.forEach((atom, aid) => {\n      if (atom.fragment === fid) atomSet.add(aid)\n    })\n\n    return atomSet\n  }\n\n  getFragment(fid: number): Struct {\n    return this.clone(this.getFragmentIds(fid), null, true)\n  }\n\n  mergeInto(\n    cp: Struct,\n    atomSet?: Pile<number> | null,\n    bondSet?: Pile<number> | null,\n    dropRxnSymbols?: boolean,\n    keepAllRGroups?: boolean,\n    aidMap?: Map<number, number> | null,\n    simpleObjectsSet?: Pile<number> | null,\n    textsSet?: Pile<number> | null\n  ): Struct {\n    atomSet = atomSet || new Pile<number>(this.atoms.keys())\n    bondSet = bondSet || new Pile<number>(this.bonds.keys())\n    simpleObjectsSet =\n      simpleObjectsSet || new Pile<number>(this.simpleObjects.keys())\n    textsSet = textsSet || new Pile<number>(this.texts.keys())\n    aidMap = aidMap || new Map()\n\n    bondSet = bondSet.filter((bid) => {\n      const bond = this.bonds.get(bid)!\n      return atomSet!.has(bond.begin) && atomSet!.has(bond.end)\n    })\n\n    const fidMask = new Pile()\n    this.atoms.forEach((atom, aid) => {\n      if (atomSet!.has(aid)) fidMask.add(atom.fragment)\n    })\n\n    const fidMap = new Map()\n    this.frags.forEach((_frag, fid) => {\n      if (fidMask.has(fid)) fidMap.set(fid, cp.frags.add(null))\n    })\n\n    const rgroupsIds: Array<number> = []\n    this.rgroups.forEach((rgroup, rgid) => {\n      let keepGroup = keepAllRGroups\n      if (!keepGroup) {\n        rgroup.frags.forEach((_fnum, fid) => {\n          rgroupsIds.push(fid)\n          if (fidMask.has(fid)) keepGroup = true\n        })\n\n        if (!keepGroup) return\n      }\n\n      const rg = cp.rgroups.get(rgid)\n      if (rg) {\n        rgroup.frags.forEach((_fnum, fid) => {\n          rgroupsIds.push(fid)\n          if (fidMask.has(fid)) rg.frags.add(fidMap.get(fid))\n        })\n      } else {\n        cp.rgroups.set(rgid, rgroup.clone(fidMap))\n      }\n    })\n\n    // atoms in not RGroup\n    this.atoms.forEach((atom, aid) => {\n      if (atomSet!.has(aid) && rgroupsIds.indexOf(atom.fragment) === -1) {\n        aidMap!.set(aid, cp.atoms.add(atom.clone(fidMap)))\n      }\n    })\n    // atoms in RGroup\n    this.atoms.forEach((atom, aid) => {\n      if (atomSet!.has(aid) && rgroupsIds.indexOf(atom.fragment) !== -1) {\n        aidMap!.set(aid, cp.atoms.add(atom.clone(fidMap)))\n      }\n    })\n\n    fidMap.forEach((newfid, oldfid) => {\n      const fragment = this.frags.get(oldfid)\n\n      // TODO: delete type check\n      if (fragment && fragment instanceof Fragment) {\n        cp.frags.set(newfid, this.frags.get(oldfid)!.clone(aidMap!)) // clone Fragments\n      }\n    })\n\n    const bidMap = new Map()\n    this.bonds.forEach((bond, bid) => {\n      if (bondSet!.has(bid)) bidMap.set(bid, cp.bonds.add(bond.clone(aidMap!)))\n    })\n\n    this.sgroups.forEach((sg) => {\n      if (sg.atoms.some((aid) => !atomSet!.has(aid))) return\n\n      sg = SGroup.clone(sg, aidMap!)\n      const id = cp.sgroups.add(sg)\n      sg.id = id\n\n      sg.atoms.forEach((aid) => {\n        const atom = cp.atoms.get(aid)\n        if (atom) {\n          atom.sgs.add(id)\n        }\n      })\n\n      if (sg.type === 'DAT') cp.sGroupForest.insert(sg, -1, [])\n      else cp.sGroupForest.insert(sg)\n    })\n\n    this.functionalGroups.forEach((fg) => {\n      fg = FunctionalGroup.clone(fg)\n      cp.functionalGroups.add(fg)\n    })\n\n    simpleObjectsSet.forEach((soid) => {\n      cp.simpleObjects.add(this.simpleObjects.get(soid)!.clone())\n    })\n\n    textsSet.forEach((id) => {\n      cp.texts.add(this.texts.get(id)!.clone())\n    })\n\n    if (!dropRxnSymbols) {\n      cp.isReaction = this.isReaction\n      this.rxnArrows.forEach((item) => {\n        cp.rxnArrows.add(item.clone())\n      })\n      this.rxnPluses.forEach((item) => {\n        cp.rxnPluses.add(item.clone())\n      })\n    }\n\n    cp.name = this.name\n\n    return cp\n  }\n\n  // NB: this updates the structure without modifying the corresponding ReStruct.\n  //  To be applied to standalone structures only.\n  prepareLoopStructure() {\n    this.initHalfBonds()\n    this.initNeighbors()\n    this.updateHalfBonds(Array.from(this.atoms.keys()))\n    this.sortNeighbors(Array.from(this.atoms.keys()))\n    this.findLoops()\n  }\n\n  atomAddToSGroup(sgid, aid) {\n    // TODO: [MK] make sure the addition does not break the hierarchy?\n    SGroup.addAtom(this.sgroups.get(sgid)!, aid)\n    this.atoms.get(aid)!.sgs.add(sgid)\n  }\n\n  calcConn(atom) {\n    let conn = 0\n    for (let i = 0; i < atom.neighbors.length; ++i) {\n      const hb = this.halfBonds.get(atom.neighbors[i])!\n      const bond = this.bonds.get(hb.bid)!\n      switch (bond.type) {\n        case Bond.PATTERN.TYPE.SINGLE:\n          conn += 1\n          break\n        case Bond.PATTERN.TYPE.DOUBLE:\n          conn += 2\n          break\n        case Bond.PATTERN.TYPE.TRIPLE:\n          conn += 3\n          break\n        case Bond.PATTERN.TYPE.DATIVE:\n          break\n        case Bond.PATTERN.TYPE.HYDROGEN:\n          break\n        case Bond.PATTERN.TYPE.AROMATIC:\n          if (atom.neighbors.length === 1) return [-1, true]\n          return [atom.neighbors.length, true]\n        default:\n          return [-1, false]\n      }\n    }\n    return [conn, false]\n  }\n\n  findBondId(begin, end) {\n    return this.bonds.find(\n      (_bid, bond) =>\n        (bond.begin === begin && bond.end === end) ||\n        (bond.begin === end && bond.end === begin)\n    )\n  }\n\n  initNeighbors() {\n    this.atoms.forEach((atom) => {\n      atom.neighbors = []\n    })\n\n    this.bonds.forEach((bond) => {\n      const a1 = this.atoms.get(bond.begin)!\n      const a2 = this.atoms.get(bond.end)!\n      a1.neighbors.push(bond.hb1!)\n      a2.neighbors.push(bond.hb2!)\n    })\n  }\n\n  bondInitHalfBonds(bid, bond?: Bond) {\n    bond = bond || this.bonds.get(bid)!\n    bond.hb1 = 2 * bid\n    bond.hb2 = 2 * bid + 1 // eslint-disable-line no-mixed-operators\n    this.halfBonds.set(bond.hb1, new HalfBond(bond.begin, bond.end, bid))\n    this.halfBonds.set(bond.hb2, new HalfBond(bond.end, bond.begin, bid))\n    const hb1 = this.halfBonds.get(bond.hb1)!\n    const hb2 = this.halfBonds.get(bond.hb2)!\n    hb1.contra = bond.hb2\n    hb2.contra = bond.hb1\n  }\n\n  halfBondUpdate(halfBondId: number) {\n    const halfBond = this.halfBonds.get(halfBondId)!\n    const startCoords = this.atoms.get(halfBond.begin)!.pp\n    const endCoords = this.atoms.get(halfBond.end)!.pp\n    const coordsDifference = Vec2.diff(endCoords, startCoords).normalized()\n    halfBond.dir =\n      Vec2.dist(endCoords, startCoords) > 1e-4\n        ? coordsDifference\n        : new Vec2(1, 0)\n    halfBond.norm = halfBond.dir.turnLeft()\n    halfBond.ang = halfBond.dir.oxAngle()\n    if (halfBond.loop < 0) halfBond.loop = -1\n  }\n\n  initHalfBonds() {\n    this.halfBonds.clear()\n    this.bonds.forEach((bond, bid) => {\n      this.bondInitHalfBonds(bid, bond)\n    })\n  }\n\n  setHbNext(hbid, next) {\n    this.halfBonds.get(this.halfBonds.get(hbid)!.contra)!.next = next\n  }\n\n  halfBondSetAngle(hbid, left) {\n    const hb = this.halfBonds.get(hbid)!\n    const hbl = this.halfBonds.get(left)!\n\n    hbl.rightCos = Vec2.dot(hbl.dir, hb.dir)\n    hb.leftCos = Vec2.dot(hbl.dir, hb.dir)\n\n    hbl.rightSin = Vec2.cross(hbl.dir, hb.dir)\n    hb.leftSin = Vec2.cross(hbl.dir, hb.dir)\n\n    hb.leftNeighbor = left\n    hbl.rightNeighbor = hbid\n  }\n\n  atomAddNeighbor(hbid) {\n    const hb = this.halfBonds.get(hbid)!\n    const atom = this.atoms.get(hb.begin)!\n\n    let i\n    for (i = 0; i < atom.neighbors.length; ++i) {\n      if (this.halfBonds.get(atom.neighbors[i])!.ang > hb.ang) break\n    }\n    atom.neighbors.splice(i, 0, hbid)\n    const ir = atom.neighbors[(i + 1) % atom.neighbors.length]\n    const il =\n      atom.neighbors[(i + atom.neighbors.length - 1) % atom.neighbors.length]\n    this.setHbNext(il, hbid)\n    this.setHbNext(hbid, ir)\n    this.halfBondSetAngle(hbid, il)\n    this.halfBondSetAngle(ir, hbid)\n  }\n\n  atomSortNeighbors(aid) {\n    const atom = this.atoms.get(aid)!\n    const halfBonds = this.halfBonds\n\n    atom.neighbors\n      .sort((nei, nei2) => halfBonds.get(nei)!.ang - halfBonds.get(nei2)!.ang)\n      .forEach((nei, i) => {\n        const nextNei = atom.neighbors[(i + 1) % atom.neighbors.length]\n        this.halfBonds.get(this.halfBonds.get(nei)!.contra)!.next = nextNei\n        this.halfBondSetAngle(nextNei, nei)\n      })\n  }\n\n  sortNeighbors(list) {\n    if (!list) {\n      this.atoms.forEach((_atom, aid) => {\n        this.atomSortNeighbors(aid)\n      })\n    } else {\n      list.forEach((aid) => {\n        this.atomSortNeighbors(aid)\n      })\n    }\n  }\n\n  atomUpdateHalfBonds(atomId: number) {\n    this.atoms.get(atomId)!.neighbors.forEach((hbid) => {\n      this.halfBondUpdate(hbid)\n      this.halfBondUpdate(this.halfBonds.get(hbid)!.contra)\n    })\n  }\n\n  updateHalfBonds(list) {\n    if (!list) {\n      this.atoms.forEach((_atom, atomId) => {\n        this.atomUpdateHalfBonds(atomId)\n      })\n    } else {\n      list.forEach((atomId) => {\n        this.atomUpdateHalfBonds(atomId)\n      })\n    }\n  }\n\n  sGroupsRecalcCrossBonds() {\n    this.sgroups.forEach((sg) => {\n      sg.xBonds = []\n      sg.neiAtoms = []\n    })\n\n    this.bonds.forEach((bond, bid) => {\n      const a1 = this.atoms.get(bond.begin)!\n      const a2 = this.atoms.get(bond.end)!\n\n      a1.sgs.forEach((sgid) => {\n        if (!a2.sgs.has(sgid)) {\n          const sg = this.sgroups.get(sgid)!\n          sg.xBonds.push(bid)\n          arrayAddIfMissing(sg.neiAtoms, bond.end)\n        }\n      })\n\n      a2.sgs.forEach((sgid) => {\n        if (!a1.sgs.has(sgid)) {\n          const sg = this.sgroups.get(sgid)!\n          sg.xBonds.push(bid)\n          arrayAddIfMissing(sg.neiAtoms, bond.begin)\n        }\n      })\n    })\n  }\n\n  sGroupDelete(sgid: number) {\n    this.sgroups.get(sgid)!.atoms.forEach((atom) => {\n      this.atoms.get(atom)!.sgs.delete(sgid)\n    })\n\n    this.sGroupForest.remove(sgid)\n    this.sgroups.delete(sgid)\n  }\n\n  atomSetPos(id: number, pp: Vec2): void {\n    const item = this.atoms.get(id)!\n    item.pp = pp\n  }\n\n  rxnPlusSetPos(id: number, pp: Vec2): void {\n    const item = this.rxnPluses.get(id)!\n    item.pp = pp\n  }\n\n  rxnArrowSetPos(id: number, pos: Array<Vec2>): void {\n    const item = this.rxnArrows.get(id)\n    if (item) {\n      item.pos = pos\n    }\n  }\n\n  simpleObjectSetPos(id: number, pos: Array<Vec2>) {\n    const item = this.simpleObjects.get(id)!\n    item.pos = pos\n  }\n\n  textSetPosition(id: number, position: Vec2): void {\n    const item = this.texts.get(id)\n\n    if (item) {\n      item.position = position\n    }\n  }\n\n  getCoordBoundingBox(atomSet?: Pile<number>) {\n    let bb: any = null\n    function extend(pp) {\n      if (!bb) {\n        bb = {\n          min: pp,\n          max: pp\n        }\n      } else {\n        if (pp instanceof Array) {\n          pp.forEach((vec) => {\n            bb.min = Vec2.min(bb.min, vec)\n            bb.max = Vec2.max(bb.max, vec)\n          })\n        } else {\n          bb.min = Vec2.min(bb.min, pp)\n          bb.max = Vec2.max(bb.max, pp)\n        }\n      }\n    }\n\n    const global = !atomSet || atomSet.size === 0\n\n    this.atoms.forEach((atom, aid) => {\n      if (global || atomSet!.has(aid)) extend(atom.pp)\n    })\n    if (global) {\n      this.rxnPluses.forEach((item) => {\n        extend(item.pp)\n      })\n      this.rxnArrows.forEach((item) => {\n        extend(item.pos)\n      })\n      this.simpleObjects.forEach((item) => {\n        extend(item.pos)\n      })\n      this.texts.forEach((item) => {\n        extend(item.position)\n      })\n    }\n    if (!bb && global) {\n      bb = {\n        min: new Vec2(0, 0),\n        max: new Vec2(1, 1)\n      }\n    }\n    return bb\n  }\n\n  getCoordBoundingBoxObj() {\n    let bb: any = null\n    function extend(pp) {\n      if (!bb) {\n        bb = {\n          min: new Vec2(pp),\n          max: new Vec2(pp)\n        }\n      } else {\n        bb.min = Vec2.min(bb.min, pp)\n        bb.max = Vec2.max(bb.max, pp)\n      }\n    }\n\n    this.atoms.forEach((atom) => {\n      extend(atom.pp)\n    })\n    return bb\n  }\n\n  getBondLengthData() {\n    let totalLength = 0\n    let cnt = 0\n    this.bonds.forEach((bond) => {\n      totalLength += Vec2.dist(\n        this.atoms.get(bond.begin)!.pp,\n        this.atoms.get(bond.end)!.pp\n      )\n      cnt++\n    })\n    return { cnt, totalLength }\n  }\n\n  getAvgBondLength(): number {\n    const bld = this.getBondLengthData()\n    return bld.cnt > 0 ? bld.totalLength / bld.cnt : -1\n  }\n\n  getAvgClosestAtomDistance(): number {\n    let totalDist = 0\n    let minDist\n    let dist = 0\n    const keys = Array.from(this.atoms.keys())\n    let k\n    let j\n    for (k = 0; k < keys.length; ++k) {\n      minDist = -1\n      for (j = 0; j < keys.length; ++j) {\n        if (j === k) continue // eslint-disable-line no-continue\n        dist = Vec2.dist(\n          this.atoms.get(keys[j])!.pp,\n          this.atoms.get(keys[k])!.pp\n        )\n        if (minDist < 0 || minDist > dist) minDist = dist\n      }\n      totalDist += minDist\n    }\n\n    return keys.length > 0 ? totalDist / keys.length : -1\n  }\n\n  checkBondExists(begin: number, end: number): boolean {\n    const key = this.bonds.find(\n      (_bid, bond) =>\n        (bond.begin === begin && bond.end === end) ||\n        (bond.end === begin && bond.begin === end)\n    )\n\n    return key !== undefined\n  }\n\n  findConnectedComponent(firstaid: number): Pile<number> {\n    const list = [firstaid]\n    const ids = new Pile<number>()\n    while (list.length > 0) {\n      const aid = list.pop()!\n      ids.add(aid)\n      const atom = this.atoms.get(aid)!\n      atom.neighbors.forEach((nei) => {\n        const neiId = this.halfBonds.get(nei)!.end\n        if (!ids.has(neiId)) list.push(neiId)\n      })\n    }\n\n    return ids\n  }\n\n  findConnectedComponents(discardExistingFragments?: boolean) {\n    // NB: this is a hack\n    // TODO: need to maintain half-bond and neighbor structure permanently\n    if (!this.halfBonds.size) {\n      this.initHalfBonds()\n      this.initNeighbors()\n      this.updateHalfBonds(Array.from(this.atoms.keys()))\n      this.sortNeighbors(Array.from(this.atoms.keys()))\n    }\n\n    let addedAtoms = new Pile<number>()\n\n    const components: Array<any> = []\n    this.atoms.forEach((atom, aid) => {\n      if (\n        (discardExistingFragments || atom.fragment < 0) &&\n        !addedAtoms.has(aid)\n      ) {\n        const component = this.findConnectedComponent(aid)\n        components.push(component)\n        addedAtoms = addedAtoms.union(component)\n      }\n    })\n\n    return components\n  }\n\n  markFragment(idSet: Pile<number>) {\n    const frag = new Fragment()\n    const fid = this.frags.add(frag)\n\n    idSet.forEach((aid) => {\n      const atom = this.atoms.get(aid)!\n      if (atom.stereoLabel) frag.updateStereoAtom(this, aid, fid, true)\n      atom.fragment = fid\n    })\n  }\n\n  markFragments() {\n    const components = this.findConnectedComponents()\n    components.forEach((comp) => {\n      this.markFragment(comp)\n    })\n  }\n\n  scale(scale: number) {\n    if (scale === 1) return\n\n    this.atoms.forEach((atom) => {\n      atom.pp = atom.pp.scaled(scale)\n    })\n\n    this.rxnPluses.forEach((item) => {\n      item.pp = item.pp.scaled(scale)\n    })\n\n    this.rxnArrows.forEach((item) => {\n      item.pos = item.pos.map((p) => p.scaled(scale))\n    })\n\n    this.sgroups.forEach((item) => {\n      item.pp = item.pp ? item.pp.scaled(scale) : null\n    })\n\n    this.texts.forEach((item) => {\n      // Scale text only for reactions - i.e file contains reaction arrows\n      const isReactionStruct = this.rxnArrows.size\n      if (isReactionStruct) {\n        item.pos = item.pos.map((p) => p.scaled(scale))\n        item.position = item.position.scaled(scale)\n      }\n    })\n  }\n\n  rescale() {\n    let avg = this.getAvgBondLength()\n    if (avg < 0 && !this.isReaction) {\n      // TODO [MK] this doesn't work well for reactions as the distances between\n      // the atoms in different components are generally larger than those between atoms of a single component\n      // (KETCHER-341)\n      avg = this.getAvgClosestAtomDistance()\n    }\n    if (avg < 1e-3) avg = 1\n\n    const scale = 1 / avg\n    this.scale(scale)\n  }\n\n  loopHasSelfIntersections(hbs: Array<number>) {\n    for (let i = 0; i < hbs.length; ++i) {\n      const hbi = this.halfBonds.get(hbs[i])!\n      const ai = this.atoms.get(hbi.begin)!.pp\n      const bi = this.atoms.get(hbi.end)!.pp\n      const set = new Pile([hbi.begin, hbi.end])\n\n      for (let j = i + 2; j < hbs.length; ++j) {\n        const hbj = this.halfBonds.get(hbs[j])!\n        if (set.has(hbj.begin) || set.has(hbj.end)) continue // skip edges sharing an atom\n\n        const aj = this.atoms.get(hbj.begin)!.pp\n        const bj = this.atoms.get(hbj.end)!.pp\n\n        if (Box2Abs.segmentIntersection(ai, bi, aj, bj)) return true\n      }\n    }\n\n    return false\n  }\n\n  // partition a cycle into simple cycles\n  // TODO: [MK] rewrite the detection algorithm to only find simple ones right away?\n  partitionLoop(loop: any) {\n    // eslint-disable-line max-statements\n    const subloops: Array<any> = []\n    let continueFlag = true\n    while (continueFlag) {\n      const atomToHalfBond = {} // map from every atom in the loop to the index of the first half-bond starting from that atom in the uniqHb array\n      continueFlag = false\n\n      for (let l = 0; l < loop.length; ++l) {\n        const hbid = loop[l]\n        const aid1 = this.halfBonds.get(hbid)!.begin\n        const aid2 = this.halfBonds.get(hbid)!.end\n        if (aid2 in atomToHalfBond) {\n          // subloop found\n          const s = atomToHalfBond[aid2] // where the subloop begins\n          const subloop = loop.slice(s, l + 1)\n          subloops.push(subloop)\n          if (l < loop.length) {\n            // remove half-bonds corresponding to the subloop\n            loop.splice(s, l - s + 1)\n          }\n          continueFlag = true\n          break\n        }\n        atomToHalfBond[aid1] = l\n      }\n      if (!continueFlag) subloops.push(loop) // we're done, no more subloops found\n    }\n    return subloops\n  }\n\n  halfBondAngle(hbid1: number, hbid2: number): number {\n    const hba = this.halfBonds.get(hbid1)!\n    const hbb = this.halfBonds.get(hbid2)!\n    return Math.atan2(Vec2.cross(hba.dir, hbb.dir), Vec2.dot(hba.dir, hbb.dir))\n  }\n\n  loopIsConvex(loop: Array<any>): boolean {\n    return loop.every((item, k, loopArr) => {\n      const angle = this.halfBondAngle(item, loopArr[(k + 1) % loopArr.length])\n      return angle <= 0\n    })\n  }\n\n  // check whether a loop is on the inner or outer side of the polygon\n  //  by measuring the total angle between bonds\n  loopIsInner(loop: Array<any>): boolean {\n    let totalAngle = 2 * Math.PI\n    loop.forEach((hbida, k, loopArr) => {\n      const hbidb = loopArr[(k + 1) % loopArr.length]\n      const hbb = this.halfBonds.get(hbidb)!\n      const angle = this.halfBondAngle(hbida, hbidb)\n      totalAngle += hbb.contra === hbida ? Math.PI : angle // back and forth along the same edge\n    })\n    return Math.abs(totalAngle) < Math.PI\n  }\n\n  findLoops() {\n    const newLoops: Array<any> = []\n    const bondsToMark = new Pile<number>()\n\n    /*\n      Starting from each half-bond not known to be in a loop yet,\n      follow the 'next' links until the initial half-bond is reached or\n      the length of the sequence exceeds the number of half-bonds available.\n      In a planar graph, as long as every bond is a part of some \"loop\" -\n      either an outer or an inner one - every iteration either yields a loop\n      or doesn't start at all. Thus this has linear complexity in the number\n      of bonds for planar graphs.\n   */\n\n    let hbIdNext, c, loop\n    this.halfBonds.forEach((hb, hbId) => {\n      if (hb.loop !== -1) return\n\n      for (\n        hbIdNext = hbId, c = 0, loop = [];\n        c <= this.halfBonds.size;\n        hbIdNext = this.halfBonds.get(hbIdNext)!.next, ++c\n      ) {\n        if (!(c > 0 && hbIdNext === hbId)) {\n          loop.push(hbIdNext)\n          continue // eslint-disable-line no-continue\n        }\n\n        // loop found\n        const subloops = this.partitionLoop(loop)\n        subloops.forEach((loop) => {\n          let loopId\n          if (this.loopIsInner(loop) && !this.loopHasSelfIntersections(loop)) {\n            /*\n                        loop is internal\n                        use lowest half-bond id in the loop as the loop id\n                        this ensures that the loop gets the same id if it is discarded and then recreated,\n                        which in turn is required to enable redrawing while dragging, as actions store item id's\n                     */\n            loopId = Math.min(...loop)\n            this.loops.set(\n              loopId,\n              new Loop(loop, this, this.loopIsConvex(loop))\n            )\n          } else {\n            loopId = -2\n          }\n\n          loop.forEach((hbid) => {\n            this.halfBonds.get(hbid)!.loop = loopId\n            bondsToMark.add(this.halfBonds.get(hbid)!.bid)\n          })\n\n          if (loopId >= 0) newLoops.push(loopId)\n        })\n        break\n      }\n    })\n\n    return {\n      newLoops,\n      bondsToMark: Array.from(bondsToMark)\n    }\n  }\n\n  calcImplicitHydrogen(aid: number) {\n    const atom = this.atoms.get(aid)!\n    const [conn, isAromatic] = this.calcConn(atom)\n    let correctConn = conn\n    atom.badConn = false\n\n    if (isAromatic) {\n      if (atom.label === 'C' && atom.charge === 0) {\n        if (conn === 3) {\n          atom.implicitH = -radicalElectrons(atom.radical)\n          return\n        }\n        if (conn === 2) {\n          atom.implicitH = 1 - radicalElectrons(atom.radical)\n          return\n        }\n      } else if (\n        (atom.label === 'O' && atom.charge === 0) ||\n        (atom.label === 'N' && atom.charge === 0 && conn === 3) ||\n        (atom.label === 'N' && atom.charge === 1 && conn === 3) ||\n        (atom.label === 'S' && atom.charge === 0 && conn === 3)\n      ) {\n        atom.implicitH = 0\n        return\n      } else if (!atom.hasImplicitH) {\n        correctConn++\n      }\n    }\n\n    if (correctConn < 0 || atom.isQuery()) {\n      atom.implicitH = 0\n      return\n    }\n\n    if (atom.explicitValence >= 0) {\n      const elem = Elements.get(atom.label)\n      atom.implicitH = elem\n        ? atom.explicitValence - atom.calcValenceMinusHyd(correctConn)\n        : 0\n      if (atom.implicitH < 0) {\n        atom.implicitH = 0\n        atom.badConn = true\n      }\n    } else {\n      atom.calcValence(correctConn)\n    }\n  }\n\n  setImplicitHydrogen(list?: Array<number>) {\n    this.sgroups.forEach((item) => {\n      if (item.data.fieldName === 'MRV_IMPLICIT_H') {\n        this.atoms.get(item.atoms[0])!.hasImplicitH = true\n      }\n    })\n\n    if (!list) {\n      this.atoms.forEach((_atom, aid) => {\n        this.calcImplicitHydrogen(aid)\n      })\n    } else {\n      list.forEach((aid) => {\n        if (this.atoms.get(aid)) {\n          this.calcImplicitHydrogen(aid)\n        }\n      })\n    }\n  }\n\n  atomGetNeighbors(aid: number): Array<Neighbor> | undefined {\n    return this.atoms.get(aid)?.neighbors.map((nei) => {\n      const hb = this.halfBonds.get(nei)!\n      return {\n        aid: hb.end,\n        bid: hb.bid\n      }\n    })\n  }\n\n  getComponents() {\n    // eslint-disable-line max-statements\n    /* saver */\n    const connectedComponents = this.findConnectedComponents(true)\n    const barriers: Array<any> = []\n    let arrowPos: number | null = null\n\n    this.rxnArrows.forEach((item) => {\n      // there's just one arrow\n      arrowPos = item.center().x\n    })\n\n    this.rxnPluses.forEach((item) => {\n      barriers.push(item.pp.x)\n    })\n\n    if (arrowPos !== null) barriers.push(arrowPos)\n\n    barriers.sort((a, b) => a - b)\n\n    const components: Array<any> = []\n\n    connectedComponents.forEach((component) => {\n      const bb = this.getCoordBoundingBox(component)\n      const c = Vec2.lc2(bb.min, 0.5, bb.max, 0.5)\n      let j = 0\n\n      while (c.x > barriers[j]) ++j\n\n      components[j] = components[j] || new Pile()\n      components[j] = components[j].union(component)\n    })\n\n    const submolTexts: Array<string> = []\n    const reactants: Array<any> = []\n    const products: Array<any> = []\n\n    components.forEach((component) => {\n      if (!component) {\n        submolTexts.push('')\n        return\n      }\n\n      const rxnFragmentType = this.defineRxnFragmentTypeForAtomset(\n        component,\n        arrowPos || 0\n      )\n\n      if (rxnFragmentType === 1) reactants.push(component)\n      else products.push(component)\n    })\n\n    return {\n      reactants,\n      products\n    }\n  }\n\n  defineRxnFragmentTypeForAtomset(atomset: Pile<number>, arrowpos: number) {\n    const bb = this.getCoordBoundingBox(atomset)\n    const c = Vec2.lc2(bb.min, 0.5, bb.max, 0.5)\n    return c.x < arrowpos ? 1 : 2\n  }\n\n  getBondFragment(bid: number) {\n    const aid = this.bonds.get(bid)?.begin\n    return aid && this.atoms.get(aid)?.fragment\n  }\n\n  bindSGroupsToFunctionalGroups() {\n    this.sgroups.forEach((sgroup) => {\n      if (FunctionalGroup.isFunctionalGroup(sgroup)) {\n        this.functionalGroups.add(new FunctionalGroup(sgroup))\n      }\n    })\n  }\n\n  getGroupIdFromAtomId(atomId: number): number | null {\n    for (const [groupId, sgroup] of Array.from(this.sgroups)) {\n      if (sgroup.atoms.includes(atomId)) return groupId\n    }\n    return null\n  }\n\n  // TODO: simplify if bonds ids ever appear in sgroup\n  // ! deprecate\n  getGroupIdFromBondId(bondId: number): number | null {\n    const bond = this.bonds.get(bondId)\n    if (!bond) return null\n    for (const [groupId, sgroup] of Array.from(this.sgroups)) {\n      if (\n        sgroup.atoms.includes(bond.begin) ||\n        sgroup.atoms.includes(bond.end)\n      ) {\n        return groupId\n      }\n    }\n    return null\n  }\n\n  getGroupsIdsFromBondId(bondId: number): number[] {\n    const bond = this.bonds.get(bondId)\n    if (!bond) return []\n\n    const groupsIds: number[] = []\n\n    for (const [groupId, sgroup] of Array.from(this.sgroups)) {\n      if (\n        sgroup.atoms.includes(bond.begin) ||\n        sgroup.atoms.includes(bond.end)\n      ) {\n        groupsIds.push(groupId)\n      }\n    }\n    return groupsIds\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2, Point } from './vec2'\n\n// TODO: move to infrastructure\nexport enum TextCommand {\n  Bold = 'BOLD',\n  Italic = 'ITALIC',\n  Subscript = 'SUBSCRIPT',\n  Superscript = 'SUPERSCRIPT',\n  FontSize = 'CUSTOM_FONT_SIZE'\n}\n\nexport interface TextAttributes {\n  // TODO: add Interface for content type\n  content: string\n  position: Point\n  pos: Array<Point>\n}\n\nfunction preparePositions(positions?: Array<Point>) {\n  if (!positions || !positions.length) {\n    return [new Vec2(), new Vec2(), new Vec2(), new Vec2()]\n  }\n\n  return positions.map((position) => new Vec2(position))\n}\n\nexport class Text {\n  content: string\n  position: Vec2\n  pos: Array<Vec2>\n\n  constructor(attributes?: TextAttributes) {\n    this.pos = preparePositions(attributes?.pos)\n    this.content = attributes?.content || ''\n    this.position = attributes?.position\n      ? new Vec2(attributes.position)\n      : new Vec2()\n  }\n\n  setPos(coords: Array<Vec2>): void {\n    this.pos = coords || []\n  }\n\n  clone(): Text {\n    return new Text(this)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport interface HighlightAttributes {\n  atoms: Array<number>\n  bonds: Array<number>\n  color: string\n}\n\nexport class Highlight {\n  atoms: Array<number>\n  bonds: Array<number>\n  color: string\n\n  constructor(attributes: HighlightAttributes) {\n    const { atoms, bonds, color } = attributes\n    this.color = color\n    this.atoms = atoms\n    this.bonds = bonds\n  }\n}\n","/****************************************************************************\n * Copyright 2022 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { cloneDeepWith, cloneDeep } from 'lodash'\n\nconst customizer = (value: any) => {\n  if (typeof value === 'object' && value.y) {\n    const clonedValue = cloneDeep(value)\n    clonedValue.y = -clonedValue.y\n    return clonedValue\n  }\n}\n\nexport const getNodeWithInvertedYCoord = (node: object) =>\n  cloneDeepWith(node, customizer)\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function arrowToKet(arrowNode) {\n  return {\n    type: 'arrow',\n    data: getNodeWithInvertedYCoord(arrowNode.data)\n  }\n}\n\nexport function plusToKet(plusNode) {\n  const coord = plusNode.center\n  return {\n    type: 'plus',\n    location: [coord.x, -coord.y, coord.z],\n    prop: plusNode.data\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport function ifDef<TValue = any>(\n  target: any,\n  key: string,\n  value: TValue,\n  defaultValue?: TValue\n) {\n  if (\n    value !== undefined &&\n    value !== null &&\n    value !== defaultValue &&\n    !(Array.isArray(value) && value.length === 0)\n  ) {\n    target[key] = value\n  }\n}\n","export function tfx<TValue extends number | string>(value: TValue): string {\n  let parsedValue: number\n  if (typeof value === 'number') {\n    parsedValue = value\n  } else {\n    parsedValue = parseFloat(value)\n  }\n  return parsedValue.toFixed(8)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport EventEmitter from 'events'\n\nexport enum KetcherAsyncEvents {\n  LOADING = 'LOADING',\n  SUCCESS = 'SUCCESS',\n  FAILURE = 'FAILURE'\n}\n\nexport const runAsyncAction = async <T = any>(\n  action: () => Promise<T>,\n  eventEmitter: EventEmitter\n): Promise<T | undefined> => {\n  eventEmitter.emit(KetcherAsyncEvents.LOADING)\n  try {\n    const res = await action()\n    eventEmitter.emit(KetcherAsyncEvents.SUCCESS)\n    return res\n  } catch {\n    eventEmitter.emit(KetcherAsyncEvents.FAILURE)\n    return undefined\n  }\n}\n","export function b64toBlob(\n  b64Data: string,\n  contentType = '',\n  sliceSize = 512\n): Blob {\n  const byteCharacters: string = window.atob(b64Data)\n  const byteArrays: Array<Uint8Array> = []\n\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n    const slice: string = byteCharacters.slice(offset, offset + sliceSize)\n    const byteNumbers: Array<number> = new Array(slice.length)\n\n    for (let i = 0; i < slice.length; i++) {\n      byteNumbers[i] = slice.charCodeAt(i)\n    }\n\n    const byteArray: Uint8Array = new Uint8Array(byteNumbers)\n    byteArrays.push(byteArray)\n  }\n\n  const blob: Blob = new Blob(byteArrays, { type: contentType })\n  return blob\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct } from 'domain/entities'\nimport { ifDef } from 'utilities'\n\nexport function headerToKet(struct: Struct): any {\n  const header = {}\n\n  ifDef(header, 'moleculeName', struct.name, '')\n  ifDef(header, 'creatorProgram', null, '')\n  ifDef(header, 'comment', null, '')\n\n  return Object.keys(header).length !== 0 ? header : null\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { SGroup, Struct } from 'domain/entities'\n\nimport { ifDef } from 'utilities'\n\nfunction fromRlabel(rg) {\n  const res: Array<any> = []\n  let rgi\n  let val\n  for (rgi = 0; rgi < 32; rgi++) {\n    if (rg & (1 << rgi)) {\n      val = rgi + 1\n      res.push(val) // push the string\n    }\n  }\n  return res\n}\n\nexport function moleculeToKet(struct: Struct): any {\n  const body: any = {\n    atoms: Array.from(struct.atoms.values()).map((atom) => {\n      if (atom.label === 'R#') return rglabelToKet(atom)\n      if (atom.label === 'L#') return atomListToKet(atom)\n      return atomToKet(atom)\n    })\n  }\n\n  if (struct.bonds.size !== 0) {\n    body.bonds = Array.from(struct.bonds.values()).map(bondToKet)\n  }\n\n  if (struct.sgroups.size !== 0) {\n    body.sgroups = Array.from(struct.sgroups.values()).map((sGroup) =>\n      sgroupToKet(struct, sGroup)\n    )\n  }\n\n  const fragment = struct.frags.get(0)\n  if (fragment) {\n    ifDef(body, 'stereoFlagPosition', fragment.stereoFlagPosition, null)\n  }\n  return {\n    type: 'molecule',\n    ...body\n  }\n}\n\nfunction atomToKet(source) {\n  const result = {}\n  ifDef(result, 'label', source.label)\n  ifDef(result, 'alias', source.alias)\n  ifDef(result, 'location', [source.pp.x, -source.pp.y, source.pp.z])\n  ifDef(result, 'charge', source.charge, 0)\n  ifDef(result, 'explicitValence', source.explicitValence, -1)\n  ifDef(result, 'isotope', source.isotope, 0)\n  ifDef(result, 'radical', source.radical, 0)\n  ifDef(result, 'attachmentPoints', source.attpnt, 0)\n  // stereo\n  ifDef(result, 'stereoLabel', source.stereoLabel, null)\n  ifDef(result, 'stereoParity', source.stereoCare, 0)\n  ifDef(result, 'weight', source.weight, 0)\n  // query\n  ifDef(result, 'ringBondCount', source.ringBondCount, 0)\n  ifDef(result, 'substitutionCount', source.substitutionCount, 0)\n  ifDef(result, 'unsaturatedAtom', !!source.unsaturatedAtom, false)\n  ifDef(result, 'hCount', source.hCount, 0)\n  // reaction\n  ifDef(result, 'mapping', parseInt(source.aam), 0)\n  ifDef(result, 'invRet', source.invRet, 0)\n  ifDef(result, 'exactChangeFlag', !!source.exactChangeFlag, false)\n  return result\n}\n\nfunction rglabelToKet(source) {\n  const result = {\n    type: 'rg-label'\n  }\n  ifDef(result, 'location', [source.pp.x, -source.pp.y, source.pp.z])\n  ifDef(result, 'attachmentPoints', source.attpnt, 0)\n\n  const refsToRGroups = fromRlabel(source.rglabel).map(\n    (rgnumber) => `rg-${rgnumber}`\n  )\n  ifDef(result, '$refs', refsToRGroups)\n\n  return result\n}\n\nfunction atomListToKet(source) {\n  const result = {\n    type: 'atom-list'\n  }\n  ifDef(result, 'location', [source.pp.x, -source.pp.y, source.pp.z])\n  ifDef(result, 'attachmentPoints', source.attpnt, 0)\n  ifDef(result, 'elements', source.atomList.labelList())\n  ifDef(result, 'notList', source.atomList.notList, false)\n  return result\n}\n\nfunction bondToKet(source) {\n  const result = {}\n\n  ifDef(result, 'type', source.type)\n  ifDef(result, 'atoms', [source.begin, source.end])\n  ifDef(result, 'stereo', source.stereo, 0)\n  ifDef(result, 'topology', source.topology, 0)\n  ifDef(result, 'center', source.reactingCenterStatus, 0)\n\n  return result\n}\n\nfunction sgroupToKet(struct, source) {\n  const result = {}\n\n  ifDef(result, 'type', source.type)\n  ifDef(result, 'atoms', source.atoms)\n\n  switch (source.type) {\n    case 'GEN':\n      break\n    case 'MUL': {\n      ifDef(result, 'mul', source.data.mul || 1)\n      break\n    }\n    case 'SRU': {\n      ifDef(result, 'subscript', source.data.subscript || 'n')\n      ifDef(\n        result,\n        'connectivity',\n        source.data.connectivity.toUpperCase() || 'ht'\n      )\n      break\n    }\n    case 'SUP': {\n      ifDef(result, 'name', source.data.name || '')\n      ifDef(result, 'expanded', source.data.expanded)\n      ifDef(result, 'id', source.id)\n      break\n    }\n    case 'DAT': {\n      const data = source.data\n      ifDef(result, 'placement', data.absolute, true)\n      ifDef(result, 'display', data.attached, false)\n      ifDef(result, 'context', data.context)\n      ifDef(result, 'fieldName', data.fieldName)\n      ifDef(result, 'fieldData', data.fieldValue)\n      ifDef(result, 'bonds', SGroup.getBonds(struct, source))\n      break\n    }\n    default:\n      break\n  }\n\n  return result\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Bond, SGroup, Struct } from 'domain/entities'\n\nimport { Elements } from 'domain/constants'\nimport { ifDef } from 'utilities'\n\nexport function toRlabel(values) {\n  let res = 0\n  values.forEach((val) => {\n    const rgi = val - 1\n    res |= 1 << rgi\n  })\n  return res\n}\n\nexport function moleculeToStruct(ketItem: any): Struct {\n  const struct = new Struct()\n  ketItem.atoms.forEach((atom) => {\n    if (atom.type === 'rg-label') struct.atoms.add(rglabelToStruct(atom))\n    if (atom.type === 'atom-list') struct.atoms.add(atomListToStruct(atom))\n    if (!atom.type) struct.atoms.add(atomToStruct(atom))\n  })\n\n  if (ketItem.bonds) {\n    ketItem.bonds.forEach((bond) => struct.bonds.add(bondToStruct(bond)))\n  }\n\n  if (ketItem.sgroups) {\n    ketItem.sgroups.forEach((sgroup) =>\n      struct.sgroups.add(sgroupToStruct(sgroup))\n    )\n  }\n\n  struct.initHalfBonds()\n  struct.initNeighbors()\n  struct.markFragments()\n  struct.bindSGroupsToFunctionalGroups()\n\n  return struct\n}\n\nexport function atomToStruct(source) {\n  const params: any = {}\n\n  ifDef(params, 'label', source.label)\n  ifDef(params, 'alias', source.alias)\n  ifDef(params, 'pp', {\n    x: source.location[0],\n    y: -source.location[1],\n    z: source.location[2] || 0.0\n  })\n  ifDef(params, 'charge', source.charge)\n  ifDef(params, 'explicitValence', source.explicitValence)\n  ifDef(params, 'isotope', source.isotope)\n  ifDef(params, 'radical', source.radical)\n  ifDef(params, 'attpnt', source.attachmentPoints)\n  // stereo\n  ifDef(params, 'stereoLabel', source.stereoLabel)\n  ifDef(params, 'stereoParity', source.stereoParity)\n  ifDef(params, 'weight', source.weight)\n  // query\n  ifDef(params, 'ringBondCount', source.ringBondCount)\n  ifDef(params, 'substitutionCount', source.substitutionCount)\n  ifDef(params, 'unsaturatedAtom', Number(Boolean(source.unsaturatedAtom)))\n  ifDef(params, 'hCount', source.hCount)\n  // reaction\n  ifDef(params, 'aam', source.mapping)\n  ifDef(params, 'invRet', source.invRet)\n  ifDef(params, 'exactChangeFlag', Number(Boolean(source.exactChangeFlag)))\n  return new Atom(params)\n}\n\nexport function rglabelToStruct(source) {\n  const params: any = {}\n  params.label = 'R#'\n  ifDef(params, 'pp', {\n    x: source.location[0],\n    y: -source.location[1],\n    z: source.location[2] || 0.0\n  })\n  ifDef(params, 'attpnt', source.attachmentPoints)\n  const rglabel = toRlabel(source.$refs.map((el) => parseInt(el.slice(3))))\n  ifDef(params, 'rglabel', rglabel)\n  return new Atom(params)\n}\n\nexport function atomListToStruct(source) {\n  const params: any = {}\n  params.label = 'L#'\n  ifDef(params, 'pp', {\n    x: source.location[0],\n    y: -source.location[1],\n    z: source.location[2] || 0.0\n  })\n  ifDef(params, 'attpnt', source.attachmentPoints)\n  const ids = source.elements\n    .map((el) => Elements.get(el)?.number)\n    .filter((id) => id)\n  ifDef(params, 'atomList', {\n    ids,\n    notList: source.notList\n  })\n  return new Atom(params)\n}\n\nexport function bondToStruct(source) {\n  const params: any = {}\n\n  ifDef(params, 'type', source.type)\n  ifDef(params, 'topology', source.topology)\n  ifDef(params, 'reactingCenterStatus', source.center)\n  ifDef(params, 'stereo', source.stereo)\n  // if (params.stereo)\n  // \tparams.stereo = params.stereo > 1 ? params.stereo * 2 : params.stereo;\n  // params.xxx = 0;\n  ifDef(params, 'begin', source.atoms[0])\n  ifDef(params, 'end', source.atoms[1])\n\n  return new Bond(params)\n}\n\nexport function sgroupToStruct(source) {\n  const sgroup = new SGroup(source.type)\n  ifDef(sgroup, 'atoms', source.atoms)\n  switch (source.type) {\n    case 'GEN':\n      break\n    case 'MUL': {\n      ifDef(sgroup.data, 'mul', source.mul)\n      break\n    }\n    case 'SRU': {\n      ifDef(sgroup.data, 'subscript', source.subscript)\n      ifDef(sgroup.data, 'connectivity', source.connectivity.toLowerCase())\n      break\n    }\n    case 'SUP': {\n      ifDef(sgroup.data, 'name', source.name)\n      ifDef(sgroup.data, 'expanded', source.expanded)\n      ifDef(sgroup, 'id', source.id)\n      break\n    }\n    case 'DAT': {\n      ifDef(sgroup.data, 'absolute', source.placement)\n      ifDef(sgroup.data, 'attached', source.display)\n      ifDef(sgroup.data, 'context', source.context)\n      ifDef(sgroup.data, 'fieldName', source.fieldName)\n      ifDef(sgroup.data, 'fieldValue', source.fieldData)\n      break\n    }\n    default:\n      break\n  }\n  return sgroup\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { Pile, Pool, SGroup, Struct, Vec2 } from 'domain/entities'\n\ntype KetNode = {\n  type: string\n  fragment?: Struct\n  center: Vec2\n  data?: any\n}\n\nexport function prepareStructForKet(struct: Struct) {\n  const ketNodes: KetNode[] = []\n\n  const rgFrags = new Set() // skip this when writing molecules\n  for (const [rgnumber, rgroup] of struct.rgroups.entries()) {\n    // RGroups writing\n    rgroup.frags.forEach((frid) => rgFrags.add(frid))\n\n    const fragsAtoms = Array.from(rgroup.frags.values()).reduce(\n      (res, frid) => res.union(struct.getFragmentIds(frid)),\n      new Pile()\n    )\n\n    ketNodes.push({\n      type: 'rgroup',\n      fragment: struct.clone(fragsAtoms),\n      center: getFragmentCenter(struct, fragsAtoms),\n      data: { rgnumber, rgroup }\n    })\n  }\n\n  const filteredFragmentIds = Array.from(struct.frags.keys()).filter(\n    (fid) => !rgFrags.has(fid)\n  )\n  addMolecules(ketNodes, filteredFragmentIds, struct)\n\n  struct.rxnArrows.forEach((item) => {\n    ketNodes.push({\n      type: 'arrow',\n      center: item.pos[0],\n      data: {\n        mode: item.mode,\n        pos: item.pos,\n        height: item.height\n      }\n    })\n  })\n\n  struct.rxnPluses.forEach((item) => {\n    ketNodes.push({\n      type: 'plus',\n      center: item.pp,\n      data: {}\n    })\n  })\n\n  struct.simpleObjects.forEach((item) => {\n    ketNodes.push({\n      type: 'simpleObject',\n      center: item.pos[0],\n      data: {\n        mode: item.mode,\n        pos: item.pos\n      }\n    })\n  })\n\n  struct.texts.forEach((item) => {\n    ketNodes.push({\n      type: 'text',\n      center: item.position,\n      data: {\n        content: item.content,\n        position: item.position,\n        pos: item.pos\n      }\n    })\n  })\n\n  ketNodes.forEach((ketNode) => {\n    if (ketNode.fragment) {\n      const sgroups: SGroup[] = Array.from(ketNode.fragment.sgroups.values())\n      const filteredSGroups = sgroups.filter((sg: SGroup) =>\n        sg.atoms.every((atom) => atom !== undefined)\n      )\n      const filteredSGroupsMap = new Pool<SGroup>()\n      filteredSGroups.forEach((sg, index) => {\n        filteredSGroupsMap.set(index, sg)\n      })\n      ketNode.fragment.sgroups = filteredSGroupsMap\n    }\n  })\n\n  // TODO: check if this sorting operation is needed\n  // return ketNodes.sort((a, b) => a.center.x - b.center.x)\n  return ketNodes\n}\n\nfunction getFragmentCenter(struct, atomSet) {\n  const bb = struct.getCoordBoundingBox(atomSet)\n  return Vec2.centre(bb.min, bb.max)\n}\n\n/**\n * Merge fragments which are in the same S-Groups to one fragment(molecule)\n * and add new fragments(molecules) to KetNodes\n * See: https://github.com/epam/ketcher/issues/2142\n */\nfunction addMolecules(\n  ketNodes: KetNode[],\n  fragmentIds: number[],\n  struct: Struct\n) {\n  const sGroupFragmentsMap = generateSGroupFragmentsMap(\n    ketNodes,\n    fragmentIds,\n    struct\n  )\n  const mergedFragments = Pile.unionIntersections(\n    Array.from(sGroupFragmentsMap.values())\n  )\n\n  mergedFragments.forEach((fragments) => {\n    let atomSet = new Pile<number>()\n    fragments.forEach((fragmentId) => {\n      atomSet = atomSet.union(struct.getFragmentIds(fragmentId))\n    })\n    ketNodes.push({\n      type: 'molecule',\n      fragment: struct.clone(atomSet),\n      center: getFragmentCenter(struct, atomSet)\n    })\n  })\n}\n\n/**\n * @example Give `fragmentIds` is `[0, 1]`,\n * and S-Group0 includes fragment0 and fragment1,\n * and S-Group1 includes fragment1,\n * then return value should be\n * ```\n * {\n *   0: [0, 1],\n *   1: [1]\n * }\n * ```\n */\nfunction generateSGroupFragmentsMap(\n  ketNodes: KetNode[],\n  fragmentIds: number[],\n  struct: Struct\n) {\n  const sGroupFragmentsMap = new Map<number, Pile<number>>()\n\n  fragmentIds.forEach((fragmentId) => {\n    const atomsInFragment = struct.getFragmentIds(fragmentId)\n\n    let hasAtomInSGroup = false\n    atomsInFragment.forEach((atomId) => {\n      struct.atoms.get(atomId)?.sgs.forEach((sGroupId) => {\n        hasAtomInSGroup = true\n        const fragmentSet = sGroupFragmentsMap.get(sGroupId)\n        if (fragmentSet) {\n          fragmentSet.add(fragmentId)\n        } else {\n          sGroupFragmentsMap.set(sGroupId, new Pile([fragmentId]))\n        }\n      })\n    })\n\n    if (!hasAtomInSGroup) {\n      ketNodes.push({\n        type: 'molecule',\n        fragment: struct.clone(atomsInFragment),\n        center: getFragmentCenter(struct, atomsInFragment)\n      })\n    }\n  })\n\n  return sGroupFragmentsMap\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct } from 'domain/entities'\nimport { ifDef } from 'utilities'\nimport { moleculeToKet } from './moleculeToKet'\n\nexport function rgroupToKet(struct: Struct, data) {\n  const body = {\n    rlogic: rgroupLogicToKet(data.rgnumber, data.rgroup),\n    ...moleculeToKet(struct)\n  }\n\n  return {\n    ...body,\n    type: 'rgroup'\n  }\n}\n\nfunction rgroupLogicToKet(rgnumber, rglogic) {\n  const result = {}\n\n  ifDef(result, 'number', rgnumber)\n  ifDef(result, 'range', rglogic.range, '')\n  ifDef(result, 'resth', rglogic.resth, false)\n  ifDef(result, 'ifthen', rglogic.ifthen, 0)\n\n  return result\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RGroup, Struct } from 'domain/entities'\n\nimport { ifDef } from 'utilities'\nimport { moleculeToStruct } from './moleculeToStruct'\n\nexport function rgroupToStruct(ketItem): Struct {\n  const struct = moleculeToStruct(ketItem)\n  const rgroup = rgroupLogicToStruct(ketItem.rlogic)\n  struct.frags.forEach((_value: any, key) => {\n    rgroup.frags.add(key)\n  })\n  if (ketItem.rlogic) struct.rgroups.set(ketItem.rlogic.number, rgroup)\n  return struct\n}\n\nexport function rgroupLogicToStruct(rglogic) {\n  const params = {}\n  ifDef(params, 'range', rglogic.range)\n  ifDef(params, 'resth', rglogic.resth)\n  ifDef(params, 'ifthen', rglogic.ifthen)\n\n  return new RGroup(params)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RxnArrow, RxnPlus, Struct } from 'domain/entities'\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function rxnToStruct(ketItem: any, struct: Struct): Struct {\n  if (ketItem.type === 'arrow') {\n    struct.rxnArrows.add(new RxnArrow(getNodeWithInvertedYCoord(ketItem.data)))\n  } else {\n    struct.rxnPluses.add(\n      new RxnPlus({\n        pp: {\n          x: ketItem.location[0],\n          y: -ketItem.location[1],\n          z: ketItem.location[2]\n        }\n      })\n    )\n  }\n  return struct\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function simpleObjectToKet(simpleObjectNode) {\n  return {\n    type: 'simpleObject',\n    data: getNodeWithInvertedYCoord(simpleObjectNode.data)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { SimpleObject, SimpleObjectMode, Struct, Vec2 } from 'domain/entities'\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function simpleObjectToStruct(ketItem: any, struct: Struct): Struct {\n  const object =\n    ketItem.data.mode === 'circle' ? circleToEllipse(ketItem) : ketItem.data\n  struct.simpleObjects.add(new SimpleObject(getNodeWithInvertedYCoord(object)))\n  return struct\n}\n\n/**\n * @deprecated TODO to remove after release 2.3\n * As circle has been migrated to ellipses here is function for converting old files data with circles to ellipse type\n * @param ketItem\n */\nfunction circleToEllipse(ketItem) {\n  const radius = Vec2.dist(ketItem.data.pos[1], ketItem.data.pos[0])\n  const pos0 = ketItem.data.pos[0]\n  return {\n    mode: SimpleObjectMode.ellipse,\n    pos: [\n      {\n        x: pos0.x - Math.abs(radius),\n        y: pos0.y - Math.abs(radius),\n        z: pos0.z - Math.abs(radius)\n      },\n      {\n        x: pos0.x + Math.abs(radius),\n        y: pos0.y + Math.abs(radius),\n        z: pos0.z + Math.abs(radius)\n      }\n    ]\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function textToKet(textNode) {\n  return {\n    type: 'text',\n    data: getNodeWithInvertedYCoord(textNode.data)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct, Text } from 'domain/entities'\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function textToStruct(ketItem: any, struct: Struct) {\n  const object = getNodeWithInvertedYCoord(ketItem.data)\n  struct.texts.add(new Text(object))\n\n  return struct\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport Ajv from 'ajv'\nimport schema from './schema.json'\n\nexport function validate(ket: any): boolean {\n  const ajv = new Ajv()\n  const validate = ajv.compile(schema)\n  return validate(ket)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct, Vec2 } from 'domain/entities'\nimport { arrowToKet, plusToKet } from './toKet/rxnToKet'\n\nimport { Serializer } from '../serializers.types'\nimport { headerToKet } from './toKet/headerToKet'\nimport { moleculeToKet } from './toKet/moleculeToKet'\nimport { moleculeToStruct } from './fromKet/moleculeToStruct'\nimport { prepareStructForKet } from './toKet/prepare'\nimport { rgroupToKet } from './toKet/rgroupToKet'\nimport { rgroupToStruct } from './fromKet/rgroupToStruct'\nimport { rxnToStruct } from './fromKet/rxnToStruct'\nimport { simpleObjectToKet } from './toKet/simpleObjectToKet'\nimport { simpleObjectToStruct } from './fromKet/simpleObjectToStruct'\nimport { textToKet } from './toKet/textToKet'\nimport { textToStruct } from './fromKet/textToStruct'\nimport { validate } from './validate'\n\nfunction parseNode(node: any, struct: any) {\n  const type = node.type\n  switch (type) {\n    case 'arrow': {\n      rxnToStruct(node, struct)\n      break\n    }\n    case 'plus': {\n      rxnToStruct(node, struct)\n      break\n    }\n    case 'simpleObject': {\n      simpleObjectToStruct(node, struct)\n      break\n    }\n    case 'molecule': {\n      const currentStruct = moleculeToStruct(node)\n      if (node.stereoFlagPosition) {\n        const fragment = currentStruct.frags.get(0)!\n        fragment.stereoFlagPosition = new Vec2(node.stereoFlagPosition)\n      }\n\n      currentStruct.mergeInto(struct)\n      break\n    }\n    case 'rgroup': {\n      rgroupToStruct(node).mergeInto(struct)\n      break\n    }\n    case 'text': {\n      textToStruct(node, struct)\n      break\n    }\n    default:\n      break\n  }\n}\nexport class KetSerializer implements Serializer<Struct> {\n  deserialize(content: string): Struct {\n    const resultingStruct = new Struct()\n    const ket = JSON.parse(content)\n    if (!validate(ket)) {\n      throw new Error('Cannot deserialize input JSON.')\n    }\n    const nodes = ket.root.nodes\n    Object.keys(nodes).forEach((i) => {\n      if (nodes[i].type) parseNode(nodes[i], resultingStruct)\n      else if (nodes[i].$ref) parseNode(ket[nodes[i].$ref], resultingStruct)\n    })\n    resultingStruct.name = ket.header ? ket.header.moleculeName : null\n\n    return resultingStruct\n  }\n\n  serialize(struct: Struct): string {\n    const result: any = {\n      root: {\n        nodes: []\n      }\n    }\n\n    const header = headerToKet(struct)\n    if (header) result.header = header\n\n    const ketNodes = prepareStructForKet(struct)\n\n    let moleculeId = 0\n    ketNodes.forEach((item) => {\n      switch (item.type) {\n        case 'molecule': {\n          result.root.nodes.push({ $ref: `mol${moleculeId}` })\n          result[`mol${moleculeId++}`] = moleculeToKet(item.fragment!)\n          break\n        }\n        case 'rgroup': {\n          result.root.nodes.push({ $ref: `rg${item.data!.rgnumber}` })\n          result[`rg${item.data!.rgnumber}`] = rgroupToKet(\n            item.fragment!,\n            item.data\n          )\n          break\n        }\n        case 'plus': {\n          result.root.nodes.push(plusToKet(item))\n          break\n        }\n        case 'arrow': {\n          result.root.nodes.push(arrowToKet(item))\n          break\n        }\n        case 'simpleObject': {\n          result.root.nodes.push(simpleObjectToKet(item))\n          break\n        }\n        case 'text': {\n          result.root.nodes.push(textToKet(item))\n          break\n        }\n        default:\n          break\n      }\n    })\n\n    return JSON.stringify(result, null, 4)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport {\n  Bond,\n  RxnArrow,\n  RxnPlus,\n  Struct,\n  Vec2,\n  RGroup,\n  Fragment\n} from 'domain/entities'\n\nfunction paddedNum(number, width, precision) {\n  number = parseFloat(number)\n\n  const numStr = number.toFixed(precision || 0).replace(',', '.') // Really need to replace?\n  if (numStr.length > width) throw new Error('number does not fit')\n\n  return numStr.padStart(width)\n}\n\nfunction parseDecimalInt(str) {\n  /* reader */\n  const val = parseInt(str, 10)\n\n  return isNaN(val) ? 0 : val // eslint-disable-line\n}\n\nfunction partitionLine(\n  /* string */ str,\n  /* array of int */ parts,\n  /* bool */ withspace\n) {\n  /* reader */\n  const res = []\n  for (let i = 0, shift = 0; i < parts.length; ++i) {\n    res.push(str.slice(shift, shift + parts[i]))\n    if (withspace) shift++\n    shift += parts[i]\n  }\n  return res\n}\n\nfunction partitionLineFixed(\n  /* string */ str,\n  /* int */ itemLength,\n  /* bool */ withspace\n) {\n  /* reader */\n  const res = []\n  for (let shift = 0; shift < str.length; shift += itemLength) {\n    res.push(str.slice(shift, shift + itemLength))\n    if (withspace) shift++\n  }\n  return res\n}\n\nconst fmtInfo = {\n  bondTypeMap: {\n    1: Bond.PATTERN.TYPE.SINGLE,\n    2: Bond.PATTERN.TYPE.DOUBLE,\n    3: Bond.PATTERN.TYPE.TRIPLE,\n    4: Bond.PATTERN.TYPE.AROMATIC,\n    5: Bond.PATTERN.TYPE.SINGLE_OR_DOUBLE,\n    6: Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC,\n    7: Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC,\n    8: Bond.PATTERN.TYPE.ANY,\n    9: Bond.PATTERN.TYPE.DATIVE,\n    10: Bond.PATTERN.TYPE.HYDROGEN\n  },\n  bondStereoMap: {\n    0: Bond.PATTERN.STEREO.NONE,\n    1: Bond.PATTERN.STEREO.UP,\n    4: Bond.PATTERN.STEREO.EITHER,\n    6: Bond.PATTERN.STEREO.DOWN,\n    3: Bond.PATTERN.STEREO.CIS_TRANS\n  },\n  v30bondStereoMap: {\n    0: Bond.PATTERN.STEREO.NONE,\n    1: Bond.PATTERN.STEREO.UP,\n    2: Bond.PATTERN.STEREO.EITHER,\n    3: Bond.PATTERN.STEREO.DOWN\n  },\n  bondTopologyMap: {\n    0: Bond.PATTERN.TOPOLOGY.EITHER,\n    1: Bond.PATTERN.TOPOLOGY.RING,\n    2: Bond.PATTERN.TOPOLOGY.CHAIN\n  },\n  countsLinePartition: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6],\n  atomLinePartition: [10, 10, 10, 1, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n  bondLinePartition: [3, 3, 3, 3, 3, 3, 3],\n  atomListHeaderPartition: [3, 1, 1, 4, 1, 1],\n  atomListHeaderLength: 11, // = atomListHeaderPartition.reduce(function(a,b) { return a + b; }, 0)\n  atomListHeaderItemLength: 4,\n  chargeMap: [0, +3, +2, +1, 0, -1, -2, -3],\n  valenceMap: [undefined, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0],\n  implicitHydrogenMap: [undefined, 0, 1, 2, 3, 4],\n  v30atomPropMap: {\n    CHG: 'charge',\n    RAD: 'radical',\n    MASS: 'isotope',\n    VAL: 'explicitValence',\n    HCOUNT: 'hCount',\n    INVRET: 'invRet',\n    SUBST: 'substitutionCount',\n    UNSAT: 'unsaturatedAtom',\n    RBCNT: 'ringBondCount'\n  },\n  rxnItemsPartition: [3, 3, 3]\n}\n\nconst FRAGMENT = {\n  NONE: 0,\n  REACTANT: 1,\n  PRODUCT: 2,\n  AGENT: 3\n}\n\nconst SHOULD_RESCALE_MOLECULES = true\n\nfunction rxnMerge(\n  mols,\n  nReactants,\n  nProducts,\n  nAgents,\n  shouldReactionRelayout\n) /* Struct */ {\n  // eslint-disable-line max-statements\n  /* reader */\n  const ret = new Struct()\n  const bbReact = []\n  const bbAgent = []\n  const bbProd = []\n  const molReact = []\n  const molAgent = []\n  const molProd = []\n  let j\n  const bondLengthData = { cnt: 0, totalLength: 0 }\n  for (j = 0; j < mols.length; ++j) {\n    var mol = mols[j]\n    const bondLengthDataMol = mol.getBondLengthData()\n    bondLengthData.cnt += bondLengthDataMol.cnt\n    bondLengthData.totalLength += bondLengthDataMol.totalLength\n  }\n  if (SHOULD_RESCALE_MOLECULES) {\n    const avgBondLength =\n      1 /\n      (bondLengthData.cnt === 0\n        ? 1\n        : bondLengthData.totalLength / bondLengthData.cnt)\n    for (j = 0; j < mols.length; ++j) {\n      mol = mols[j]\n      mol.scale(avgBondLength)\n    }\n  }\n\n  for (j = 0; j < mols.length; ++j) {\n    mol = mols[j]\n    const bb = mol.getCoordBoundingBoxObj()\n    if (!bb) continue // eslint-disable-line no-continue\n\n    var fragmentType =\n      j < nReactants\n        ? FRAGMENT.REACTANT // eslint-disable-line no-nested-ternary\n        : j < nReactants + nProducts\n        ? FRAGMENT.PRODUCT\n        : FRAGMENT.AGENT\n    if (fragmentType === FRAGMENT.REACTANT) {\n      bbReact.push(bb)\n      molReact.push(mol)\n    } else if (fragmentType === FRAGMENT.AGENT) {\n      bbAgent.push(bb)\n      molAgent.push(mol)\n    } else if (fragmentType === FRAGMENT.PRODUCT) {\n      bbProd.push(bb)\n      molProd.push(mol)\n    }\n\n    mol.atoms.forEach((atom) => {\n      atom.rxnFragmentType = fragmentType\n    })\n  }\n\n  function shiftMol(ret, mol, bb, xorig, over) {\n    // eslint-disable-line max-params\n    const d = new Vec2(\n      xorig - bb.min.x,\n      over ? 1 - bb.min.y : -(bb.min.y + bb.max.y) / 2\n    )\n    mol.atoms.forEach((atom) => {\n      atom.pp.add_(d) // eslint-disable-line no-underscore-dangle\n    })\n\n    mol.sgroups.forEach((item) => {\n      if (item.pp) item.pp.add_(d) // eslint-disable-line no-underscore-dangle\n    })\n    bb.min.add_(d) // eslint-disable-line no-underscore-dangle\n    bb.max.add_(d) // eslint-disable-line no-underscore-dangle\n    mol.mergeInto(ret)\n    return bb.max.x - bb.min.x\n  }\n\n  if (shouldReactionRelayout) {\n    // reaction fragment layout\n    let xorig = 0\n    for (j = 0; j < molReact.length; ++j) {\n      xorig += shiftMol(ret, molReact[j], bbReact[j], xorig, false) + 2.0\n    }\n    xorig += 2.0\n    for (j = 0; j < molAgent.length; ++j) {\n      xorig += shiftMol(ret, molAgent[j], bbAgent[j], xorig, true) + 2.0\n    }\n    xorig += 2.0\n\n    for (j = 0; j < molProd.length; ++j) {\n      xorig += shiftMol(ret, molProd[j], bbProd[j], xorig, false) + 2.0\n    }\n  } else {\n    for (j = 0; j < molReact.length; ++j) molReact[j].mergeInto(ret)\n    for (j = 0; j < molAgent.length; ++j) molAgent[j].mergeInto(ret)\n    for (j = 0; j < molProd.length; ++j) molProd[j].mergeInto(ret)\n  }\n\n  let bb1\n  let bb2\n  let x\n  let y\n  let bbReactAll = null\n  let bbProdAll = null\n  for (j = 0; j < bbReact.length - 1; ++j) {\n    bb1 = bbReact[j]\n    bb2 = bbReact[j + 1]\n\n    x = (bb1.max.x + bb2.min.x) / 2\n    y = (bb1.max.y + bb1.min.y + bb2.max.y + bb2.min.y) / 4\n\n    ret.rxnPluses.add(new RxnPlus({ pp: new Vec2(x, y) }))\n  }\n  for (j = 0; j < bbReact.length; ++j) {\n    if (j === 0) {\n      bbReactAll = {}\n      bbReactAll.max = new Vec2(bbReact[j].max)\n      bbReactAll.min = new Vec2(bbReact[j].min)\n    } else {\n      bbReactAll.max = Vec2.max(bbReactAll.max, bbReact[j].max)\n      bbReactAll.min = Vec2.min(bbReactAll.min, bbReact[j].min)\n    }\n  }\n  for (j = 0; j < bbProd.length - 1; ++j) {\n    bb1 = bbProd[j]\n    bb2 = bbProd[j + 1]\n\n    x = (bb1.max.x + bb2.min.x) / 2\n    y = (bb1.max.y + bb1.min.y + bb2.max.y + bb2.min.y) / 4\n\n    ret.rxnPluses.add(new RxnPlus({ pp: new Vec2(x, y) }))\n  }\n  for (j = 0; j < bbProd.length; ++j) {\n    if (j === 0) {\n      bbProdAll = {}\n      bbProdAll.max = new Vec2(bbProd[j].max)\n      bbProdAll.min = new Vec2(bbProd[j].min)\n    } else {\n      bbProdAll.max = Vec2.max(bbProdAll.max, bbProd[j].max)\n      bbProdAll.min = Vec2.min(bbProdAll.min, bbProd[j].min)\n    }\n  }\n  bb1 = bbReactAll\n  bb2 = bbProdAll\n  const defaultArrowLength = 2\n\n  if (!bb1 && !bb2) {\n    ret.rxnArrows.add(\n      new RxnArrow({\n        mode: 'open-angle',\n        pos: [new Vec2(0, 0), new Vec2(defaultArrowLength, 0)]\n      })\n    )\n  } else {\n    let v1 = bb1 ? new Vec2(bb1.max.x, (bb1.max.y + bb1.min.y) / 2) : null\n    let v2 = bb2 ? new Vec2(bb2.min.x, (bb2.max.y + bb2.min.y) / 2) : null\n    const defaultOffset = 3\n    if (!v1) v1 = new Vec2(v2.x - defaultOffset, v2.y)\n    if (!v2) v2 = new Vec2(v1.x + defaultOffset, v1.y)\n    const arrowCenter = Vec2.lc2(v1, 0.5, v2, 0.5)\n    const arrowStart = new Vec2(\n      arrowCenter.x - 0.5 * defaultArrowLength,\n      arrowCenter.y,\n      arrowCenter.z\n    )\n    const arrowEnd = new Vec2(\n      arrowCenter.x + 0.5 * defaultArrowLength,\n      arrowCenter.y,\n      arrowCenter.z\n    )\n    ret.rxnArrows.add(\n      new RxnArrow({\n        mode: 'open-angle',\n        pos: [arrowStart, arrowEnd]\n      })\n    )\n  }\n  ret.isReaction = true\n  return ret\n}\n\nfunction rgMerge(scaffold, rgroups) /* Struct */ {\n  /* reader */\n  const ret = new Struct()\n\n  scaffold.mergeInto(ret, null, null, false, true)\n\n  Object.keys(rgroups).forEach((id) => {\n    const rgid = parseInt(id, 10)\n\n    for (let j = 0; j < rgroups[rgid].length; ++j) {\n      const ctab = rgroups[rgid][j]\n      ctab.rgroups.set(rgid, new RGroup())\n      const frag = new Fragment()\n      const frid = ctab.frags.add(frag)\n      ctab.rgroups.get(rgid).frags.add(frid)\n      ctab.atoms.forEach((atom) => {\n        atom.fragment = frid\n      })\n      ctab.mergeInto(ret)\n    }\n  })\n\n  return ret\n}\n\nexport default {\n  fmtInfo,\n  paddedNum,\n  parseDecimalInt,\n  partitionLine,\n  partitionLineFixed,\n  rxnMerge,\n  rgMerge\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Pool, SGroup, Vec2 } from 'domain/entities'\n\nimport utils from './utils'\n\n/**\n * @param str { string }\n * @param valueString { boolean }\n * @returns { Pool }\n */\nfunction readKeyValuePairs(str, valueString) {\n  const ret = new Pool()\n  const partition = utils.partitionLineFixed(str, 3, true)\n  const count = utils.parseDecimalInt(partition[0])\n\n  for (let i = 0; i < count; ++i) {\n    const key = utils.parseDecimalInt(partition[2 * i + 1]) - 1\n    const value = valueString\n      ? partition[2 * i + 2].trim()\n      : utils.parseDecimalInt(partition[2 * i + 2])\n\n    ret.set(key, value)\n  }\n\n  return ret\n}\n\n/**\n * @param str { string }\n * @param valueString { boolean }\n * @returns { Array }\n */\nfunction readKeyMultiValuePairs(str, valueString) {\n  /* reader */\n  const ret = []\n  const partition = utils.partitionLineFixed(str, 3, true)\n  const count = utils.parseDecimalInt(partition[0])\n  for (let i = 0; i < count; ++i) {\n    ret.push([\n      /* eslint-disable no-mixed-operators */\n      utils.parseDecimalInt(partition[2 * i + 1]) - 1,\n      valueString\n        ? partition[2 * i + 2].trim()\n        : utils.parseDecimalInt(partition[2 * i + 2])\n      /* eslint-enable no-mixed-operators */\n    ])\n  }\n  return ret\n}\n\nfunction postLoadMul(sgroup, mol, atomMap) {\n  // eslint-disable-line max-statements\n  sgroup.data.mul = sgroup.data.subscript - 0\n  const atomReductionMap = {}\n\n  sgroup.atoms = SGroup.filterAtoms(sgroup.atoms, atomMap)\n  sgroup.patoms = SGroup.filterAtoms(sgroup.patoms, atomMap)\n\n  // mark repetitions for removal\n  for (let k = 1; k < sgroup.data.mul; ++k) {\n    for (let m = 0; m < sgroup.patoms.length; ++m) {\n      const raid = sgroup.atoms[k * sgroup.patoms.length + m] // eslint-disable-line no-mixed-operators\n      if (raid < 0) continue // eslint-disable-line no-continue\n      if (sgroup.patoms[m] < 0) throw new Error('parent atom missing')\n      atomReductionMap[raid] = sgroup.patoms[m] // \"merge\" atom in parent\n    }\n  }\n  sgroup.patoms = SGroup.removeNegative(sgroup.patoms)\n\n  const patomsMap = identityMap(sgroup.patoms)\n\n  const bondsToRemove = []\n  mol.bonds.forEach((bond, bid) => {\n    const beginIn = bond.begin in atomReductionMap\n    const endIn = bond.end in atomReductionMap\n    // if both adjacent atoms of a bond are to be merged, remove it\n    /* eslint-disable no-mixed-operators */\n    if (\n      (beginIn && endIn) ||\n      (beginIn && bond.end in patomsMap) ||\n      (endIn && bond.begin in patomsMap)\n    ) {\n      bondsToRemove.push(bid)\n    }\n    /* eslint-enable no-mixed-operators */\n    // if just one atom is merged, modify the bond accordingly\n    else if (beginIn) bond.begin = atomReductionMap[bond.begin]\n    else if (endIn) bond.end = atomReductionMap[bond.end]\n  }, sgroup)\n\n  // apply removal lists\n  for (let b = 0; b < bondsToRemove.length; ++b) {\n    mol.bonds.delete(bondsToRemove[b])\n  }\n  for (const a in atomReductionMap) {\n    mol.atoms.delete(+a)\n    atomMap[a] = -1\n  }\n  sgroup.atoms = sgroup.patoms\n  sgroup.patoms = null\n}\n\nfunction postLoadSru(sgroup) {\n  sgroup.data.connectivity = (sgroup.data.connectivity || 'EU')\n    .trim()\n    .toLowerCase()\n}\n\nfunction postLoadSup(sgroup) {\n  sgroup.data.name = (sgroup.data.subscript || '').trim()\n  sgroup.data.subscript = ''\n}\n\nfunction postLoadGen(sgroup, mol, atomMap) {\n  // eslint-disable-line no-unused-vars\n}\n\nfunction postLoadDat(sgroup, mol) {\n  if (!sgroup.data.absolute) {\n    sgroup.pp = sgroup.pp.add(SGroup.getMassCentre(mol, sgroup.atoms))\n  }\n}\n\nfunction postLoadMon(sgroup) {\n  // TODO: Implement after adding MON type support\n}\n\nfunction postLoadMer(sgroup) {\n  // TODO: Implement after adding MER type support\n}\n\nfunction postLoadCop(sgroup) {\n  // TODO: Implement after adding COP type support\n}\n\nfunction postLoadCro(sgroup) {\n  // TODO: Implement after adding CRO type support\n}\n\nfunction postLoadMod(sgroup) {\n  // TODO: Implement after adding MOD type support\n}\n\nfunction postLoadGra(sgroup) {\n  // TODO: Implement after adding GRA type support\n}\n\nfunction postLoadCom(sgroup) {\n  // TODO: Implement after adding COM type support\n}\n\nfunction postLoadMix(sgroup) {\n  // TODO: Implement after adding MIX type support\n}\n\nfunction postLoadFor(sgroup) {\n  // TODO: Implement after adding FOR type support\n}\n\nfunction postLoadAny(sgroup) {\n  // TODO: Implement after adding ANY type support\n}\n\nfunction loadSGroup(mol, sg, atomMap) {\n  const postLoadMap = {\n    SUP: postLoadSup,\n    MUL: postLoadMul,\n    SRU: postLoadSru,\n    MON: postLoadMon,\n    MER: postLoadMer,\n    COP: postLoadCop,\n    CRO: postLoadCro,\n    MOD: postLoadMod,\n    GRA: postLoadGra,\n    COM: postLoadCom,\n    MIX: postLoadMix,\n    FOR: postLoadFor,\n    DAT: postLoadDat,\n    ANY: postLoadAny,\n    GEN: postLoadGen\n  }\n\n  // add the group to the molecule\n  sg.id = mol.sgroups.add(sg)\n\n  // apply type-specific post-processing\n  postLoadMap[sg.type](sg, mol, atomMap)\n  // mark atoms in the group as belonging to it\n  for (let s = 0; s < sg.atoms.length; ++s) {\n    if (mol.atoms.has(sg.atoms[s])) mol.atoms.get(sg.atoms[s]).sgs.add(sg.id)\n  }\n\n  if (sg.type === 'DAT') mol.sGroupForest.insert(sg, -1, [])\n  else mol.sGroupForest.insert(sg)\n\n  return sg.id\n}\n\nfunction initSGroup(sGroups, propData) {\n  /* reader */\n  const kv = readKeyValuePairs(propData, true)\n  for (const [key, type] of kv) {\n    const sg = new SGroup(type)\n    sg.number = key\n    sGroups[key] = sg\n  }\n}\n\nfunction applySGroupProp(sGroups, propName, propData, numeric, core) {\n  // eslint-disable-line max-params\n  const kv = readKeyValuePairs(propData, !numeric)\n  // \"core\" properties are stored directly in an sgroup, not in sgroup.data\n  for (const key of kv.keys()) {\n    ;(core ? sGroups[key] : sGroups[key].data)[propName] = kv.get(key)\n  }\n}\n\nfunction applySGroupArrayProp(sGroups, propName, propData, shift) {\n  /* reader */\n  const sid = utils.parseDecimalInt(propData.slice(1, 4)) - 1\n  const num = utils.parseDecimalInt(propData.slice(4, 8))\n  let part = toIntArray(utils.partitionLineFixed(propData.slice(8), 3, true))\n\n  if (part.length !== num) throw new Error('File format invalid')\n  if (shift) part = part.map((v) => v + shift)\n\n  sGroups[sid][propName] = sGroups[sid][propName].concat(part)\n}\n\nfunction applyDataSGroupName(sg, name) {\n  /* reader */\n  sg.data.fieldName = name\n}\n\nfunction applyDataSGroupExpand(sg, expanded) {\n  sg.data.expanded = expanded\n}\n\nfunction applyDataSGroupQuery(sg, query) {\n  /* reader */\n  sg.data.query = query\n}\n\nfunction applyDataSGroupQueryOp(sg, queryOp) {\n  /* reader */\n  sg.data.queryOp = queryOp\n}\n\nfunction applyDataSGroupDesc(sGroups, propData) {\n  /* reader */\n  const split = utils.partitionLine(propData, [4, 31, 2, 20, 2, 3], false)\n  const id = utils.parseDecimalInt(split[0]) - 1\n  const fieldName = split[1].trim()\n  const fieldType = split[2].trim()\n  const units = split[3].trim()\n  const query = split[4].trim()\n  const queryOp = split[5].trim()\n  const sGroup = sGroups[id]\n  sGroup.data.fieldType = fieldType\n  sGroup.data.fieldName = fieldName\n  sGroup.data.units = units\n  sGroup.data.query = query\n  sGroup.data.queryOp = queryOp\n}\n\nfunction applyDataSGroupInfo(sg, propData) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const split = utils.partitionLine(\n    propData,\n    [\n      10 /* x.x */, 10 /* y.y */, 4 /* eee */, 1 /* f */, 1 /* g */, 1 /* h */,\n      3 /* i */, 3 /* jjj */, 3 /* kkk */, 3 /* ll */, 2 /* m */, 3 /* n */,\n      2 /* oo */\n    ],\n    false\n  )\n\n  const x = parseFloat(split[0])\n  const y = parseFloat(split[1])\n  const attached = split[3].trim() === 'A'\n  const absolute = split[4].trim() === 'A'\n  const showUnits = split[5].trim() === 'U'\n  let nCharsToDisplay = split[7].trim()\n  nCharsToDisplay =\n    nCharsToDisplay === 'ALL' ? -1 : utils.parseDecimalInt(nCharsToDisplay)\n  const tagChar = split[10].trim()\n  const daspPos = utils.parseDecimalInt(split[11].trim())\n\n  sg.pp = new Vec2(x, -y)\n  sg.data.attached = attached\n  sg.data.absolute = absolute\n  sg.data.showUnits = showUnits\n  sg.data.nCharsToDisplay = nCharsToDisplay\n  sg.data.tagChar = tagChar\n  sg.data.daspPos = daspPos\n}\n\nfunction applyDataSGroupInfoLine(sGroups, propData) {\n  /* reader */\n  const id = utils.parseDecimalInt(propData.substr(0, 4)) - 1\n  const sg = sGroups[id]\n  applyDataSGroupInfo(sg, propData.substr(5))\n}\n\nfunction applyDataSGroupData(sg, data, finalize) {\n  /* reader */\n  sg.data.fieldValue = (sg.data.fieldValue || '') + data\n  if (finalize) {\n    sg.data.fieldValue = trimRight(sg.data.fieldValue)\n    if (\n      sg.data.fieldValue.startsWith('\"') &&\n      sg.data.fieldValue.endsWith('\"')\n    ) {\n      sg.data.fieldValue = sg.data.fieldValue.substr(\n        1,\n        sg.data.fieldValue.length - 2\n      )\n    }\n  }\n}\n\nfunction applyDataSGroupDataLine(sGroups, propData, finalize) {\n  /* reader */\n  const id = utils.parseDecimalInt(propData.substr(0, 5)) - 1\n  const data = propData.substr(5)\n  const sg = sGroups[id]\n  applyDataSGroupData(sg, data, finalize)\n}\n\n// Utilities functions\nfunction toIntArray(strArray) {\n  /* reader */\n  const ret = []\n  for (let j = 0; j < strArray.length; ++j) {\n    ret[j] = utils.parseDecimalInt(strArray[j])\n  }\n  return ret\n}\n\nfunction trimRight(str) {\n  return str.replace(/\\s+$/, '')\n}\n\nfunction identityMap(array) {\n  const map = {}\n  for (let i = 0; i < array.length; ++i) map[array[i]] = array[i]\n  return map\n}\n\nexport default {\n  readKeyValuePairs,\n  readKeyMultiValuePairs,\n  loadSGroup,\n  initSGroup,\n  applySGroupProp,\n  applySGroupArrayProp,\n  applyDataSGroupName,\n  applyDataSGroupQuery,\n  applyDataSGroupQueryOp,\n  applyDataSGroupDesc,\n  applyDataSGroupInfo,\n  applyDataSGroupData,\n  applyDataSGroupInfoLine,\n  applyDataSGroupDataLine,\n  applyDataSGroupExpand\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n/* eslint-disable guard-for-in */ // todo\n\nimport {\n  Atom,\n  AtomList,\n  Bond,\n  Pool,\n  RGroup,\n  SGroup,\n  StereoLabel,\n  Struct,\n  Vec2\n} from 'domain/entities'\n\nimport { Elements } from 'domain/constants'\nimport sGroup from './parseSGroup'\nimport utils from './utils'\n\nconst loadRGroupFragments = true // TODO: set to load the fragments\n\nfunction parseAtomLine(atomLine) {\n  /* reader */\n  const atomSplit = utils.partitionLine(\n    atomLine,\n    utils.fmtInfo.atomLinePartition\n  )\n  const params = {\n    // generic\n    pp: new Vec2(\n      parseFloat(atomSplit[0]),\n      -parseFloat(atomSplit[1]),\n      parseFloat(atomSplit[2])\n    ),\n    label: atomSplit[4].trim(),\n    explicitValence:\n      utils.fmtInfo.valenceMap[utils.parseDecimalInt(atomSplit[10])],\n\n    // obsolete\n    massDifference: utils.parseDecimalInt(atomSplit[5]),\n    charge: utils.fmtInfo.chargeMap[utils.parseDecimalInt(atomSplit[6])],\n\n    // query\n    hCount: utils.parseDecimalInt(utils.parseDecimalInt(atomSplit[8])),\n    stereoCare: utils.parseDecimalInt(atomSplit[9]) !== 0,\n\n    // reaction\n    aam: utils.parseDecimalInt(atomSplit[14]),\n    invRet: utils.parseDecimalInt(atomSplit[15]),\n\n    // reaction query\n    exactChangeFlag: utils.parseDecimalInt(atomSplit[16])\n  }\n  return new Atom(params)\n}\n\nfunction parseBondLine(bondLine) {\n  /* reader */\n  const bondSplit = utils.partitionLine(\n    bondLine,\n    utils.fmtInfo.bondLinePartition\n  )\n\n  const params = {\n    begin: utils.parseDecimalInt(bondSplit[0]) - 1,\n    end: utils.parseDecimalInt(bondSplit[1]) - 1,\n    type: utils.fmtInfo.bondTypeMap[utils.parseDecimalInt(bondSplit[2])],\n    stereo: utils.fmtInfo.bondStereoMap[utils.parseDecimalInt(bondSplit[3])],\n    xxx: bondSplit[4],\n    topology:\n      utils.fmtInfo.bondTopologyMap[utils.parseDecimalInt(bondSplit[5])],\n    reactingCenterStatus: utils.parseDecimalInt(bondSplit[6])\n  }\n\n  return new Bond(params)\n}\n\nfunction parseAtomListLine(/* string */ atomListLine) {\n  /* reader */\n  const split = utils.partitionLine(\n    atomListLine,\n    utils.fmtInfo.atomListHeaderPartition\n  )\n\n  const number = utils.parseDecimalInt(split[0]) - 1\n  const notList = split[2].trim() === 'T'\n  const count = utils.parseDecimalInt(split[4].trim())\n\n  const ids = atomListLine.slice(utils.fmtInfo.atomListHeaderLength)\n  const list = []\n  const itemLength = utils.fmtInfo.atomListHeaderItemLength\n  for (let i = 0; i < count; ++i) {\n    list[i] = utils.parseDecimalInt(\n      ids.slice(i * itemLength, (i + 1) * itemLength - 1)\n    )\n  }\n\n  return {\n    aid: number,\n    atomList: new AtomList({\n      notList,\n      ids: list\n    })\n  }\n}\n\n/**\n * @param ctab\n * @param ctabLines\n * @param shift\n * @param end\n * @param sGroups\n * @param rLogic\n * @returns { Pool }\n */\nfunction parsePropertyLines(ctab, ctabLines, shift, end, sGroups, rLogic) {\n  // eslint-disable-line max-statements, max-params\n  /* reader */\n  const props = new Pool()\n\n  while (shift < end) {\n    const line = ctabLines[shift]\n    if (line.charAt(0) === 'A') {\n      const propValue = ctabLines[++shift]\n      // TODO: Atom entity only have pseudo getter. Check during refactoring\n      // this type of pseudo labeling is not used in current BIOVIA products. See ctab documentation 2020\n      // https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf (page 47)\n      const isPseudo = /'.+'/.test(propValue)\n      if (isPseudo && !props.get('pseudo')) {\n        props.set('pseudo', new Pool())\n      }\n      if (!isPseudo && !props.get('alias')) {\n        props.set('alias', new Pool())\n      }\n      props\n        .get(isPseudo ? 'pseudo' : 'alias')\n        .set(utils.parseDecimalInt(line.slice(3)) - 1, propValue)\n    } else if (line.charAt(0) === 'M') {\n      const type = line.slice(3, 6)\n      let propertyData = line.slice(6)\n      if (type === 'END') {\n        break\n      } else if (type === 'CHG') {\n        if (!props.get('charge')) {\n          props.set('charge', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'RAD') {\n        if (!props.get('radical')) {\n          props.set('radical', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'ISO') {\n        if (!props.get('isotope')) {\n          props.set('isotope', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'RBC') {\n        if (!props.get('ringBondCount')) {\n          props.set('ringBondCount', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'SUB') {\n        if (!props.get('substitutionCount')) {\n          props.set('substitutionCount', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'UNS') {\n        if (!props.get('unsaturatedAtom')) {\n          props.set('unsaturatedAtom', sGroup.readKeyValuePairs(propertyData))\n        }\n        // else if (type == \"LIN\") // link atom\n      } else if (type === 'RGP') {\n        // rgroup atom\n        if (!props.get('rglabel')) props.set('rglabel', new Pool())\n        const rglabels = props.get('rglabel')\n        const a2rs = sGroup.readKeyMultiValuePairs(propertyData)\n        for (let a2ri = 0; a2ri < a2rs.length; a2ri++) {\n          const a2r = a2rs[a2ri]\n          rglabels.set(\n            a2r[0],\n            (rglabels.get(a2r[0]) || 0) | (1 << (a2r[1] - 1))\n          )\n        }\n      } else if (type === 'LOG') {\n        // rgroup atom\n        propertyData = propertyData.slice(4)\n        const rgid = utils.parseDecimalInt(propertyData.slice(0, 3).trim())\n        const iii = utils.parseDecimalInt(propertyData.slice(4, 7).trim())\n        const hhh = utils.parseDecimalInt(propertyData.slice(8, 11).trim())\n        const ooo = propertyData.slice(12).trim()\n        const logic = {}\n        if (iii > 0) logic.ifthen = iii\n        logic.resth = hhh === 1\n        logic.range = ooo\n        rLogic[rgid] = logic\n      } else if (type === 'APO') {\n        if (!props.get('attpnt')) {\n          props.set('attpnt', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'ALS') {\n        // atom list\n        const pool = parsePropertyLineAtomList(\n          utils.partitionLine(propertyData, [1, 3, 3, 1, 1, 1]),\n          utils.partitionLineFixed(propertyData.slice(10), 4, false)\n        )\n\n        if (!props.get('atomList')) props.set('atomList', new Pool())\n        if (!props.get('label')) props.set('label', new Pool())\n\n        pool.forEach((atomList, aid) => {\n          props.get('label').set(aid, 'L#')\n          props.get('atomList').set(aid, atomList)\n        })\n      } else if (type === 'STY') {\n        // introduce s-group\n        sGroup.initSGroup(sGroups, propertyData)\n      } else if (type === 'SST') {\n        sGroup.applySGroupProp(sGroups, 'subtype', propertyData)\n      } else if (type === 'SLB') {\n        sGroup.applySGroupProp(sGroups, 'label', propertyData, true)\n      } else if (type === 'SPL') {\n        sGroup.applySGroupProp(sGroups, 'parent', propertyData, true, true)\n      } else if (type === 'SCN') {\n        sGroup.applySGroupProp(sGroups, 'connectivity', propertyData)\n      } else if (type === 'SAL') {\n        sGroup.applySGroupArrayProp(sGroups, 'atoms', propertyData, -1)\n      } else if (type === 'SBL') {\n        sGroup.applySGroupArrayProp(sGroups, 'bonds', propertyData, -1)\n      } else if (type === 'SPA') {\n        sGroup.applySGroupArrayProp(sGroups, 'patoms', propertyData, -1)\n      } else if (type === 'SMT') {\n        const sid = utils.parseDecimalInt(propertyData.slice(0, 4)) - 1\n        sGroups[sid].data.subscript = propertyData.slice(4).trim()\n      } else if (type === 'SDT') {\n        sGroup.applyDataSGroupDesc(sGroups, propertyData)\n      } else if (type === 'SDD') {\n        sGroup.applyDataSGroupInfoLine(sGroups, propertyData)\n      } else if (type === 'SCD') {\n        sGroup.applyDataSGroupDataLine(sGroups, propertyData, false)\n      } else if (type === 'SED') {\n        sGroup.applyDataSGroupDataLine(sGroups, propertyData, true)\n      } else if (type === 'SDS') {\n        const expandedSGroups = propertyData.slice(7).trim().split('   ')\n        expandedSGroups.forEach((eg) => {\n          const sGroupId = Number(eg) - 1\n          sGroups[sGroupId].data.expanded = true\n        })\n      }\n    }\n    ++shift\n  }\n  return props\n}\n\n/**\n * @param atoms { Pool }\n * @param values { Pool }\n * @param propId { string }\n */\nfunction applyAtomProp(atoms, values, propId) {\n  /* reader */\n  values.forEach((propVal, aid) => {\n    atoms.get(aid)[propId] = propVal\n  })\n}\n\nfunction parseCTabV2000(\n  ctabLines,\n  countsSplit,\n  /* boolean */ ignoreChiralFlag\n) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const ctab = new Struct()\n  let i\n  const atomCount = utils.parseDecimalInt(countsSplit[0])\n  const bondCount = utils.parseDecimalInt(countsSplit[1])\n  const atomListCount = utils.parseDecimalInt(countsSplit[2])\n  const isAbs = utils.parseDecimalInt(countsSplit[4]) === 1 || ignoreChiralFlag\n  const isAnd = utils.parseDecimalInt(countsSplit[4]) === 0 && !ignoreChiralFlag\n  const stextLinesCount = utils.parseDecimalInt(countsSplit[5])\n  const propertyLinesCount = utils.parseDecimalInt(countsSplit[10])\n  let shift = 0\n  const atomLines = ctabLines.slice(shift, shift + atomCount)\n  shift += atomCount\n  const bondLines = ctabLines.slice(shift, shift + bondCount)\n  shift += bondCount\n  const atomListLines = ctabLines.slice(shift, shift + atomListCount)\n  shift += atomListCount + stextLinesCount\n\n  const atoms = atomLines.map(parseAtomLine)\n  atoms.forEach((atom) => ctab.atoms.add(atom))\n\n  const bonds = bondLines.map(parseBondLine)\n  bonds.forEach((bond) => {\n    if (bond.stereo && isAbs) {\n      ctab.atoms.get(bond.begin).stereoLabel = StereoLabel.Abs\n    }\n    if (bond.stereo && isAnd) {\n      ctab.atoms.get(bond.begin).stereoLabel = `${StereoLabel.And}1`\n    }\n    ctab.bonds.add(bond)\n  })\n\n  const atomLists = atomListLines.map(parseAtomListLine)\n  atomLists.forEach((pair) => {\n    ctab.atoms.get(pair.aid).atomList = pair.atomList\n    ctab.atoms.get(pair.aid).label = 'L#'\n  })\n\n  const sGroups = {}\n  const rLogic = {}\n  const props = parsePropertyLines(\n    ctab,\n    ctabLines,\n    shift,\n    Math.min(ctabLines.length, shift + propertyLinesCount),\n    sGroups,\n    rLogic\n  )\n  props.forEach((values, propId) => {\n    applyAtomProp(ctab.atoms, values, propId)\n  })\n\n  const atomMap = {}\n  let sid\n  for (sid in sGroups) {\n    const sg = sGroups[sid]\n    if (sg.type === 'DAT' && sg.atoms.length === 0) {\n      const parent = sGroups[sid].parent\n      if (parent >= 0) {\n        const psg = sGroups[parent - 1]\n        if (psg.type === 'GEN') sg.atoms = [].slice.call(psg.atoms)\n      }\n    }\n  }\n  for (sid in sGroups) sGroup.loadSGroup(ctab, sGroups[sid], atomMap)\n  const emptyGroups = []\n  for (sid in sGroups) {\n    // TODO: why do we need that?\n    SGroup.filter(ctab, sGroups[sid], atomMap)\n    if (sGroups[sid].atoms.length === 0 && !sGroups[sid].allAtoms) {\n      emptyGroups.push(+sid)\n    }\n  }\n  for (i = 0; i < emptyGroups.length; ++i) {\n    ctab.sGroupForest.remove(emptyGroups[i])\n    ctab.sgroups.delete(emptyGroups[i])\n  }\n  for (const id in rLogic) {\n    const rgid = parseInt(id, 10)\n    ctab.rgroups.set(rgid, new RGroup(rLogic[rgid]))\n  }\n  return ctab\n}\n\nfunction parseRg2000(\n  /* string[] */ ctabLines,\n  /* boolean */ ignoreChiralFlag\n) /* Struct */ {\n  // eslint-disable-line max-statements\n  ctabLines = ctabLines.slice(7)\n  if (ctabLines[0].trim() !== '$CTAB') throw new Error('RGFile format invalid')\n  let i = 1\n  while (ctabLines[i].charAt(0) !== '$') i++\n  if (ctabLines[i].trim() !== '$END CTAB') {\n    throw new Error('RGFile format invalid')\n  }\n  const coreLines = ctabLines.slice(1, i)\n  ctabLines = ctabLines.slice(i + 1)\n  const fragmentLines = {}\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    if (ctabLines.length === 0) throw new Error('Unexpected end of file')\n    let line = ctabLines[0].trim()\n    if (line === '$END MOL') {\n      ctabLines = ctabLines.slice(1)\n      break\n    }\n    if (line !== '$RGP') throw new Error('RGFile format invalid')\n\n    const rgid = parseInt(ctabLines[1].trim(), 10)\n    fragmentLines[rgid] = []\n    ctabLines = ctabLines.slice(2)\n    while (true) {\n      // eslint-disable-line no-constant-condition\n      if (ctabLines.length === 0) throw new Error('Unexpected end of file')\n      line = ctabLines[0].trim()\n      if (line === '$END RGP') {\n        ctabLines = ctabLines.slice(1)\n        break\n      }\n      if (line !== '$CTAB') throw new Error('RGFile format invalid')\n      i = 1\n      while (ctabLines[i].charAt(0) !== '$') i++\n      if (ctabLines[i].trim() !== '$END CTAB') {\n        throw new Error('RGFile format invalid')\n      }\n      fragmentLines[rgid].push(ctabLines.slice(1, i))\n      ctabLines = ctabLines.slice(i + 1)\n    }\n  }\n\n  const core = parseCTab(coreLines, ignoreChiralFlag)\n  const frag = {}\n  if (loadRGroupFragments) {\n    for (const strId in fragmentLines) {\n      const id = parseInt(strId, 10)\n      frag[id] = []\n      for (let j = 0; j < fragmentLines[id].length; ++j) {\n        frag[id].push(parseCTab(fragmentLines[id][j], ignoreChiralFlag))\n      }\n    }\n  }\n  return utils.rgMerge(core, frag)\n}\n\nfunction parseRxn2000(\n  /* string[] */ ctabLines,\n  /* boolean */ shouldReactionRelayout,\n  /* boolean */ ignoreChiralFlag\n) /* Struct */ {\n  // eslint-disable-line max-statements\n  /* reader */\n  ctabLines = ctabLines.slice(4)\n  const countsSplit = utils.partitionLine(\n    ctabLines[0],\n    utils.fmtInfo.rxnItemsPartition\n  )\n  const nReactants = countsSplit[0] - 0\n  const nProducts = countsSplit[1] - 0\n  const nAgents = countsSplit[2] - 0\n  ctabLines = ctabLines.slice(1) // consume counts line\n  const mols = []\n  while (ctabLines.length > 0 && ctabLines[0].substr(0, 4) === '$MOL') {\n    ctabLines = ctabLines.slice(1)\n    let n = 0\n    while (n < ctabLines.length && ctabLines[n].substr(0, 4) !== '$MOL') n++\n\n    const lines = ctabLines.slice(0, n)\n    var struct\n    if (lines[0].search('\\\\$MDL') === 0) {\n      struct = parseRg2000(lines, /* boolean */ ignoreChiralFlag)\n    } else {\n      struct = parseCTab(lines.slice(3), /* boolean */ ignoreChiralFlag)\n      struct.name = lines[0].trim()\n    }\n    mols.push(struct)\n    ctabLines = ctabLines.slice(n)\n  }\n  return utils.rxnMerge(\n    mols,\n    nReactants,\n    nProducts,\n    nAgents,\n    shouldReactionRelayout\n  )\n}\n\nfunction parseCTab(\n  /* string */ ctabLines,\n  /* boolean */ ignoreChiralFlag\n) /* Struct */ {\n  /* reader */\n  const countsSplit = utils.partitionLine(\n    ctabLines[0],\n    utils.fmtInfo.countsLinePartition\n  )\n  ctabLines = ctabLines.slice(1)\n  return parseCTabV2000(ctabLines, countsSplit, ignoreChiralFlag)\n}\n\nfunction labelsListToIds(labels) {\n  /* reader */\n  const ids = []\n  for (let i = 0; i < labels.length; ++i) {\n    const element = Elements.get(labels[i].trim())\n    if (element) {\n      ids.push(element.number)\n    }\n  }\n\n  return ids\n}\n\n/**\n * @param hdr\n * @param lst\n * @returns { Pool }\n */\nfunction parsePropertyLineAtomList(hdr, lst) {\n  /* reader */\n  const aid = utils.parseDecimalInt(hdr[1]) - 1\n  const count = utils.parseDecimalInt(hdr[2])\n  const notList = hdr[4].trim() === 'T'\n  const ids = labelsListToIds(lst.slice(0, count))\n  const ret = new Pool()\n  ret.set(\n    aid,\n    new AtomList({\n      notList,\n      ids\n    })\n  )\n  return ret\n}\n\nexport default {\n  parseCTabV2000,\n  parseRg2000,\n  parseRxn2000\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  AtomList,\n  Bond,\n  RGroup,\n  SGroup,\n  Struct,\n  Vec2\n} from 'domain/entities'\n\nimport { Elements } from 'domain/constants'\nimport sGroup from './parseSGroup'\nimport utils from './utils'\n\nfunction parseAtomLineV3000(line) {\n  /* reader */\n  let subsplit, key, value, i\n  const split = spacebarsplit(line)\n  const params = {\n    pp: new Vec2(\n      parseFloat(split[2]),\n      -parseFloat(split[3]),\n      parseFloat(split[4])\n    ),\n    aam: split[5].trim()\n  }\n  let label = split[1].trim()\n  if (label.charAt(0) === '\"' && label.charAt(label.length - 1) === '\"') {\n    label = label.substr(1, label.length - 2)\n  } // strip qutation marks\n  if (label.charAt(label.length - 1) === ']') {\n    // assume atom list\n    label = label.substr(0, label.length - 1) // remove ']'\n    const atomListParams = {}\n    atomListParams.notList = false\n    const matchNotListInfo = label.match(/NOT ?\\[/)\n    if (matchNotListInfo) {\n      atomListParams.notList = true\n      const [matchedSubstr] = matchNotListInfo\n      label = label.substr(matchedSubstr.length) // remove 'NOT [' or 'NOT['\n    } else if (label.charAt(0) !== '[') {\n      throw new Error(\"Error: atom list expected, found '\" + label + \"'\")\n    } else {\n      label = label.substr(1) // remove '['\n    }\n    atomListParams.ids = labelsListToIds(label.split(','))\n    params.atomList = new AtomList(atomListParams)\n    params.label = 'L#'\n  } else {\n    params.label = label\n  }\n  split.splice(0, 6)\n  for (i = 0; i < split.length; ++i) {\n    subsplit = splitonce(split[i], '=')\n    key = subsplit[0]\n    value = subsplit[1]\n    if (key in utils.fmtInfo.v30atomPropMap) {\n      let ival = utils.parseDecimalInt(value)\n      if (key === 'VAL') {\n        if (ival === 0) continue // eslint-disable-line no-continue\n        if (ival === -1) ival = 0\n      }\n      params[utils.fmtInfo.v30atomPropMap[key]] = ival\n    } else if (key === 'RGROUPS') {\n      value = value.trim().substr(1, value.length - 2)\n      const rgrsplit = value.split(' ').slice(1)\n      params.rglabel = 0\n      for (let j = 0; j < rgrsplit.length; ++j) {\n        params.rglabel |= 1 << (rgrsplit[j] - 1)\n      }\n    } else if (key === 'ATTCHPT') {\n      params.attpnt = value.trim() - 0\n    }\n  }\n\n  return new Atom(params)\n}\n\nfunction parseBondLineV3000(line) {\n  /* reader */\n  let subsplit, key, value, i\n  const split = spacebarsplit(line)\n  const params = {\n    begin: utils.parseDecimalInt(split[2]) - 1,\n    end: utils.parseDecimalInt(split[3]) - 1,\n    type: utils.fmtInfo.bondTypeMap[utils.parseDecimalInt(split[1])]\n  }\n  split.splice(0, 4)\n  for (i = 0; i < split.length; ++i) {\n    subsplit = splitonce(split[i], '=')\n    key = subsplit[0]\n    value = subsplit[1]\n    if (key === 'CFG') {\n      params.stereo =\n        utils.fmtInfo.v30bondStereoMap[utils.parseDecimalInt(value)]\n      if (\n        params.type === Bond.PATTERN.TYPE.DOUBLE &&\n        params.stereo === Bond.PATTERN.STEREO.EITHER\n      ) {\n        params.stereo = Bond.PATTERN.STEREO.CIS_TRANS\n      }\n    } else if (key === 'TOPO') {\n      params.topology =\n        utils.fmtInfo.bondTopologyMap[utils.parseDecimalInt(value)]\n    } else if (key === 'RXCTR') {\n      params.reactingCenterStatus = utils.parseDecimalInt(value)\n    } else if (key === 'STBOX') {\n      params.stereoCare = utils.parseDecimalInt(value)\n    }\n  }\n  return new Bond(params)\n}\n\nfunction v3000parseCollection(ctab, ctabLines, shift) {\n  /* reader */\n  shift++\n  while (ctabLines[shift].trim() !== 'M  V30 END COLLECTION') shift++\n  shift++\n  return shift\n}\n\nfunction v3000parseSGroup(ctab, ctabLines, sgroups, atomMap, shift) {\n  // eslint-disable-line max-params, max-statements\n  /* reader */\n  let line = ''\n  shift++\n  while (shift < ctabLines.length) {\n    line = stripV30(ctabLines[shift++]).trim()\n    if (line.trim() === 'END SGROUP') return shift\n    while (line.charAt(line.length - 1) === '-') {\n      line = (\n        line.substr(0, line.length - 1) + stripV30(ctabLines[shift++])\n      ).trim()\n    }\n    const split = splitSGroupDef(line)\n    const type = split[1]\n    const sg = new SGroup(type)\n    sg.number = split[0] - 0\n    sg.type = type\n    sg.label = split[2] - 0\n    sgroups[sg.number] = sg\n    const props = {}\n    for (let i = 3; i < split.length; ++i) {\n      const subsplit = splitonce(split[i], '=')\n      if (subsplit.length !== 2) {\n        throw new Error(\n          \"A record of form AAA=BBB or AAA=(...) expected, got '\" +\n            split[i] +\n            \"'\"\n        )\n      }\n      const name = subsplit[0]\n      if (!(name in props)) props[name] = []\n      props[name].push(subsplit[1])\n    }\n    sg.atoms = parseBracedNumberList(props.ATOMS[0], -1)\n    if (props.PATOMS) {\n      sg.patoms = parseBracedNumberList(props.PATOMS[0], -1)\n    }\n    sg.bonds = props.BONDS ? parseBracedNumberList(props.BONDS[0], -1) : []\n    const brkxyzStrs = props.BRKXYZ\n    sg.brkxyz = []\n    if (brkxyzStrs) {\n      for (let j = 0; j < brkxyzStrs.length; ++j) {\n        sg.brkxyz.push(parseBracedNumberList(brkxyzStrs[j]))\n      }\n    }\n    if (props.MULT) sg.data.subscript = props.MULT[0] - 0\n    if (props.LABEL) sg.data.subscript = props.LABEL[0].trim()\n    if (props.CONNECT) {\n      sg.data.connectivity = props.CONNECT[0].toLowerCase()\n    }\n    if (props.FIELDDISP) {\n      sGroup.applyDataSGroupInfo(sg, stripQuotes(props.FIELDDISP[0]))\n    }\n    if (props.FIELDDATA) {\n      sGroup.applyDataSGroupData(sg, props.FIELDDATA[0], true)\n    }\n    if (props.FIELDNAME) {\n      sGroup.applyDataSGroupName(sg, props.FIELDNAME[0])\n    }\n    if (props.QUERYTYPE) {\n      sGroup.applyDataSGroupQuery(sg, props.QUERYTYPE[0])\n    }\n    if (props.QUERYOP) sGroup.applyDataSGroupQueryOp(sg, props.QUERYOP[0])\n    sGroup.loadSGroup(ctab, sg, atomMap)\n    if (props.ESTATE) sGroup.applyDataSGroupExpand(sg, props.ESTATE[0])\n  }\n  throw new Error('S-group declaration incomplete.')\n}\n\nfunction parseCTabV3000(ctabLines, norgroups) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const ctab = new Struct()\n\n  let shift = 0\n  if (ctabLines[shift++].trim() !== 'M  V30 BEGIN CTAB') {\n    throw Error('CTAB V3000 invalid')\n  }\n  if (ctabLines[shift].slice(0, 13) !== 'M  V30 COUNTS') {\n    throw Error('CTAB V3000 invalid')\n  }\n  const vals = ctabLines[shift].slice(14).split(' ')\n  const isAbs = utils.parseDecimalInt(vals[4]) === 1\n  shift++\n\n  if (ctabLines[shift].trim() === 'M  V30 BEGIN ATOM') {\n    shift++\n    let line\n    while (shift < ctabLines.length) {\n      line = stripV30(ctabLines[shift++]).trim()\n      if (line === 'END ATOM') break\n      while (line.charAt(line.length - 1) === '-') {\n        line = (\n          line.substring(0, line.length - 1) + stripV30(ctabLines[shift++])\n        ).trim()\n      }\n      ctab.atoms.add(parseAtomLineV3000(line))\n    }\n\n    if (ctabLines[shift].trim() === 'M  V30 BEGIN BOND') {\n      shift++\n      while (shift < ctabLines.length) {\n        line = stripV30(ctabLines[shift++]).trim()\n        if (line === 'END BOND') break\n        while (line.charAt(line.length - 1) === '-') {\n          line = (\n            line.substring(0, line.length - 1) + stripV30(ctabLines[shift++])\n          ).trim()\n        }\n        const bond = parseBondLineV3000(line)\n        if (bond.stereo && isAbs) ctab.atoms.get(bond.begin).stereoLabel = 'abs'\n        ctab.bonds.add(bond)\n      }\n    }\n\n    // TODO: let sections follow in arbitrary order\n    const sgroups = {}\n    const atomMap = {}\n\n    while (ctabLines[shift].trim() !== 'M  V30 END CTAB') {\n      if (ctabLines[shift].trim() === 'M  V30 BEGIN COLLECTION') {\n        // TODO: read collection information\n        shift = v3000parseCollection(ctab, ctabLines, shift)\n      } else if (ctabLines[shift].trim() === 'M  V30 BEGIN SGROUP') {\n        shift = v3000parseSGroup(ctab, ctabLines, sgroups, atomMap, shift)\n      } else throw Error('CTAB V3000 invalid')\n    }\n  }\n  if (ctabLines[shift++].trim() !== 'M  V30 END CTAB') {\n    throw Error('CTAB V3000 invalid')\n  }\n\n  if (!norgroups) readRGroups3000(ctab, ctabLines.slice(shift))\n\n  return ctab\n}\n\nfunction readRGroups3000(ctab, /* string */ ctabLines) /* Struct */ {\n  // eslint-disable-line max-statements\n  /* reader */\n  const rfrags = {}\n  const rLogic = {}\n  let shift = 0\n  while (\n    shift < ctabLines.length &&\n    ctabLines[shift].search('M  V30 BEGIN RGROUP') === 0\n  ) {\n    const id = ctabLines[shift++].split(' ').pop()\n    rfrags[id] = []\n    rLogic[id] = {}\n    while (true) {\n      // eslint-disable-line no-constant-condition\n      let line = ctabLines[shift].trim()\n      if (line.search('M  V30 RLOGIC') === 0) {\n        line = line.slice(13)\n        const rlsplit = line.trim().split(/\\s+/g)\n        const iii = utils.parseDecimalInt(rlsplit[0])\n        const hhh = utils.parseDecimalInt(rlsplit[1])\n        const ooo = rlsplit.slice(2).join(' ')\n        const logic = {}\n        if (iii > 0) logic.ifthen = iii\n        logic.resth = hhh === 1\n        logic.range = ooo\n        rLogic[id] = logic\n        shift++\n        continue // eslint-disable-line no-continue\n      }\n      if (line !== 'M  V30 BEGIN CTAB') throw Error('CTAB V3000 invalid')\n      for (var i = 0; i < ctabLines.length; ++i) {\n        if (ctabLines[shift + i].trim() === 'M  V30 END CTAB') break\n      }\n      const lines = ctabLines.slice(shift, shift + i + 1)\n      const rfrag = parseCTabV3000(lines, true)\n      rfrags[id].push(rfrag)\n      shift = shift + i + 1\n      if (ctabLines[shift].trim() === 'M  V30 END RGROUP') {\n        shift++\n        break\n      }\n    }\n  }\n\n  Object.keys(rfrags).forEach((rgid) => {\n    rfrags[rgid].forEach((rg) => {\n      rg.rgroups.set(rgid, new RGroup(rLogic[rgid]))\n      const frid = rg.frags.add({})\n      rg.rgroups.get(rgid).frags.add(frid)\n      rg.atoms.forEach((atom) => {\n        atom.fragment = frid\n      })\n      rg.mergeInto(ctab)\n    })\n  })\n}\n\nfunction parseRxn3000(\n  /* string[] */ ctabLines,\n  shouldReactionRelayout\n) /* Struct */ {\n  // eslint-disable-line max-statements\n  /* reader */\n  ctabLines = ctabLines.slice(4)\n  const countsSplit = ctabLines[0].split(/\\s+/g).slice(3)\n  const nReactants = countsSplit[0] - 0\n  const nProducts = countsSplit[1] - 0\n  const nAgents = countsSplit.length > 2 ? countsSplit[2] - 0 : 0\n\n  function findCtabEnd(i) {\n    for (let j = i; j < ctabLines.length; ++j) {\n      if (ctabLines[j].trim() === 'M  V30 END CTAB') return j\n    }\n\n    return console.error('CTab format invalid')\n  }\n\n  function findRGroupEnd(i) {\n    for (let j = i; j < ctabLines.length; ++j) {\n      if (ctabLines[j].trim() === 'M  V30 END RGROUP') return j\n    }\n    return console.error('CTab format invalid')\n  }\n\n  const molLinesReactants = []\n  const molLinesProducts = []\n  const molLinesAgents = []\n  let current = null\n  const rGroups = []\n  for (let i = 0; i < ctabLines.length; ++i) {\n    const line = ctabLines[i].trim()\n    var j\n\n    if (line.startsWith('M  V30 COUNTS')) {\n      // do nothing\n    } else if (line === 'M  END') {\n      break // stop reading\n    } else if (line === 'M  V30 BEGIN PRODUCT') {\n      current = molLinesProducts\n    } else if (line === 'M  V30 END PRODUCT') {\n      current = null\n    } else if (line === 'M  V30 BEGIN REACTANT') {\n      current = molLinesReactants\n    } else if (line === 'M  V30 END REACTANT') {\n      current = null\n    } else if (line === 'M  V30 BEGIN AGENT') {\n      current = molLinesAgents\n    } else if (line === 'M  V30 END AGENT') {\n      current = null\n    } else if (line.startsWith('M  V30 BEGIN RGROUP')) {\n      j = findRGroupEnd(i)\n      rGroups.push(ctabLines.slice(i, j + 1))\n      i = j\n    } else if (line === 'M  V30 BEGIN CTAB') {\n      j = findCtabEnd(i)\n      current.push(ctabLines.slice(i, j + 1))\n      i = j\n    } else {\n      throw new Error('line unrecognized: ' + line)\n    }\n  }\n  const mols = []\n  const molLines = molLinesReactants\n    .concat(molLinesProducts)\n    .concat(molLinesAgents)\n  for (j = 0; j < molLines.length; ++j) {\n    const mol = parseCTabV3000(molLines[j], countsSplit)\n    mols.push(mol)\n  }\n  const ctab = utils.rxnMerge(\n    mols,\n    nReactants,\n    nProducts,\n    nAgents,\n    shouldReactionRelayout\n  )\n\n  readRGroups3000(\n    ctab,\n    (function (array) {\n      let res = []\n      for (let k = 0; k < array.length; ++k) res = res.concat(array[k])\n      return res\n    })(rGroups)\n  )\n\n  return ctab\n}\n\n// split a line by spaces outside parentheses\nfunction spacebarsplit(line) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const split = []\n  let bracketEquality = 0\n  let currentIndex = 0\n  let firstSliceIndex = -1\n  let quoted = false\n\n  for (currentIndex; currentIndex < line.length; currentIndex += 1) {\n    const currentSymbol = line[currentIndex]\n    if (line.substr(currentIndex, 3) === 'NOT') {\n      const closingBracketIndex = line.indexOf(']')\n      split.push(line.slice(currentIndex, closingBracketIndex + 1))\n      currentIndex = closingBracketIndex + 1\n      firstSliceIndex = currentIndex\n    } else if (currentSymbol === '(') bracketEquality += 1\n    else if (currentSymbol === ')') bracketEquality -= 1\n    else if (currentSymbol === '\"') quoted = !quoted\n    else if (!quoted && line[currentIndex] === ' ' && bracketEquality === 0) {\n      if (currentIndex > firstSliceIndex + 1) {\n        split.push(line.slice(firstSliceIndex + 1, currentIndex))\n      }\n      firstSliceIndex = currentIndex\n    }\n  }\n  if (currentIndex > firstSliceIndex + 1) {\n    split.push(line.slice(firstSliceIndex + 1, currentIndex))\n  }\n  return split\n}\n\n// utils\nfunction stripQuotes(str) {\n  if (str[0] === '\"' && str[str.length - 1] === '\"') {\n    return str.substr(1, str.length - 2)\n  }\n  return str\n}\n\nfunction splitonce(line, delim) {\n  /* reader */\n  const p = line.indexOf(delim)\n  return [line.slice(0, p), line.slice(p + 1)]\n}\n\nfunction splitSGroupDef(line) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const split = []\n  let braceBalance = 0\n  let quoted = false\n  for (let i = 0; i < line.length; ++i) {\n    const c = line.charAt(i)\n    if (c === '\"') {\n      quoted = !quoted\n    } else if (!quoted) {\n      if (c === '(') {\n        braceBalance++\n      } else if (c === ')') {\n        braceBalance--\n      } else if (c === ' ' && braceBalance === 0) {\n        split.push(line.slice(0, i))\n        line = line.slice(i + 1).trim()\n        i = 0\n      }\n    }\n  }\n  if (braceBalance !== 0) {\n    throw new Error('Brace balance broken. S-group properies invalid!')\n  }\n  if (line.length > 0) split.push(line.trim())\n  return split\n}\n\nfunction parseBracedNumberList(line, shift) {\n  /* reader */\n  if (!line) return null\n  const list = []\n  line = line.trim()\n  line = line.substr(1, line.length - 2)\n  const split = line.split(' ')\n  shift = shift || 0\n\n  for (let i = 1; i < split.length; ++i) {\n    const value = parseInt(split[i])\n    if (!isNaN(value)) {\n      // eslint-disable-line\n      list.push(value + shift)\n    }\n  }\n\n  return list\n}\n\nfunction stripV30(line) {\n  /* reader */\n  if (line.slice(0, 7) !== 'M  V30 ') throw new Error('Prefix invalid')\n  return line.slice(7)\n}\n\nfunction labelsListToIds(labels) {\n  /* reader */\n  const ids = []\n  for (let i = 0; i < labels.length; ++i) {\n    const element = Elements.get(labels[i].trim())\n    if (element) {\n      ids.push(element.number)\n    }\n  }\n\n  return ids\n}\n\nexport default {\n  parseCTabV3000,\n  readRGroups3000,\n  parseRxn3000\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Pile, SGroup } from 'domain/entities'\n\nimport utils from './utils'\nimport v2000 from './v2000'\nimport v3000 from './v3000'\n\nconst loadRGroupFragments = true // TODO: set to load the fragments\n\n/* Parse Mol */\nfunction parseMol(\n  /* string */ ctabLines,\n  /* boolean */ ignoreChiralFlag\n) /* Struct */ {\n  /* reader */\n  if (ctabLines[0].search('\\\\$MDL') === 0) {\n    const struct = v2000.parseRg2000(ctabLines, ignoreChiralFlag)\n    struct.name = ctabLines[3].trim()\n    return struct\n  }\n  const struct = parseCTab(ctabLines.slice(3), ignoreChiralFlag)\n  struct.name = ctabLines[0].trim()\n  return struct\n}\n\nfunction parseCTab(\n  /* string */ ctabLines,\n  /* boolean */ ignoreChiralFlag\n) /* Struct */ {\n  /* reader */\n  const countsSplit = partitionLine(\n    ctabLines[0],\n    utils.fmtInfo.countsLinePartition\n  )\n  const version = countsSplit[11].trim()\n  ctabLines = ctabLines.slice(1)\n  if (version === 'V2000') {\n    return v2000.parseCTabV2000(ctabLines, countsSplit, ignoreChiralFlag)\n  }\n  if (version === 'V3000') {\n    return v3000.parseCTabV3000(ctabLines, !loadRGroupFragments)\n  } else {\n    throw new Error('Molfile version unknown: ' + version)\n  }\n}\n\n/* Parse Rxn */\nfunction parseRxn(\n  /* string[] */ ctabLines,\n  /* boolean */ shouldReactionRelayout,\n  /* boolean */ ignoreChiralFlag\n) /* Struct */ {\n  /* reader */\n  const split = ctabLines[0].trim().split(' ')\n  if (split.length > 1 && split[1] === 'V3000') {\n    return v3000.parseRxn3000(ctabLines, shouldReactionRelayout)\n  }\n\n  const struct = v2000.parseRxn2000(\n    ctabLines,\n    shouldReactionRelayout,\n    ignoreChiralFlag\n  )\n  struct.name = ctabLines[1].trim()\n  return struct\n}\n\n/* Prepare For Saving */\nconst prepareForSaving = {\n  MUL: SGroup.prepareMulForSaving,\n  SRU: prepareSruForSaving,\n  SUP: prepareSupForSaving,\n  DAT: prepareDatForSaving,\n  GEN: prepareGenForSaving\n}\n\nfunction prepareSruForSaving(sgroup, mol) {\n  const xBonds = []\n  mol.bonds.forEach((bond, bid) => {\n    const a1 = mol.atoms.get(bond.begin)\n    const a2 = mol.atoms.get(bond.end)\n    /* eslint-disable no-mixed-operators */\n    if (\n      (a1.sgs.has(sgroup.id) && !a2.sgs.has(sgroup.id)) ||\n      (a2.sgs.has(sgroup.id) && !a1.sgs.has(sgroup.id))\n    ) {\n      /* eslint-enable no-mixed-operators */\n      xBonds.push(bid)\n    }\n  }, sgroup)\n  if (xBonds.length !== 0 && xBonds.length !== 2) {\n    throw {\n      id: sgroup.id,\n      'error-type': 'cross-bond-number',\n      message: 'Unsupported cross-bonds number'\n    }\n  }\n  sgroup.bonds = xBonds\n}\n\nfunction prepareSupForSaving(sgroup, mol) {\n  // This code is also used for GroupSru and should be moved into a separate common method\n  // It seems that such code should be used for any sgroup by this this should be checked\n  const xBonds = []\n  mol.bonds.forEach((bond, bid) => {\n    const a1 = mol.atoms.get(bond.begin)\n    const a2 = mol.atoms.get(bond.end)\n    /* eslint-disable no-mixed-operators */\n    if (\n      (a1.sgs.has(sgroup.id) && !a2.sgs.has(sgroup.id)) ||\n      (a2.sgs.has(sgroup.id) && !a1.sgs.has(sgroup.id))\n    ) {\n      /* eslint-enable no-mixed-operators */\n      xBonds.push(bid)\n    }\n  }, sgroup)\n  sgroup.bonds = xBonds\n}\n\nfunction prepareGenForSaving(sgroup, mol) {\n  // eslint-disable-line no-unused-vars\n}\n\nfunction prepareDatForSaving(sgroup, mol) {\n  sgroup.atoms = SGroup.getAtoms(mol, sgroup)\n}\n\n/* Save To Molfile */\nconst saveToMolfile = {\n  MUL: saveMulToMolfile,\n  SRU: saveSruToMolfile,\n  SUP: saveSupToMolfile,\n  DAT: saveDatToMolfile,\n  GEN: saveGenToMolfile\n}\n\nfunction saveMulToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {\n  // eslint-disable-line max-params\n  const idstr = (sgMap[sgroup.id] + '').padStart(3)\n\n  let lines = []\n  lines = lines.concat(\n    makeAtomBondLines(\n      'SAL',\n      idstr,\n      Array.from(sgroup.atomSet.values()),\n      atomMap\n    )\n  ) // TODO: check atomSet\n  lines = lines.concat(\n    makeAtomBondLines(\n      'SPA',\n      idstr,\n      Array.from(sgroup.parentAtomSet.values()),\n      atomMap\n    )\n  )\n  lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap))\n  const smtLine = 'M  SMT ' + idstr + ' ' + sgroup.data.mul\n  lines.push(smtLine)\n  lines = lines.concat(bracketsToMolfile(mol, sgroup, idstr))\n  return lines.join('\\n')\n}\n\nfunction saveSruToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {\n  // eslint-disable-line max-params\n  const idstr = (sgMap[sgroup.id] + '').padStart(3)\n\n  let lines = []\n  lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap))\n  lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap))\n  lines = lines.concat(bracketsToMolfile(mol, sgroup, idstr))\n  return lines.join('\\n')\n}\n\nfunction saveSupToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {\n  // eslint-disable-line max-params\n  const idstr = (sgMap[sgroup.id] + '').padStart(3)\n\n  let lines = []\n  lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap))\n  lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap))\n  if (sgroup.data.name && sgroup.data.name !== '') {\n    lines.push('M  SMT ' + idstr + ' ' + sgroup.data.name)\n  }\n  return lines.join('\\n')\n}\n\nfunction saveDatToMolfile(sgroup, mol, sgMap, atomMap) {\n  const idstr = (sgMap[sgroup.id] + '').padStart(3)\n\n  const data = sgroup.data\n  let pp = sgroup.pp\n  if (!data.absolute) pp = pp.sub(SGroup.getMassCentre(mol, sgroup.atoms))\n  let lines = []\n  lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap))\n  let sdtLine =\n    'M  SDT ' +\n    idstr +\n    ' ' +\n    (data.fieldName || '').padEnd(30) +\n    (data.fieldType || '').padStart(2) +\n    (data.units || '').padEnd(20) +\n    (data.query || '').padStart(2)\n\n  if (data.queryOp) {\n    // see gitlab #184\n    sdtLine += data.queryOp.padEnd(80 - 65)\n  }\n\n  lines.push(sdtLine)\n  const sddLine =\n    'M  SDD ' +\n    idstr +\n    ' ' +\n    utils.paddedNum(pp.x, 10, 4) +\n    utils.paddedNum(-pp.y, 10, 4) +\n    '    ' + // ' eee'\n    (data.attached ? 'A' : 'D') + // f\n    (data.absolute ? 'A' : 'R') + // g\n    (data.showUnits ? 'U' : ' ') + // h\n    '   ' + //  i\n    (data.nCharnCharsToDisplay >= 0\n      ? utils.paddedNum(data.nCharnCharsToDisplay, 3)\n      : 'ALL') + // jjj\n    '  1   ' + // 'kkk ll '\n    (data.tagChar || ' ') + // m\n    '  ' +\n    utils.paddedNum(data.daspPos, 1) + // n\n    '  ' // oo\n  lines.push(sddLine)\n  const val = normalizeNewlines(data.fieldValue).replace(/\\n*$/, '')\n  const charsPerLine = 69\n  val.split('\\n').forEach((chars) => {\n    while (chars.length > charsPerLine) {\n      lines.push('M  SCD ' + idstr + ' ' + chars.slice(0, charsPerLine))\n      chars = chars.slice(charsPerLine)\n    }\n    lines.push('M  SED ' + idstr + ' ' + chars)\n  })\n  return lines.join('\\n')\n}\n\nfunction saveGenToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {\n  // eslint-disable-line max-params\n  const idstr = (sgMap[sgroup.id] + '').padStart(3)\n\n  let lines = []\n  lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap))\n  lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap))\n  lines = lines.concat(bracketsToMolfile(mol, sgroup, idstr))\n  return lines.join('\\n')\n}\n\nfunction makeAtomBondLines(prefix, idstr, ids, map) {\n  if (!ids) return []\n  const lines = []\n  for (let i = 0; i < Math.floor((ids.length + 14) / 15); ++i) {\n    const rem = Math.min(ids.length - 15 * i, 15) // eslint-disable-line no-mixed-operators\n    let salLine = 'M  ' + prefix + ' ' + idstr + ' ' + utils.paddedNum(rem, 2)\n    for (let j = 0; j < rem; ++j) {\n      salLine += ' ' + utils.paddedNum(map[ids[i * 15 + j]], 3)\n    } // eslint-disable-line no-mixed-operators\n    lines.push(salLine)\n  }\n  return lines\n}\n\nfunction bracketsToMolfile(mol, sg, idstr) {\n  // eslint-disable-line max-statements\n  const atomSet = new Pile(sg.atoms)\n  const crossBonds = SGroup.getCrossBonds(mol, atomSet)\n  SGroup.bracketPos(sg, mol, crossBonds)\n  const bb = sg.bracketBox\n  const d = sg.bracketDir\n  const n = d.rotateSC(1, 0)\n  const brackets = SGroup.getBracketParameters(\n    mol,\n    crossBonds,\n    atomSet,\n    bb,\n    d,\n    n\n  )\n  const lines = []\n  for (let i = 0; i < brackets.length; ++i) {\n    const bracket = brackets[i]\n    const a0 = bracket.c.addScaled(bracket.n, -0.5 * bracket.h).yComplement()\n    const a1 = bracket.c.addScaled(bracket.n, 0.5 * bracket.h).yComplement()\n    let line = 'M  SDI ' + idstr + utils.paddedNum(4, 3)\n    const coord = [a0.x, a0.y, a1.x, a1.y]\n    for (let j = 0; j < coord.length; ++j) {\n      line += utils.paddedNum(coord[j], 10, 4)\n    }\n    lines.push(line)\n  }\n  return lines\n}\n\n// According Unicode Consortium sould be\n// nlRe = /\\r\\n|[\\n\\v\\f\\r\\x85\\u2028\\u2029]/g;\n// http://www.unicode.org/reports/tr18/#Line_Boundaries\nconst nlRe = /\\r\\n|[\\n\\r]/g\nfunction normalizeNewlines(str) {\n  return str.replace(nlRe, '\\n')\n}\n\nfunction partitionLine(\n  /* string */ str,\n  /* array of int */ parts,\n  /* bool */ withspace\n) {\n  /* reader */\n  const res = []\n  for (let i = 0, shift = 0; i < parts.length; ++i) {\n    res.push(str.slice(shift, shift + parts[i]))\n    if (withspace) shift++\n    shift += parts[i]\n  }\n  return res\n}\n\nexport default {\n  parseCTab,\n  parseMol,\n  parseRxn,\n  prepareForSaving,\n  saveToMolfile\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { StereoFlag, Struct } from 'domain/entities'\n\nimport { Elements } from 'domain/constants'\nimport common from './common'\nimport utils from './utils'\n\nconst END_V2000 = '2D 1   1.00000     0.00000     0'\n\ntype Mapping = {\n  [key in number]: number\n}\ntype NumberTuple = [number, number]\n\ninterface ParseCTFileProps {\n  molfileLines: string[]\n  shouldReactionRelayout?: boolean\n  ignoreChiralFlag?: boolean\n}\n\nexport class Molfile {\n  molecule: Struct | null\n  molfile: string | null\n  reaction: boolean\n  mapping: Mapping\n  bondMapping: Mapping\n\n  constructor() {\n    this.molecule = null\n    this.molfile = null\n\n    this.reaction = false\n    this.mapping = {}\n    this.bondMapping = {}\n  }\n\n  parseCTFile(props: ParseCTFileProps) {\n    const { molfileLines, shouldReactionRelayout, ignoreChiralFlag } = props\n    let ret\n    if (molfileLines[0].search('\\\\$RXN') === 0) {\n      ret = common.parseRxn(\n        molfileLines,\n        shouldReactionRelayout,\n        ignoreChiralFlag\n      )\n    } else {\n      ret = common.parseMol(molfileLines, ignoreChiralFlag)\n    }\n    ret.initHalfBonds()\n    ret.initNeighbors()\n    ret.bindSGroupsToFunctionalGroups()\n\n    return ret\n  }\n\n  prepareSGroups(skipErrors: boolean, preserveIndigoDesc?: boolean) {\n    const mol = this.molecule\n    const toRemove: any[] = []\n    let errors = 0\n\n    this.molecule?.sGroupForest\n      .getSGroupsBFS()\n      .reverse()\n      .forEach((id) => {\n        const sgroup = mol!.sgroups.get(id)!\n        let errorIgnore = false\n\n        try {\n          common.prepareForSaving[sgroup.type](sgroup, mol)\n        } catch (ex: any) {\n          if (!skipErrors || typeof ex.id !== 'number') {\n            throw new Error(`Error: ${ex.message}`)\n          }\n          errorIgnore = true\n        }\n        /* eslint-disable no-mixed-operators */\n        if (\n          errorIgnore ||\n          (!preserveIndigoDesc &&\n            /^INDIGO_.+_DESC$/i.test(sgroup.data.fieldName))\n        ) {\n          errors += +errorIgnore\n          toRemove.push(sgroup.id)\n        }\n      }, this)\n\n    if (errors) {\n      throw new Error(\n        'Warning: ' +\n          errors +\n          ' invalid S-groups were detected. They will be omitted.'\n      )\n    }\n\n    for (let i = 0; i < toRemove.length; ++i) {\n      mol?.sGroupDelete(toRemove[i])\n    }\n  }\n\n  getCTab(molecule: Struct, rgroups?: Map<any, any>) {\n    /* saver */\n    this.molecule = molecule.clone()\n    this.prepareSGroups(false, false)\n    this.molfile = ''\n    this.writeCTab2000(rgroups)\n    return this.molfile\n  }\n\n  saveMolecule(\n    molecule: Struct,\n    skipSGroupErrors: boolean,\n    norgroups?: boolean,\n    preserveIndigoDesc?: boolean,\n    ignoreChiralFlag?: boolean\n  ) {\n    // eslint-disable-line max-statements\n    /* saver */\n    this.reaction = molecule.hasRxnArrow()\n    this.molfile = '' + molecule.name\n    if (this.reaction) {\n      if (molecule.rgroups.size > 0) {\n        throw new Error(\n          'Reactions with r-groups are not supported at the moment'\n        )\n      }\n      const components = molecule.getComponents()\n\n      const reactants = components.reactants\n      const products = components.products\n      const all = reactants.concat(products)\n      this.molfile =\n        '$RXN\\n' +\n        molecule.name +\n        '\\n\\n\\n' +\n        utils.paddedNum(reactants.length, 3) +\n        utils.paddedNum(products.length, 3) +\n        utils.paddedNum(0, 3) +\n        '\\n'\n      for (let i = 0; i < all.length; ++i) {\n        const saver = new Molfile()\n        const submol = molecule.clone(all[i], null, true)\n        const molfile = saver.saveMolecule(submol, false, true)\n        this.molfile += '$MOL\\n' + molfile\n      }\n      return this.molfile\n    }\n\n    if (molecule.rgroups.size > 0) {\n      if (norgroups) {\n        molecule = molecule.getScaffold()\n      } else {\n        const scaffold = new Molfile().getCTab(\n          molecule.getScaffold(),\n          molecule.rgroups\n        )\n        this.molfile =\n          '$MDL  REV  1\\n$MOL\\n$HDR\\n' + molecule.name + '\\n\\n\\n$END HDR\\n'\n        this.molfile += '$CTAB\\n' + scaffold + '$END CTAB\\n'\n\n        molecule.rgroups.forEach((rg, rgid) => {\n          this.molfile += '$RGP\\n'\n          this.writePaddedNumber(rgid, 3)\n          this.molfile += '\\n'\n          rg.frags.forEach((fid) => {\n            const group = new Molfile().getCTab(molecule.getFragment(fid))\n            this.molfile += '$CTAB\\n' + group + '$END CTAB\\n'\n          })\n          this.molfile += '$END RGP\\n'\n        })\n        this.molfile += '$END MOL\\n'\n\n        return this.molfile\n      }\n    }\n\n    this.molecule = molecule.clone()\n\n    this.prepareSGroups(skipSGroupErrors, preserveIndigoDesc)\n\n    this.writeHeader()\n    this.writeCTab2000(undefined, ignoreChiralFlag)\n\n    return this.molfile\n  }\n\n  writeHeader() {\n    /* saver */\n\n    const date = new Date()\n\n    this.writeCR() // TODO: write structure name\n    this.writeWhiteSpace(2)\n    this.write('Ketcher')\n    this.writeWhiteSpace()\n    this.writeCR(\n      (date.getMonth() + 1 + '').padStart(2) +\n        (date.getDate() + '').padStart(2) +\n        ((date.getFullYear() % 100) + '').padStart(2) +\n        (date.getHours() + '').padStart(2) +\n        (date.getMinutes() + '').padStart(2) +\n        END_V2000\n    )\n    this.writeCR()\n  }\n\n  write(str: string) {\n    /* saver */\n    this.molfile += str\n  }\n\n  writeCR(str?: string) {\n    /* saver */\n    if (arguments.length === 0) {\n      str = ''\n    }\n\n    this.molfile += str + '\\n'\n  }\n\n  writeWhiteSpace(length = 0) {\n    /* saver */\n    if (arguments.length === 0) {\n      length = 1\n    }\n\n    this.write(' '.repeat(Math.max(length, 0)))\n  }\n\n  writePadded(str: string, width: number) {\n    /* saver */\n    this.write(str)\n    this.writeWhiteSpace(width - str.length)\n  }\n\n  writePaddedNumber(number: number, width: number) {\n    /* saver */\n    const str = (number - 0).toString()\n\n    this.writeWhiteSpace(width - str.length)\n    this.write(str)\n  }\n\n  writePaddedFloat(number: string | number, width: number, precision: number) {\n    /* saver */\n    this.write(utils.paddedNum(number, width, precision))\n  }\n\n  writeCTab2000Header(ignoreChiralFlag) {\n    /* saver */\n    this.writePaddedNumber(this.molecule!.atoms.size, 3)\n    this.writePaddedNumber(this.molecule!.bonds.size, 3)\n\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    const isAbsFlag = Array.from(this.molecule!.frags.values()).some((fr) =>\n      fr ? fr.enhancedStereoFlag === StereoFlag.Abs : false\n    )\n\n    this.writePaddedNumber(isAbsFlag || ignoreChiralFlag ? 1 : 0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(999, 3)\n    this.writeCR(' V2000')\n  }\n\n  writeCTab2000(rgroups?: Map<any, any>, ignoreChiralFlag?: boolean) {\n    // eslint-disable-line max-statements\n    /* saver */\n    this.writeCTab2000Header(ignoreChiralFlag)\n\n    this.mapping = {}\n    let i = 1\n\n    const atomsIds: number[] = []\n    const atomsProps: {\n      id: number\n      value: string\n    }[] = []\n    this.molecule!.atoms.forEach((atom, id) => {\n      let label = atom.label\n      if (atom.atomList != null) {\n        label = 'L'\n        atomsIds.push(id)\n      } else if (atom.pseudo) {\n        if (atom.pseudo.length > 3) {\n          label = 'A'\n          atomsProps.push({ id, value: `'${atom.pseudo}'` })\n        }\n      } else if (atom.alias) {\n        atomsProps.push({ id, value: atom.alias })\n      } else if (\n        !Elements.get(atom.label) &&\n        ['A', 'Q', 'X', '*', 'R#'].indexOf(atom.label) === -1\n      ) {\n        // search in generics?\n        label = 'C'\n        atomsProps.push({ id, value: atom.label })\n      }\n\n      this.writeAtom(atom, label)\n\n      this.mapping[id] = i++\n    }, this)\n\n    this.bondMapping = {}\n    i = 1\n    this.molecule!.bonds.forEach((bond, id) => {\n      this.bondMapping[id] = i++\n      this.writeBond(bond)\n    }, this)\n\n    while (atomsProps.length > 0) {\n      this.writeAtomProps(atomsProps[0])\n      atomsProps.splice(0, 1)\n    }\n\n    const chargeList: NumberTuple[] = []\n    const isotopeList: NumberTuple[] = []\n    const radicalList: NumberTuple[] = []\n    const rglabelList: NumberTuple[] = []\n    const rglogicList: string[] = []\n    const aplabelList: NumberTuple[] = []\n    const rbcountList: NumberTuple[] = []\n    const unsaturatedList: NumberTuple[] = []\n    const substcountList: NumberTuple[] = []\n\n    this.molecule!.atoms.forEach((atom, id) => {\n      if (atom.charge !== 0) {\n        chargeList.push([id, atom.charge])\n      }\n      if (atom.isotope !== 0) {\n        isotopeList.push([id, atom.isotope])\n      }\n      if (atom.radical !== 0) {\n        radicalList.push([id, atom.radical])\n      }\n      if (atom.rglabel != null && atom.label === 'R#') {\n        // TODO need to force rglabel=null when label is not 'R#'\n        for (let rgi = 0; rgi < 32; rgi++) {\n          if ((atom.rglabel as any) & (1 << rgi)) {\n            rglabelList.push([id, rgi + 1])\n          }\n        }\n      }\n      if (atom.attpnt != null) {\n        aplabelList.push([id, atom.attpnt])\n      }\n      if (atom.ringBondCount !== 0) {\n        rbcountList.push([id, atom.ringBondCount])\n      }\n      if (atom.substitutionCount !== 0) {\n        substcountList.push([id, atom.substitutionCount])\n      }\n      if (atom.unsaturatedAtom !== 0) {\n        unsaturatedList.push([id, atom.unsaturatedAtom])\n      }\n    })\n\n    if (rgroups) {\n      rgroups.forEach((rg, rgid) => {\n        if (rg.resth || rg.ifthen > 0 || rg.range.length > 0) {\n          const line =\n            '  1 ' +\n            utils.paddedNum(rgid, 3) +\n            ' ' +\n            utils.paddedNum(rg.ifthen, 3) +\n            ' ' +\n            utils.paddedNum(rg.resth ? 1 : 0, 3) +\n            '   ' +\n            rg.range\n          rglogicList.push(line)\n        }\n      })\n    }\n\n    this.writeAtomPropList('M  CHG', chargeList)\n    this.writeAtomPropList('M  ISO', isotopeList)\n    this.writeAtomPropList('M  RAD', radicalList)\n    this.writeAtomPropList('M  RGP', rglabelList)\n    for (let j = 0; j < rglogicList.length; ++j) {\n      this.write('M  LOG' + rglogicList[j] + '\\n')\n    }\n\n    this.writeAtomPropList('M  APO', aplabelList)\n    this.writeAtomPropList('M  RBC', rbcountList)\n    this.writeAtomPropList('M  SUB', substcountList)\n    this.writeAtomPropList('M  UNS', unsaturatedList)\n\n    if (atomsIds.length > 0) {\n      for (let j = 0; j < atomsIds.length; ++j) {\n        const atomId = atomsIds[j]\n        const atomList = this.molecule!.atoms.get(atomId)!.atomList!\n        this.write('M  ALS')\n        this.writePaddedNumber(atomId + 1, 4)\n        this.writePaddedNumber(atomList.ids.length, 3)\n        this.writeWhiteSpace()\n        this.write(atomList.notList ? 'T' : 'F')\n\n        const labelList = atomList.labelList()\n        for (let k = 0; k < labelList.length; ++k) {\n          this.writeWhiteSpace()\n          this.writePadded(labelList[k], 3)\n        }\n        this.writeWhiteSpace()\n        this.writeCR()\n      }\n    }\n\n    const sgmap = {}\n    let cnt = 1\n    const sgmapback = {}\n    const sgorder = this.molecule!.sGroupForest.getSGroupsBFS()\n    sgorder.forEach((id) => {\n      sgmapback[cnt] = id\n      sgmap[id] = cnt++\n    })\n    for (let q = 1; q < cnt; ++q) {\n      // each group on its own\n      const id = sgmapback[q]\n      const sgroup = this.molecule!.sgroups.get(id)!\n      this.write('M  STY')\n      this.writePaddedNumber(1, 3)\n      this.writeWhiteSpace(1)\n      this.writePaddedNumber(q, 3)\n      this.writeWhiteSpace(1)\n      this.writePadded(sgroup.type, 3)\n      this.writeCR()\n\n      // TODO: write subtype, M SST\n\n      this.write('M  SLB')\n      this.writePaddedNumber(1, 3)\n      this.writeWhiteSpace(1)\n      this.writePaddedNumber(q, 3)\n      this.writeWhiteSpace(1)\n      this.writePaddedNumber(q, 3)\n      this.writeCR()\n\n      const parentId = this.molecule!.sGroupForest.parent.get(id)!\n      if (parentId >= 0) {\n        this.write('M  SPL')\n        this.writePaddedNumber(1, 3)\n        this.writeWhiteSpace(1)\n        this.writePaddedNumber(q, 3)\n        this.writeWhiteSpace(1)\n        this.writePaddedNumber(sgmap[parentId], 3)\n        this.writeCR()\n      }\n\n      // connectivity\n      if (sgroup.type === 'SRU' && sgroup.data.connectivity) {\n        const connectivity = ` ${q.toString().padStart(3)} ${(\n          sgroup.data.connectivity || ''\n        ).padEnd(3)}`\n\n        this.write('M  SCN')\n        this.writePaddedNumber(1, 3)\n        this.write(connectivity.toUpperCase())\n        this.writeCR()\n      }\n\n      if (sgroup.type === 'SRU') {\n        this.write('M  SMT ')\n        this.writePaddedNumber(q, 3)\n        this.writeWhiteSpace()\n        this.write(sgroup.data.subscript || 'n')\n        this.writeCR()\n      }\n\n      this.writeCR(\n        common.saveToMolfile[sgroup.type](\n          sgroup,\n          this.molecule,\n          sgmap,\n          this.mapping,\n          this.bondMapping\n        )\n      )\n    }\n\n    // TODO: write M  APO\n    // TODO: write M  AAL\n    // TODO: write M  RGP\n    // TODO: write M  LOG\n\n    const expandedGroups: number[] = []\n    this.molecule!.sgroups.forEach((sg) => {\n      if (sg.data.expanded) expandedGroups.push(sg.id + 1)\n    })\n\n    if (expandedGroups.length) {\n      const expandedGroupsLine = `M  SDS EXP  ${\n        expandedGroups.length\n      }   ${expandedGroups.join('   ')}`\n      this.writeCR(expandedGroupsLine)\n    }\n\n    this.writeCR('M  END')\n  }\n\n  private writeAtom(atom, atomLabel: string) {\n    this.writePaddedFloat(atom.pp.x, 10, 4)\n    this.writePaddedFloat(-atom.pp.y, 10, 4)\n    this.writePaddedFloat(atom.pp.z, 10, 4)\n    this.writeWhiteSpace()\n    this.writePadded(atomLabel, 3)\n    this.writePaddedNumber(0, 2)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n\n    if (typeof atom.hCount === 'undefined') {\n      atom.hCount = 0\n    }\n    this.writePaddedNumber(atom.hCount, 3)\n\n    if (typeof atom.stereoCare === 'undefined') {\n      atom.stereoCare = 0\n    }\n    this.writePaddedNumber(atom.stereoCare, 3)\n\n    let number: number\n    if (atom.explicitValence < 0) {\n      number = 0\n    } else if (atom.explicitValence === 0) {\n      number = 15\n    } else {\n      number = atom.explicitValence\n    }\n    this.writePaddedNumber(number, 3)\n\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n\n    if (typeof atom.aam === 'undefined') {\n      atom.aam = 0\n    }\n    this.writePaddedNumber(atom.aam, 3)\n\n    if (typeof atom.invRet === 'undefined') {\n      atom.invRet = 0\n    }\n    this.writePaddedNumber(atom.invRet, 3)\n\n    if (typeof atom.exactChangeFlag === 'undefined') {\n      atom.exactChangeFlag = 0\n    }\n    this.writePaddedNumber(atom.exactChangeFlag, 3)\n\n    this.writeCR()\n  }\n\n  private writeBond(bond) {\n    this.writePaddedNumber(this.mapping[bond.begin], 3)\n    this.writePaddedNumber(this.mapping[bond.end], 3)\n    this.writePaddedNumber(bond.type, 3)\n\n    if (typeof bond.stereo === 'undefined') {\n      bond.stereo = 0\n    }\n    this.writePaddedNumber(bond.stereo, 3)\n\n    this.writePadded(bond.xxx, 3)\n\n    if (typeof bond.topology === 'undefined') {\n      bond.topology = 0\n    }\n    this.writePaddedNumber(bond.topology, 3)\n\n    if (typeof bond.reactingCenterStatus === 'undefined') {\n      bond.reactingCenterStatus = 0\n    }\n    this.writePaddedNumber(bond.reactingCenterStatus, 3)\n\n    this.writeCR()\n  }\n\n  private writeAtomProps(props) {\n    this.write('A  ')\n    this.writePaddedNumber(props.id + 1, 3)\n    this.writeCR()\n    this.writeCR(props.value)\n  }\n\n  private writeAtomPropList(propId: string, values: NumberTuple[]) {\n    while (values.length > 0) {\n      const part: NumberTuple[] = []\n\n      while (values.length > 0 && part.length < 8) {\n        part.push(values[0])\n        values.splice(0, 1)\n      }\n\n      this.write(propId)\n      this.writePaddedNumber(part.length, 3)\n\n      part.forEach((value) => {\n        this.writeWhiteSpace()\n        this.writePaddedNumber(this.mapping[value[0]], 3)\n        this.writeWhiteSpace()\n        this.writePaddedNumber(value[1], 3)\n      })\n\n      this.writeCR()\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { MolSerializerOptions } from './mol.types'\nimport { Molfile } from './molfile'\nimport { Serializer } from '../serializers.types'\nimport { Struct } from 'domain/entities'\n\nexport class MolSerializer implements Serializer<Struct> {\n  static DefaultOptions: MolSerializerOptions = {\n    badHeaderRecover: false,\n    ignoreErrors: false,\n    noRgroups: false,\n    preserveIndigoDesc: false,\n    reactionRelayout: false\n  }\n\n  readonly options: MolSerializerOptions\n\n  constructor(options?: Partial<MolSerializerOptions>) {\n    this.options = { ...MolSerializer.DefaultOptions, ...options }\n  }\n\n  deserialize(content: string): Struct {\n    const molfile = new Molfile()\n    const lines = content?.split(/\\r\\n|[\\n\\r]/g)\n\n    const parseCTFileParams = {\n      molfileLines: lines,\n      shouldReactionRelayout: this.options.reactionRelayout,\n      ignoreChiralFlag: this.options.ignoreChiralFlag\n    }\n\n    try {\n      return molfile.parseCTFile(parseCTFileParams)\n    } catch (ex) {\n      if (this.options.badHeaderRecover) {\n        try {\n          // check whether there's an extra empty line on top\n          // this often happens when molfile text is pasted into the dialog window\n          return molfile.parseCTFile({\n            ...parseCTFileParams,\n            molfileLines: lines.slice(1)\n          })\n        } catch (ex1) {\n          //\n        }\n        try {\n          // check for a missing first line\n          // this sometimes happens when pasting\n          return molfile.parseCTFile({\n            ...parseCTFileParams,\n            molfileLines: [''].concat(lines)\n          })\n        } catch (ex2) {\n          //\n        }\n      }\n      throw ex\n    }\n  }\n\n  serialize(struct: Struct): string {\n    return new Molfile().saveMolecule(\n      struct,\n      this.options.ignoreErrors,\n      this.options.noRgroups,\n      this.options.preserveIndigoDesc,\n      this.options.ignoreChiralFlag\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Pool, Vec2 } from 'domain/entities'\n\nfunction CisTrans(mol, neighborsFunc, context) {\n  this.molecule = mol\n  this.bonds = new Pool()\n  this.getNeighbors = neighborsFunc\n  this.context = context\n}\n\nCisTrans.PARITY = {\n  NONE: 0,\n  CIS: 1,\n  TRANS: 2\n}\n\nCisTrans.prototype.each = function (func) {\n  this.bonds.forEach(func)\n}\n\nCisTrans.prototype.getParity = function (idx) {\n  return this.bonds.get(idx).parity\n}\n\nCisTrans.prototype.getSubstituents = function (idx) {\n  return this.bonds.get(idx).substituents\n}\n\nCisTrans.prototype.sameside = function (beg, end, neiBeg, neiEnd) {\n  const diff = Vec2.diff(beg, end)\n  const norm = new Vec2(-diff.y, diff.x)\n\n  if (!norm.normalize()) return 0\n\n  const normBeg = Vec2.diff(neiBeg, beg)\n  const normEnd = Vec2.diff(neiEnd, end)\n\n  if (!normBeg.normalize()) return 0\n  if (!normEnd.normalize()) return 0\n\n  const prodBeg = Vec2.dot(normBeg, norm)\n  const prodEnd = Vec2.dot(normEnd, norm)\n\n  if (Math.abs(prodBeg) < 0.001 || Math.abs(prodEnd) < 0.001) return 0\n\n  return prodBeg * prodEnd > 0 ? 1 : -1\n}\n\nCisTrans.prototype.samesides = function (iBeg, iEnd, iNeiBeg, iNeiEnd) {\n  return this.sameside(\n    this.molecule.atoms.get(iBeg).pp,\n    this.molecule.atoms.get(iEnd).pp,\n    this.molecule.atoms.get(iNeiBeg).pp,\n    this.molecule.atoms.get(iNeiEnd).pp\n  )\n}\n\nCisTrans.prototype.sortSubstituents = function (substituents) {\n  // eslint-disable-line max-statements\n  const h0 = this.molecule.atoms.get(substituents[0]).pureHydrogen()\n  const h1 =\n    substituents[1] < 0 ||\n    this.molecule.atoms.get(substituents[1]).pureHydrogen()\n  const h2 = this.molecule.atoms.get(substituents[2]).pureHydrogen()\n  const h3 =\n    substituents[3] < 0 ||\n    this.molecule.atoms.get(substituents[3]).pureHydrogen()\n\n  if (h0 && h1) return false\n  if (h2 && h3) return false\n\n  if (h1) {\n    substituents[1] = -1\n  } else if (h0) {\n    substituents[0] = substituents[1]\n    substituents[1] = -1\n  } else if (substituents[0] > substituents[1]) {\n    swap(substituents, 0, 1)\n  }\n\n  if (h3) {\n    substituents[3] = -1\n  } else if (h2) {\n    substituents[2] = substituents[3]\n    substituents[3] = -1\n  } else if (substituents[2] > substituents[3]) {\n    swap(substituents, 2, 3)\n  }\n\n  return true\n}\n\nCisTrans.prototype.isGeomStereoBond = function (bondIdx, substituents) {\n  // eslint-disable-line max-statements\n  // it must be [C,N,Si]=[C,N,Si] bond\n  const bond = this.molecule.bonds.get(bondIdx)\n\n  if (bond.type !== Bond.PATTERN.TYPE.DOUBLE) return false\n\n  const label1 = this.molecule.atoms.get(bond.begin).label\n  const label2 = this.molecule.atoms.get(bond.end).label\n\n  if (label1 !== 'C' && label1 !== 'N' && label1 !== 'Si' && label1 !== 'Ge') {\n    return false\n  }\n  if (label2 !== 'C' && label2 !== 'N' && label2 !== 'Si' && label2 !== 'Ge') {\n    return false\n  }\n\n  // the atoms should have 1 or 2 single bonds\n  // (apart from the double bond under consideration)\n  const neiBegin = this.getNeighbors.call(this.context, bond.begin)\n  const neiEnd = this.getNeighbors.call(this.context, bond.end)\n\n  if (\n    neiBegin.length < 2 ||\n    neiBegin.length > 3 ||\n    neiEnd.length < 2 ||\n    neiEnd.length > 3\n  ) {\n    return false\n  }\n\n  substituents[0] = -1\n  substituents[1] = -1\n  substituents[2] = -1\n  substituents[3] = -1\n\n  let i\n  let nei\n\n  for (i = 0; i < neiBegin.length; i++) {\n    nei = neiBegin[i]\n\n    if (nei.bid === bondIdx) continue // eslint-disable-line no-continue\n\n    if (this.molecule.bonds.get(nei.bid).type !== Bond.PATTERN.TYPE.SINGLE) {\n      return false\n    }\n\n    if (substituents[0] === -1) substituents[0] = nei.aid\n    // (substituents[1] === -1)\n    else substituents[1] = nei.aid\n  }\n\n  for (i = 0; i < neiEnd.length; i++) {\n    nei = neiEnd[i]\n\n    if (nei.bid === bondIdx) continue // eslint-disable-line no-continue\n\n    if (this.molecule.bonds.get(nei.bid).type !== Bond.PATTERN.TYPE.SINGLE) {\n      return false\n    }\n\n    if (substituents[2] === -1) substituents[2] = nei.aid\n    // (substituents[3] == -1)\n    else substituents[3] = nei.aid\n  }\n\n  if (\n    substituents[1] !== -1 &&\n    this.samesides(bond.begin, bond.end, substituents[0], substituents[1]) !==\n      -1\n  ) {\n    return false\n  }\n  if (\n    substituents[3] !== -1 &&\n    this.samesides(bond.begin, bond.end, substituents[2], substituents[3]) !==\n      -1\n  ) {\n    return false\n  }\n\n  return true\n}\n\nCisTrans.prototype.build = function (excludeBonds) {\n  this.molecule.bonds.forEach((bond, bid) => {\n    const ct = {\n      parity: 0,\n      substituents: []\n    }\n    this.bonds.set(bid, ct)\n\n    if (Array.isArray(excludeBonds) && excludeBonds[bid]) return\n\n    if (!this.isGeomStereoBond(bid, ct.substituents)) return\n\n    if (!this.sortSubstituents(ct.substituents)) return\n\n    const sign = this.samesides(\n      bond.begin,\n      bond.end,\n      ct.substituents[0],\n      ct.substituents[2]\n    )\n\n    if (sign === 1) ct.parity = CisTrans.PARITY.CIS\n    else if (sign === -1) ct.parity = CisTrans.PARITY.TRANS\n  })\n}\n\nfunction swap(arr, i1, i2) {\n  const tmp = arr[i1]\n  arr[i1] = arr[i2]\n  arr[i2] = tmp\n}\n\nexport default CisTrans\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nfunction Dfs(mol, atomData, components, nReactants) {\n  this.molecule = mol\n  this.atom_data = atomData\n  this.components = components\n  this.nComponentsInReactants = -1\n  this.nReactants = nReactants\n\n  this.vertices = new Array(this.molecule.atoms.size) // Minimum size\n  this.molecule.atoms.forEach((atom, aid) => {\n    this.vertices[aid] = new Dfs.VertexDesc()\n  }, this)\n\n  this.edges = new Array(this.molecule.bonds.size) // Minimum size\n  this.molecule.bonds.forEach((bond, bid) => {\n    this.edges[bid] = new Dfs.EdgeDesc()\n  }, this)\n\n  this.v_seq = []\n}\n\nDfs.VertexDesc = function () {\n  this.dfs_state = 0 // 0 -- not on stack\n  // 1 -- on stack\n  // 2 -- removed from stack\n  this.parent_vertex = 0 // parent vertex in DFS tree\n  this.parent_edge = 0 // edge to parent vertex\n  this.branches = 0 // how many DFS branches go out from this vertex}\n}\n\nDfs.EdgeDesc = function () {\n  this.opening_cycles = 0 // how many cycles are\n  // (i) starting with this edge\n  // and (ii) ending in this edge's first vertex\n  this.closing_cycle = 0 // 1 if this edge closes a cycle\n}\n\nDfs.SeqElem = function (vIdx, parVertex, parEdge) {\n  this.idx = vIdx // index of vertex in _graph\n  this.parent_vertex = parVertex // parent vertex in DFS tree\n  this.parent_edge = parEdge // edge to parent vertex\n}\n\nDfs.prototype.walk = function () {\n  // eslint-disable-line max-statements\n  const vStack = []\n  let i, j\n  let cid = 0\n  let component = 0\n\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    if (vStack.length < 1) {\n      let selected = -1\n\n      while (cid < this.components.length && selected === -1) {\n        selected = this.components[cid].find((aid) => {\n          if (this.vertices[aid].dfs_state === 0) {\n            selected = aid\n            return true\n          }\n          return false\n        })\n        if (selected === null) {\n          selected = -1\n          cid++\n        }\n        if (cid === this.nReactants) this.nComponentsInReactants = component\n      }\n      if (selected < -1) {\n        this.molecule.atoms.find((aid) => {\n          if (this.vertices[aid].dfs_state === 0) {\n            selected = aid\n            return true\n          }\n          return false\n        })\n      }\n      if (selected === -1) break\n      this.vertices[selected].parent_vertex = -1\n      this.vertices[selected].parent_edge = -1\n      vStack.push(selected)\n      component++\n    }\n\n    const vIdx = vStack.pop()\n    const parentVertex = this.vertices[vIdx].parent_vertex\n\n    let seqElem = new Dfs.SeqElem(\n      vIdx,\n      parentVertex,\n      this.vertices[vIdx].parent_edge\n    )\n    this.v_seq.push(seqElem)\n\n    this.vertices[vIdx].dfs_state = 2\n\n    const atomD = this.atom_data[vIdx]\n\n    for (i = 0; i < atomD.neighbours.length; i++) {\n      const neiIdx = atomD.neighbours[i].aid\n      const edgeIdx = atomD.neighbours[i].bid\n\n      if (neiIdx === parentVertex) continue // eslint-disable-line no-continue\n\n      if (this.vertices[neiIdx].dfs_state === 2) {\n        this.edges[edgeIdx].closing_cycle = 1\n\n        j = vIdx\n\n        while (j !== -1 && this.vertices[j].parent_vertex !== neiIdx) {\n          j = this.vertices[j].parent_vertex\n        }\n\n        if (j === -1) throw new Error('cycle unwind error')\n\n        this.edges[this.vertices[j].parent_edge].opening_cycles++\n        this.vertices[vIdx].branches++\n\n        seqElem = new Dfs.SeqElem(neiIdx, vIdx, edgeIdx)\n        this.v_seq.push(seqElem)\n      } else {\n        if (this.vertices[neiIdx].dfs_state === 1) {\n          j = vStack.indexOf(neiIdx)\n\n          if (j === -1) {\n            // eslint-disable-line max-depth\n            throw new Error('internal: removing vertex from stack')\n          }\n\n          vStack.splice(j, 1)\n\n          const parent = this.vertices[neiIdx].parent_vertex\n\n          if (parent >= 0) {\n            // eslint-disable-line max-depth\n            this.vertices[parent].branches--\n          }\n        }\n\n        this.vertices[vIdx].branches++\n        this.vertices[neiIdx].parent_vertex = vIdx\n        this.vertices[neiIdx].parent_edge = edgeIdx\n        this.vertices[neiIdx].dfs_state = 1\n        vStack.push(neiIdx)\n      }\n    }\n  }\n}\n\nDfs.prototype.edgeClosingCycle = function (eIdx) {\n  return this.edges[eIdx].closing_cycle !== 0\n}\n\nDfs.prototype.numBranches = function (vIdx) {\n  return this.vertices[vIdx].branches\n}\n\nDfs.prototype.numOpeningCycles = function (eIdx) {\n  return this.edges[eIdx].opening_cycles\n}\n\nDfs.prototype.toString = function () {\n  let str = ''\n  this.v_seq.forEach((seqElem) => {\n    str += seqElem.idx + ' -> '\n  })\n  str += '*'\n  return str\n}\n\nexport default Dfs\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Pile, Pool, Vec2 } from 'domain/entities'\n\nfunction Stereocenters(mol, neighborsFunc, context) {\n  this.molecule = mol\n  this.atoms = new Pool()\n  this.getNeighbors = neighborsFunc\n  this.context = context\n}\n\nStereocenters.prototype.each = function (func, context) {\n  this.atoms.forEach(func, context)\n}\n\nStereocenters.prototype.buildFromBonds = function (\n  /* const int *atom_types, const int *atom_groups, const int *bond_orientations, */ ignoreErrors\n) {\n  const atoms = this.molecule.atoms\n  const bonds = this.molecule.bonds\n\n  /*\n\t\tthis is a set of atoms that are likely to belong to allene structures and\n\t\ttherefore should not be considered as potential stereocenters in the code below,\n\t\tas allenes cannot be encoded in the SMILES notation\n\t*/\n\n  const alleneMask = new Pile()\n  atoms.forEach((atom, aid) => {\n    const neiList = this.getNeighbors.call(this.context, aid)\n    if (neiList.length !== 2) return false\n    const nei1 = neiList[0]\n    const nei2 = neiList[1]\n    // check atom labels\n    if (\n      [aid, nei1.aid, nei2.aid].findIndex(\n        (aid) => ['C', 'Si'].indexOf(atoms.get(aid).label) < 0,\n        this\n      ) >= 0\n    ) {\n      return false\n    }\n\n    // check adjacent bond types\n    if (\n      [nei1.bid, nei2.bid].findIndex(\n        (bid) => bonds.get(bid).type !== Bond.PATTERN.TYPE.DOUBLE,\n        this\n      ) >= 0\n    ) {\n      return false\n    }\n\n    // get the other neighbors of the two adjacent atoms except for the central atom\n    const nei1nei = this.getNeighbors\n      .call(this.context, nei1.aid)\n      .filter((nei) => nei.aid !== aid)\n    const nei2nei = this.getNeighbors\n      .call(this.context, nei2.aid)\n      .filter((nei) => nei.aid !== aid)\n    if (\n      nei1nei.length < 1 ||\n      nei1nei.length > 2 ||\n      nei2nei.length < 1 ||\n      nei2nei.length > 2\n    ) {\n      return false\n    }\n\n    if (\n      nei1nei\n        .concat(nei2nei)\n        .findIndex(\n          (nei) => bonds.get(nei.bid).type !== Bond.PATTERN.TYPE.SINGLE,\n          this\n        ) >= 0\n    ) {\n      return false\n    }\n\n    if (\n      nei1nei\n        .concat(nei2nei)\n        .findIndex(\n          (nei) => bonds.get(nei.bid).stereo === Bond.PATTERN.STEREO.EITHER,\n          this\n        ) >= 0\n    ) {\n      return false\n    }\n    alleneMask.add(nei1.aid).add(nei2.aid)\n    return true\n  })\n\n  if (alleneMask.size > 0) {\n    // TODO: add error handler call\n    // legacy message: This structure may contain allenes, which cannot be represented in the SMILES notation. Relevant stereo-information will be discarded.\n\n    atoms.forEach((atom, aid) => {\n      if (alleneMask.has(aid)) return\n      /*\n      if (atom_types[atom_idx] == 0)\n         continue;\n         */\n      const neiList = this.getNeighbors.call(this.context, aid)\n      let stereocenter = false\n\n      neiList.find(function (nei) {\n        const bond = this.molecule.bonds.get(nei.bid)\n\n        if (bond.type === Bond.PATTERN.TYPE.SINGLE && bond.begin === aid) {\n          if (\n            bond.stereo === Bond.PATTERN.STEREO.UP ||\n            bond.stereo === Bond.PATTERN.STEREO.DOWN\n          ) {\n            stereocenter = true\n            return true\n          }\n        }\n        return false\n      }, this)\n\n      if (!stereocenter) return\n\n      if (ignoreErrors) {\n        this.buildOneCenter(\n          aid /* , atom_groups[atom_idx], atom_types[atom_idx], bond_orientations */\n        )\n      } else {\n        this.buildOneCenter(\n          aid /* , atom_groups[atom_idx], atom_types[atom_idx], bond_orientations */\n        )\n      }\n    })\n  }\n}\n\nStereocenters.allowed_stereocenters = [\n  { elem: 'C', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'C', charge: 0, degree: 4, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'Si', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'Si', charge: 0, degree: 4, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'N', charge: 1, degree: 3, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'N', charge: 1, degree: 4, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'N', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 3 },\n  { elem: 'S', charge: 0, degree: 4, n_double_bonds: 2, implicit_degree: 4 },\n  { elem: 'S', charge: 1, degree: 3, n_double_bonds: 0, implicit_degree: 3 },\n  { elem: 'S', charge: 0, degree: 3, n_double_bonds: 1, implicit_degree: 3 },\n  { elem: 'P', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 3 },\n  { elem: 'P', charge: 1, degree: 4, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'P', charge: 0, degree: 4, n_double_bonds: 1, implicit_degree: 4 }\n]\n\nStereocenters.prototype.buildOneCenter = function (\n  atomIdx /* , int group, int type, const int *bond_orientations */\n) {\n  // eslint-disable-line max-statements\n  const atom = this.molecule.atoms.get(atomIdx)\n\n  const neiList = this.getNeighbors.call(this.context, atomIdx)\n  const degree = neiList.length\n  let implicitDegree = -1\n\n  const stereocenter = {\n    group: 0, // = group;\n    type: 0, // = type;\n    pyramid: []\n  }\n\n  const edgeIds = []\n\n  let lastAtomDir = 0\n  let nDoubleBonds = 0\n\n  stereocenter.pyramid[0] = -1\n  stereocenter.pyramid[1] = -1\n  stereocenter.pyramid[2] = -1\n  stereocenter.pyramid[3] = -1\n\n  let nPureHydrogens = 0\n\n  if (degree > 4) {\n    throw new Error('stereocenter with %d bonds are not supported' + degree)\n  }\n\n  neiList.forEach((nei, neiIdx) => {\n    const neiAtom = this.molecule.atoms.get(nei.aid)\n    const bond = this.molecule.bonds.get(nei.bid)\n    edgeIds[neiIdx] = {\n      edge_idx: nei.bid,\n      nei_idx: nei.aid,\n      rank: nei.aid,\n      vec: Vec2.diff(neiAtom.pp, atom.pp).yComplement()\n    }\n\n    if (neiAtom.pureHydrogen()) {\n      nPureHydrogens++\n      edgeIds[neiIdx].rank = 10000\n    } else if (neiAtom.label === 'H') {\n      edgeIds[neiIdx].rank = 5000\n    }\n\n    if (!edgeIds[neiIdx].vec.normalize()) throw new Error('zero bond length')\n\n    if (bond.type === Bond.PATTERN.TYPE.TRIPLE) {\n      throw new Error('non-single bonds not allowed near stereocenter')\n    } else if (bond.type === Bond.PATTERN.TYPE.AROMATIC) {\n      throw new Error('aromatic bonds not allowed near stereocenter')\n    } else if (bond.type === Bond.PATTERN.TYPE.DOUBLE) nDoubleBonds++\n  })\n\n  Stereocenters.allowed_stereocenters.find((as) => {\n    if (\n      as.elem === atom.label &&\n      as.charge === atom.charge &&\n      as.degree === degree &&\n      as.n_double_bonds === nDoubleBonds\n    ) {\n      implicitDegree = as.implicit_degree\n      return true\n    }\n    return false\n  })\n\n  if (implicitDegree === -1) {\n    throw new Error(\n      'unknown stereocenter configuration: ' +\n        atom.label +\n        ', charge ' +\n        atom.charge +\n        ', ' +\n        degree +\n        ' bonds (' +\n        nDoubleBonds +\n        ' double)'\n    )\n  }\n\n  if (degree === 4 && nPureHydrogens > 1) {\n    throw new Error(nPureHydrogens + ' hydrogens near stereocenter')\n  }\n\n  if (degree === 3 && implicitDegree === 4 && nPureHydrogens > 0) {\n    throw new Error(\n      'have hydrogen(s) besides implicit hydrogen near stereocenter'\n    )\n  }\n\n  if (degree === 4) {\n    // sort by neighbor atom index (ascending)\n    if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1)\n    if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2)\n    if (edgeIds[2].rank > edgeIds[3].rank) swap(edgeIds, 2, 3)\n    if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2)\n    if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1)\n    if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2)\n\n    var main1 = -1\n    let main2 = -1\n    var side1 = -1\n    var side2 = -1\n    var mainDir = 0\n\n    for (var neiIdx = 0; neiIdx < 4; neiIdx++) {\n      const stereo = this.getBondStereo(atomIdx, edgeIds[neiIdx].edge_idx)\n\n      if (\n        stereo === Bond.PATTERN.STEREO.UP ||\n        stereo === Bond.PATTERN.STEREO.DOWN\n      ) {\n        main1 = neiIdx\n        mainDir = stereo\n        break\n      }\n    }\n\n    if (main1 === -1) {\n      throw new Error('none of 4 bonds going from stereocenter is stereobond')\n    }\n\n    let xyz1, xyz2\n\n    // find main2 as opposite to main1\n    if (main2 === -1) {\n      xyz1 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 1) % 4].vec,\n        edgeIds[(main1 + 2) % 4].vec\n      )\n      xyz2 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 1) % 4].vec,\n        edgeIds[(main1 + 3) % 4].vec\n      )\n\n      if (xyz1 + xyz2 === 3 || xyz1 + xyz2 === 12) {\n        main2 = (main1 + 1) % 4\n        side1 = (main1 + 2) % 4\n        side2 = (main1 + 3) % 4\n      }\n    }\n    if (main2 === -1) {\n      xyz1 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 2) % 4].vec,\n        edgeIds[(main1 + 1) % 4].vec\n      )\n      xyz2 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 2) % 4].vec,\n        edgeIds[(main1 + 3) % 4].vec\n      )\n\n      if (xyz1 + xyz2 === 3 || xyz1 + xyz2 === 12) {\n        main2 = (main1 + 2) % 4\n        side1 = (main1 + 1) % 4\n        side2 = (main1 + 3) % 4\n      }\n    }\n    if (main2 === -1) {\n      xyz1 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 3) % 4].vec,\n        edgeIds[(main1 + 1) % 4].vec\n      )\n      xyz2 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 3) % 4].vec,\n        edgeIds[(main1 + 2) % 4].vec\n      )\n\n      if (xyz1 + xyz2 === 3 || xyz1 + xyz2 === 12) {\n        main2 = (main1 + 3) % 4\n        side1 = (main1 + 2) % 4\n        side2 = (main1 + 1) % 4\n      }\n    }\n\n    if (main2 === -1) {\n      throw new Error('internal error: can not find opposite bond')\n    }\n\n    if (\n      mainDir === Bond.PATTERN.STEREO.UP &&\n      this.getBondStereo(atomIdx, edgeIds[main2].edge_idx) ===\n        Bond.PATTERN.STEREO.DOWN\n    ) {\n      throw new Error('stereo types of the opposite bonds mismatch')\n    }\n    if (\n      mainDir === Bond.PATTERN.STEREO.DOWN &&\n      this.getBondStereo(atomIdx, edgeIds[main2].edge_idx) ===\n        Bond.PATTERN.STEREO.UP\n    ) {\n      throw new Error('stereo types of the opposite bonds mismatch')\n    }\n\n    if (mainDir === this.getBondStereo(atomIdx, edgeIds[side1].edge_idx)) {\n      throw new Error('stereo types of non-opposite bonds match')\n    }\n    if (mainDir === this.getBondStereo(atomIdx, edgeIds[side2].edge_idx)) {\n      throw new Error('stereo types of non-opposite bonds match')\n    }\n\n    if (main1 === 3 || main2 === 3) lastAtomDir = mainDir\n    else {\n      lastAtomDir =\n        mainDir === Bond.PATTERN.STEREO.UP\n          ? Bond.PATTERN.STEREO.DOWN\n          : Bond.PATTERN.STEREO.UP\n    }\n\n    const sign = Stereocenters.sign(\n      edgeIds[0].vec,\n      edgeIds[1].vec,\n      edgeIds[2].vec\n    )\n\n    if (\n      (lastAtomDir === Bond.PATTERN.STEREO.UP && sign > 0) ||\n      (lastAtomDir === Bond.PATTERN.STEREO.DOWN && sign < 0)\n    ) {\n      stereocenter.pyramid[0] = edgeIds[0].nei_idx\n      stereocenter.pyramid[1] = edgeIds[1].nei_idx\n      stereocenter.pyramid[2] = edgeIds[2].nei_idx\n    } else {\n      stereocenter.pyramid[0] = edgeIds[0].nei_idx\n      stereocenter.pyramid[1] = edgeIds[2].nei_idx\n      stereocenter.pyramid[2] = edgeIds[1].nei_idx\n    }\n\n    stereocenter.pyramid[3] = edgeIds[3].nei_idx\n  } else if (degree === 3) {\n    // sort by neighbor atom index (ascending)\n    if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1)\n    if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2)\n    if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1)\n\n    const stereo0 = this.getBondStereo(atomIdx, edgeIds[0].edge_idx)\n    const stereo1 = this.getBondStereo(atomIdx, edgeIds[1].edge_idx)\n    const stereo2 = this.getBondStereo(atomIdx, edgeIds[2].edge_idx)\n\n    let nUp = 0\n    let nDown = 0\n\n    nUp += stereo0 === Bond.PATTERN.STEREO.UP ? 1 : 0\n    nUp += stereo1 === Bond.PATTERN.STEREO.UP ? 1 : 0\n    nUp += stereo2 === Bond.PATTERN.STEREO.UP ? 1 : 0\n\n    nDown += stereo0 === Bond.PATTERN.STEREO.DOWN ? 1 : 0\n    nDown += stereo1 === Bond.PATTERN.STEREO.DOWN ? 1 : 0\n    nDown += stereo2 === Bond.PATTERN.STEREO.DOWN ? 1 : 0\n\n    if (implicitDegree === 4) {\n      // have implicit hydrogen\n      if (nUp === 3) throw new Error('all 3 bonds up near stereoatom')\n      if (nDown === 3) throw new Error('all 3 bonds down near stereoatom')\n\n      if (nUp === 0 && nDown === 0) {\n        throw new Error('no up/down bonds near stereoatom -- indefinite case')\n      }\n      if (nUp === 1 && nDown === 1) {\n        throw new Error('one bond up, one bond down -- indefinite case')\n      }\n\n      mainDir = 0\n\n      if (nUp === 2) {\n        lastAtomDir = Bond.PATTERN.STEREO.DOWN\n      } else if (nDown === 2) {\n        lastAtomDir = Bond.PATTERN.STEREO.UP\n      } else {\n        main1 = -1\n        side1 = -1\n        side2 = -1\n\n        for (neiIdx = 0; neiIdx < 3; neiIdx++) {\n          const dir = this.getBondStereo(atomIdx, edgeIds[neiIdx].edge_idx)\n\n          if (\n            dir === Bond.PATTERN.STEREO.UP ||\n            dir === Bond.PATTERN.STEREO.DOWN\n          ) {\n            // eslint-disable-line max-depth\n            main1 = neiIdx\n            mainDir = dir\n            side1 = (neiIdx + 1) % 3\n            side2 = (neiIdx + 2) % 3\n            break\n          }\n        }\n\n        if (main1 === -1) {\n          throw new Error('internal error: can not find up or down bond')\n        }\n\n        const xyz = Stereocenters.xyzzy(\n          edgeIds[side1].vec,\n          edgeIds[side2].vec,\n          edgeIds[main1].vec\n        )\n\n        if (xyz === 3 || xyz === 4) {\n          throw new Error('degenerate case for 3 bonds near stereoatom')\n        }\n\n        if (xyz === 1) lastAtomDir = mainDir\n        else {\n          lastAtomDir =\n            mainDir === Bond.PATTERN.STEREO.UP\n              ? Bond.PATTERN.STEREO.DOWN\n              : Bond.PATTERN.STEREO.UP\n        }\n      }\n\n      const sign = Stereocenters.sign(\n        edgeIds[0].vec,\n        edgeIds[1].vec,\n        edgeIds[2].vec\n      )\n\n      if (\n        (lastAtomDir === Bond.PATTERN.STEREO.UP && sign > 0) ||\n        (lastAtomDir === Bond.PATTERN.STEREO.DOWN && sign < 0)\n      ) {\n        stereocenter.pyramid[0] = edgeIds[0].nei_idx\n        stereocenter.pyramid[1] = edgeIds[1].nei_idx\n        stereocenter.pyramid[2] = edgeIds[2].nei_idx\n      } else {\n        stereocenter.pyramid[0] = edgeIds[0].nei_idx\n        stereocenter.pyramid[1] = edgeIds[2].nei_idx\n        stereocenter.pyramid[2] = edgeIds[1].nei_idx\n      }\n\n      stereocenter.pyramid[3] = -1\n    } else {\n      // 3-connected P, N or S; no implicit hydrogens\n      var dir\n\n      if (nDown > 0 && nUp > 0) {\n        throw new Error('one bond up, one bond down -- indefinite case')\n      } else if (nDown === 0 && nUp === 0) {\n        throw new Error('no up-down bonds attached to stereocenter')\n      } else if (nUp > 0) dir = 1\n      else dir = -1\n\n      if (\n        Stereocenters.xyzzy(edgeIds[0].vec, edgeIds[1].vec, edgeIds[2].vec) ===\n          1 ||\n        Stereocenters.xyzzy(edgeIds[0].vec, edgeIds[2].vec, edgeIds[1].vec) ===\n          1 ||\n        Stereocenters.xyzzy(edgeIds[2].vec, edgeIds[1].vec, edgeIds[0].vec) ===\n          1\n      ) {\n        // all bonds belong to the same half-plane\n        dir = -dir\n      }\n\n      const sign = Stereocenters.sign(\n        edgeIds[0].vec,\n        edgeIds[1].vec,\n        edgeIds[2].vec\n      )\n\n      if (sign === dir) {\n        stereocenter.pyramid[0] = edgeIds[0].nei_idx\n        stereocenter.pyramid[1] = edgeIds[2].nei_idx\n        stereocenter.pyramid[2] = edgeIds[1].nei_idx\n      } else {\n        stereocenter.pyramid[0] = edgeIds[0].nei_idx\n        stereocenter.pyramid[1] = edgeIds[1].nei_idx\n        stereocenter.pyramid[2] = edgeIds[2].nei_idx\n      }\n      stereocenter.pyramid[3] = -1\n    }\n  }\n  this.atoms.set(atomIdx, stereocenter)\n}\n\nStereocenters.prototype.getBondStereo = function (centerIdx, edgeIdx) {\n  const bond = this.molecule.bonds.get(edgeIdx)\n\n  if (centerIdx !== bond.begin) {\n    // TODO: check this\n    return 0\n  }\n\n  return bond.stereo\n}\n\n// 1 -- in the smaller angle, 2 -- in the bigger angle,\n// 4 -- in the 'positive' straight angle, 8 -- in the 'negative' straight angle\nStereocenters.xyzzy = function (v1, v2, u) {\n  const eps = 0.001\n\n  const sine1 = Vec2.cross(v1, v2)\n  const cosine1 = Vec2.dot(v1, v2)\n\n  const sine2 = Vec2.cross(v1, u)\n  const cosine2 = Vec2.dot(v1, u)\n\n  if (Math.abs(sine1) < eps) {\n    if (Math.abs(sine2) < eps) {\n      throw new Error('degenerate case -- bonds overlap')\n    }\n\n    return sine2 > 0 ? 4 : 8\n  }\n\n  if (sine1 * sine2 < -eps * eps) return 2\n\n  if (cosine2 < cosine1) return 2\n\n  return 1\n}\n\nStereocenters.sign = function (v1, v2, v3) {\n  const res = (v1.x - v3.x) * (v2.y - v3.y) - (v1.y - v3.y) * (v2.x - v3.x) // eslint-disable-line no-mixed-operators\n  const eps = 0.001\n\n  if (res > eps) return 1\n  if (res < -eps) return -1\n\n  throw new Error('degenerate triangle')\n}\n\nStereocenters.isPyramidMappingRigid = function (mapping) {\n  const arr = mapping.slice()\n  let rigid = true\n\n  if (arr[0] > arr[1]) {\n    swap(arr, 0, 1)\n    rigid = !rigid\n  }\n  if (arr[1] > arr[2]) {\n    swap(arr, 1, 2)\n    rigid = !rigid\n  }\n  if (arr[2] > arr[3]) {\n    swap(arr, 2, 3)\n    rigid = !rigid\n  }\n  if (arr[1] > arr[2]) {\n    swap(arr, 1, 2)\n    rigid = !rigid\n  }\n  if (arr[0] > arr[1]) {\n    swap(arr, 0, 1)\n    rigid = !rigid\n  }\n  if (arr[1] > arr[2]) {\n    swap(arr, 1, 2)\n    rigid = !rigid\n  }\n\n  return rigid\n}\n\nfunction swap(arr, i1, i2) {\n  const tmp = arr[i1]\n  arr[i1] = arr[i2]\n  arr[i2] = tmp\n}\n\nexport default Stereocenters\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Bond, Pile, SGroup } from 'domain/entities'\n\nimport CisTrans from './cis_trans'\nimport Dfs from './dfs'\nimport Stereocenters from './stereocenters'\n\nexport function Smiles() {\n  this.smiles = ''\n  this.writtenAtoms = []\n  this.writtenComponents = 0\n\n  this.ignoreErrors = false\n}\n\nSmiles._Atom = function (hCount) {\n  // eslint-disable-line no-underscore-dangle\n  this.neighbours = [] // Array of integer pairs {a, b}\n  this.aromatic = false // has aromatic bond\n  this.lowercase = false // aromatic and has to be written lowercase\n  this.chirality = 0 // 0 means no chirality, 1 means CCW pyramid, 2 means CW pyramid\n  this.branch_cnt = 0 // runs from 0 to (branches - 1)\n  this.paren_written = false\n  this.h_count = hCount\n  this.parent = -1\n}\n\n// NB: only loops of length up to 6 are included here\nSmiles.prototype.isBondInRing = function (bid) {\n  return this.inLoop[bid]\n}\n\nSmiles.prototype.saveMolecule = function (struct, ignoreErrors) {\n  // eslint-disable-line max-statements\n  let i, j, k\n\n  if (!ignoreErrors) this.ignoreErrors = ignoreErrors\n\n  // [RB]: KETCHER-498 (Incorrect smile-string for multiple Sgroup)\n  // TODO the fix is temporary, still need to implement error handling/reporting\n  // BEGIN\n  struct = struct.clone(\n    undefined,\n    undefined,\n    !struct.hasRxnArrow(), // make it drop multiple reactions\n    undefined,\n    undefined,\n    undefined\n  )\n  struct.initHalfBonds()\n  struct.initNeighbors()\n  struct.sortNeighbors()\n  struct.setImplicitHydrogen()\n  struct.sgroups.forEach((sg) => {\n    if (sg.type === 'MUL') {\n      try {\n        SGroup.prepareMulForSaving(sg, struct)\n      } catch (ex) {\n        throw Error('Bad s-group (' + ex.message + ')')\n      }\n    }\n    // 'SMILES data format doesn\\'t support s-groups'\n  })\n  // END\n\n  this.atoms = new Array(struct.atoms.size)\n\n  struct.atoms.forEach((atom, aid) => {\n    this.atoms[aid] = new Smiles._Atom(atom.implicitH) // eslint-disable-line no-underscore-dangle\n  })\n\n  // From the SMILES specification:\n  // Please note that only atoms on the following list\n  // can be considered aromatic: C, N, O, P, S, As, Se, and * (wildcard).\n  const allowedLowercase = ['B', 'C', 'N', 'O', 'P', 'S', 'Se', 'As']\n\n  // Detect atoms that have aromatic bonds and count neighbours\n  struct.bonds.forEach((bond, bid) => {\n    if (bond.type === Bond.PATTERN.TYPE.AROMATIC) {\n      this.atoms[bond.begin].aromatic = true\n      if (allowedLowercase.indexOf(struct.atoms.get(bond.begin).label) !== -1) {\n        this.atoms[bond.begin].lowercase = true\n      }\n      this.atoms[bond.end].aromatic = true\n      if (allowedLowercase.indexOf(struct.atoms.get(bond.end).label) !== -1) {\n        this.atoms[bond.end].lowercase = true\n      }\n    }\n    this.atoms[bond.begin].neighbours.push({ aid: bond.end, bid })\n    this.atoms[bond.end].neighbours.push({ aid: bond.begin, bid })\n  })\n\n  this.inLoop = (function () {\n    struct.prepareLoopStructure()\n    let bondsInLoops = new Pile()\n    struct.loops.forEach((loop) => {\n      if (loop.hbs.length <= 6) {\n        const hbids = loop.hbs.map((hbid) => struct.halfBonds.get(hbid).bid)\n        bondsInLoops = bondsInLoops.union(new Pile(hbids))\n      }\n    })\n    const inLoop = {}\n    bondsInLoops.forEach((bid) => {\n      inLoop[bid] = 1\n    })\n    return inLoop\n  })()\n\n  this.touchedCistransbonds = 0\n  this.markCisTrans(struct)\n\n  const components = struct.getComponents()\n  const componentsAll = components.reactants.concat(components.products)\n\n  const walk = new Dfs(\n    struct,\n    this.atoms,\n    componentsAll,\n    components.reactants.length\n  )\n\n  walk.walk()\n  this.atoms.forEach((atom) => {\n    atom.neighbours = []\n  })\n\n  // fill up neighbor lists for the stereocenters calculation\n  for (i = 0; i < walk.v_seq.length; i++) {\n    var seqEl = walk.v_seq[i]\n    var vIdx = seqEl.idx\n    var eIdx = seqEl.parent_edge\n    var vPrevIdx = seqEl.parent_vertex\n\n    if (eIdx >= 0) {\n      const atom = this.atoms[vIdx]\n\n      var openingCycles = walk.numOpeningCycles(eIdx)\n\n      for (j = 0; j < openingCycles; j++) {\n        this.atoms[vPrevIdx].neighbours.push({ aid: -1, bid: -1 })\n      }\n\n      if (walk.edgeClosingCycle(eIdx)) {\n        for (k = 0; k < atom.neighbours.length; k++) {\n          if (atom.neighbours[k].aid === -1) {\n            // eslint-disable-line max-depth\n            atom.neighbours[k].aid = vPrevIdx\n            atom.neighbours[k].bid = eIdx\n            break\n          }\n        }\n        if (k === atom.neighbours.length) {\n          throw new Error('internal: can not put closing bond to its place')\n        }\n      } else {\n        atom.neighbours.push({ aid: vPrevIdx, bid: eIdx })\n        atom.parent = vPrevIdx\n      }\n      this.atoms[vPrevIdx].neighbours.push({ aid: vIdx, bid: eIdx })\n    }\n  }\n\n  try {\n    // detect chiral configurations\n    const stereocenters = new Stereocenters(\n      struct,\n      function (idx) {\n        return this.atoms[idx].neighbours\n      },\n      this\n    )\n    stereocenters.buildFromBonds(this.ignoreErrors)\n\n    stereocenters.each((sc, atomIdx) => {\n      // eslint-disable-line max-statements\n      // if (sc.type < MoleculeStereocenters::ATOM_AND)\n      //    continue;\n\n      let implicitHIdx = -1\n\n      if (sc.pyramid[3] === -1) implicitHIdx = 3\n      /*\n\t\t\telse for (j = 0; j < 4; j++)\n\t\t\t\tif (ignored_vertices[pyramid[j]])\n\t\t\t\t{\n\t\t\t\t\timplicit_h_idx = j;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t*/\n\n      const pyramidMapping = []\n      let counter = 0\n\n      const atom = this.atoms[atomIdx]\n\n      if (atom.parent !== -1) {\n        for (k = 0; k < 4; k++) {\n          if (sc.pyramid[k] === atom.parent) {\n            pyramidMapping[counter++] = k\n            break\n          }\n        }\n      }\n\n      if (implicitHIdx !== -1) pyramidMapping[counter++] = implicitHIdx\n\n      for (j = 0; j !== atom.neighbours.length; j++) {\n        if (atom.neighbours[j].aid === atom.parent) continue // eslint-disable-line no-continue\n\n        for (k = 0; k < 4; k++) {\n          if (atom.neighbours[j].aid === sc.pyramid[k]) {\n            if (counter >= 4) throw new Error('internal: pyramid overflow')\n            pyramidMapping[counter++] = k\n            break\n          }\n        }\n      }\n\n      if (counter === 4) {\n        // move the 'from' atom to the end\n        counter = pyramidMapping[0]\n        pyramidMapping[0] = pyramidMapping[1]\n        pyramidMapping[1] = pyramidMapping[2]\n        pyramidMapping[2] = pyramidMapping[3]\n        pyramidMapping[3] = counter\n      } else if (counter !== 3) {\n        throw new Error('cannot calculate chirality')\n      }\n\n      if (Stereocenters.isPyramidMappingRigid(pyramidMapping)) {\n        this.atoms[atomIdx].chirality = 1\n      } else this.atoms[atomIdx].chirality = 2\n    })\n  } catch (ex) {\n    // TODO: add error handler call\n  }\n\n  // write the SMILES itself\n\n  // cycle_numbers[i] == -1 means that the number is available\n  // cycle_numbers[i] == n means that the number is used by vertex n\n  const cycleNumbers = []\n\n  cycleNumbers.push(0) // never used\n\n  let firstComponent = true\n\n  for (i = 0; i < walk.v_seq.length; i++) {\n    seqEl = walk.v_seq[i]\n    vIdx = seqEl.idx\n    eIdx = seqEl.parent_edge\n    vPrevIdx = seqEl.parent_vertex\n    let writeAtom = true\n\n    if (vPrevIdx >= 0) {\n      if (walk.numBranches(vPrevIdx) > 1) {\n        if (\n          this.atoms[vPrevIdx].branch_cnt > 0 &&\n          this.atoms[vPrevIdx].paren_written\n        ) {\n          this.smiles += ')'\n        }\n      }\n\n      openingCycles = walk.numOpeningCycles(eIdx)\n\n      for (j = 0; j < openingCycles; j++) {\n        for (k = 1; k < cycleNumbers.length; k++) {\n          if (cycleNumbers[k] === -1) {\n            // eslint-disable-line max-depth\n            break\n          }\n        }\n        if (k === cycleNumbers.length) cycleNumbers.push(vPrevIdx)\n        else cycleNumbers[k] = vPrevIdx\n\n        this.writeCycleNumber(k)\n      }\n\n      if (vPrevIdx >= 0) {\n        const branches = walk.numBranches(vPrevIdx)\n\n        if (branches > 1 && this.atoms[vPrevIdx].branch_cnt < branches - 1) {\n          if (walk.edgeClosingCycle(eIdx)) {\n            // eslint-disable-line max-depth\n            this.atoms[vPrevIdx].paren_written = false\n          } else {\n            this.smiles += '('\n            this.atoms[vPrevIdx].paren_written = true\n          }\n        }\n\n        this.atoms[vPrevIdx].branch_cnt++\n\n        if (this.atoms[vPrevIdx].branch_cnt > branches) {\n          throw new Error('unexpected branch')\n        }\n      }\n\n      const bond = struct.bonds.get(eIdx)\n\n      let dir = 0\n\n      if (bond.type === Bond.PATTERN.TYPE.SINGLE) {\n        dir = this.calcBondDirection(struct, eIdx, vPrevIdx)\n      }\n\n      if (\n        (dir === 1 && vIdx === bond.end) ||\n        (dir === 2 && vIdx === bond.begin)\n      ) {\n        this.smiles += '/'\n      } else if (\n        (dir === 2 && vIdx === bond.end) ||\n        (dir === 1 && vIdx === bond.begin)\n      ) {\n        this.smiles += '\\\\'\n      } else if (bond.type === Bond.PATTERN.TYPE.ANY) {\n        this.smiles += '~'\n      } else if (bond.type === Bond.PATTERN.TYPE.DOUBLE) {\n        this.smiles += '='\n      } else if (bond.type === Bond.PATTERN.TYPE.TRIPLE) {\n        this.smiles += '#'\n      } else if (bond.type === Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC) {\n        this.smiles += '-,:'\n      } else if (bond.type === Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC) {\n        this.smiles += '=,:'\n      } else if (bond.type === Bond.PATTERN.TYPE.SINGLE_OR_DOUBLE) {\n        this.smiles += '-,='\n      } else if (\n        bond.type === Bond.PATTERN.TYPE.AROMATIC &&\n        (!this.atoms[bond.begin].lowercase ||\n          !this.atoms[bond.end].lowercase ||\n          !this.isBondInRing(eIdx))\n      ) {\n        this.smiles += ':'\n      }\n      // TODO: Check if this : is needed\n      else if (\n        bond.type === Bond.PATTERN.TYPE.SINGLE &&\n        this.atoms[bond.begin].aromatic &&\n        this.atoms[bond.end].aromatic\n      ) {\n        this.smiles += '-'\n      }\n\n      if (walk.edgeClosingCycle(eIdx)) {\n        for (j = 1; j < cycleNumbers.length; j++) {\n          if (cycleNumbers[j] === vIdx) break\n        }\n\n        if (j === cycleNumbers.length) throw new Error('cycle number not found')\n\n        this.writeCycleNumber(j)\n\n        cycleNumbers[j] = -1\n        writeAtom = false\n      }\n    } else {\n      if (!firstComponent) {\n        this.smiles +=\n          this.writtenComponents === walk.nComponentsInReactants &&\n          walk.nReactants !== 0\n            ? '>>'\n            : '.' // when walk.nReactants === 0 - not reaction\n      }\n      firstComponent = false\n      this.writtenComponents++\n    }\n    if (writeAtom) {\n      this.writeAtom(\n        struct,\n        vIdx,\n        this.atoms[vIdx].aromatic,\n        this.atoms[vIdx].lowercase,\n        this.atoms[vIdx].chirality\n      )\n      this.writtenAtoms.push(seqEl.idx)\n    }\n  }\n\n  this.comma = false\n\n  // this._writeStereogroups(mol, atoms);\n  this.writeRadicals(struct)\n  // this._writePseudoAtoms(mol);\n  // this._writeHighlighting();\n\n  if (this.comma) this.smiles += '|'\n\n  return this.smiles\n}\n\nSmiles.prototype.writeCycleNumber = function (n) {\n  if (n > 0 && n < 10) this.smiles += n\n  else if (n >= 10 && n < 100) this.smiles += '%' + n\n  else if (n >= 100 && n < 1000) this.smiles += '%%' + n\n  else throw new Error('bad cycle number: ' + n)\n}\n\nSmiles.prototype.writeAtom = function (\n  mol,\n  idx,\n  aromatic,\n  lowercase,\n  chirality\n) {\n  // eslint-disable-line max-params, max-statements\n  const atom = mol.atoms.get(idx)\n  let needBrackets = false\n  let hydro = -1\n  let aam = 0\n\n  /*\n\tif (mol.haveQueryAtoms())\n\t{\n\t  query_atom = &mol.getQueryAtom(idx);\n\n\t  if (query_atom->type == QUERY_ATOM_RGROUP)\n\t  {\n\t\t if (mol.getRGroups()->isRGroupAtom(idx))\n\t\t {\n\t\t\tconst Array<int> &rg = mol.getRGroups()->getSiteRGroups(idx);\n\n\t\t\tif (rg.length != 1)\n\t\t\t   throw Error(\"rgroup count %d\", rg.length);\n\n\t\t\t_output.printf(\"[&%d]\", rg[0] + 1);\n\t\t }\n\t\t else\n\t\t\t_output.printf(\"[&%d]\", 1);\n\n\t\t return;\n\t  }\n\t}\n\t*/\n\n  if (atom.label === 'A') {\n    this.smiles += '*'\n    return\n  }\n\n  if (atom.label === 'R' || atom.label === 'R#') {\n    this.smiles += '[*]'\n    return\n  }\n\n  // KETCHER-598 (Ketcher does not save AAM into reaction SMILES)\n  // BEGIN\n  //    if (this.atom_atom_mapping)\n  //        aam = atom_atom_mapping[idx];\n  aam = atom.aam\n  // END\n\n  if (\n    atom.label !== 'C' &&\n    atom.label !== 'P' &&\n    atom.label !== 'N' &&\n    atom.label !== 'S' &&\n    atom.label !== 'O' &&\n    atom.label !== 'Cl' &&\n    atom.label !== 'F' &&\n    atom.label !== 'Br' &&\n    atom.label !== 'B' &&\n    atom.label !== 'I'\n  ) {\n    needBrackets = true\n  }\n\n  if (\n    atom.explicitValence >= 0 ||\n    atom.radical !== 0 ||\n    chirality > 0 ||\n    (aromatic && atom.label !== 'C' && atom.label !== 'O') ||\n    (aromatic &&\n      atom.label === 'C' &&\n      this.atoms[idx].neighbours.length < 3 &&\n      this.atoms[idx].h_count === 0)\n  ) {\n    hydro = this.atoms[idx].h_count\n  }\n\n  let label = atom.label\n  if (atom.atomList && !atom.atomList.notList) {\n    label = atom.atomList.label()\n    needBrackets = false // atom list label already has brackets\n  } else if (atom.isPseudo() || (atom.atomList && atom.atomList.notList)) {\n    label = '*'\n    needBrackets = false\n  } else if (\n    chirality ||\n    atom.charge !== 0 ||\n    atom.isotope > 0 ||\n    hydro >= 0 ||\n    aam > 0\n  ) {\n    needBrackets = true\n  }\n\n  if (needBrackets) {\n    if (hydro === -1) hydro = this.atoms[idx].h_count\n    this.smiles += '['\n  }\n\n  if (atom.isotope > 0) this.smiles += atom.isotope\n\n  if (lowercase) this.smiles += label.toLowerCase()\n  else this.smiles += label\n\n  if (chirality > 0) {\n    if (chirality === 1) this.smiles += '@'\n    // chirality == 2\n    else this.smiles += '@@'\n\n    if (atom.implicitH > 1) {\n      throw new Error(atom.implicitH + ' implicit H near stereocenter')\n    }\n  }\n\n  if (atom.label !== 'H') {\n    if (hydro > 1 || (hydro === 0 && !needBrackets)) this.smiles += 'H' + hydro\n    else if (hydro === 1) this.smiles += 'H'\n  }\n\n  if (atom.charge > 1) this.smiles += '+' + atom.charge\n  else if (atom.charge < -1) this.smiles += atom.charge\n  else if (atom.charge === 1) this.smiles += '+'\n  else if (atom.charge === -1) this.smiles += '-'\n\n  if (aam > 0) this.smiles += ':' + aam\n\n  if (needBrackets) this.smiles += ']'\n\n  /*\n\tif (mol.getRGroupFragment() != 0)\n\t{\n\t  for (i = 0; i < 2; i++)\n\t  {\n\t\t int j;\n\n\t\t for (j = 0; mol.getRGroupFragment()->getAttachmentPoint(i, j) != -1; j++)\n\t\t\tif (idx == mol.getRGroupFragment()->getAttachmentPoint(i, j))\n\t\t\t{\n\t\t\t   _output.printf(\"([*])\");\n\t\t\t   break;\n\t\t\t}\n\n\t\t if (mol.getRGroupFragment()->getAttachmentPoint(i, j) != -1)\n\t\t\tbreak;\n\t  }\n\t}\n\t*/\n}\n\nSmiles.prototype.markCisTrans = function (mol) {\n  this.cis_trans = new CisTrans(\n    mol,\n    function (idx) {\n      return this.atoms[idx].neighbours\n    },\n    this\n  )\n  this.cis_trans.build()\n  this.dbonds = new Array(mol.bonds.size)\n\n  mol.bonds.forEach((bond, bid) => {\n    this.dbonds[bid] = {\n      ctbond_beg: -1,\n      ctbond_end: -1,\n      saved: 0\n    }\n  })\n\n  this.cis_trans.each((ct, bid) => {\n    const bond = mol.bonds.get(bid)\n\n    if (ct.parity !== 0 && !this.isBondInRing(bid)) {\n      const neiBeg = this.atoms[bond.begin].neighbours\n      const neiEnd = this.atoms[bond.end].neighbours\n      let aromFailBeg = true\n      let aromFailEnd = true\n\n      neiBeg.forEach((nei) => {\n        if (\n          nei.bid !== bid &&\n          mol.bonds.get(nei.bid).type === Bond.PATTERN.TYPE.SINGLE\n        ) {\n          aromFailBeg = false\n        }\n      })\n\n      neiEnd.forEach((nei) => {\n        if (\n          nei.bid !== bid &&\n          mol.bonds.get(nei.bid).type === Bond.PATTERN.TYPE.SINGLE\n        ) {\n          aromFailEnd = false\n        }\n      })\n\n      if (aromFailBeg || aromFailEnd) return\n\n      neiBeg.forEach((nei) => {\n        if (nei.bid === bid) return\n        if (mol.bonds.get(nei.bid).begin === bond.begin) {\n          this.dbonds[nei.bid].ctbond_beg = bid\n        } else this.dbonds[nei.bid].ctbond_end = bid\n      })\n\n      neiEnd.forEach((nei) => {\n        if (nei.bid === bid) return\n        if (mol.bonds.get(nei.bid).begin === bond.end) {\n          this.dbonds[nei.bid].ctbond_beg = bid\n        } else this.dbonds[nei.bid].ctbond_end = bid\n      })\n    }\n  })\n}\n\nSmiles.prototype.updateSideBonds = function (mol, bondIdx) {\n  // eslint-disable-line max-statements\n  const bond = mol.bonds.get(bondIdx)\n  const subst = this.cis_trans.getSubstituents(bondIdx)\n  const parity = this.cis_trans.getParity(bondIdx)\n\n  const sidebonds = [-1, -1, -1, -1]\n\n  sidebonds[0] = mol.findBondId(subst[0], bond.begin)\n  if (subst[1] !== -1) sidebonds[1] = mol.findBondId(subst[1], bond.begin)\n\n  sidebonds[2] = mol.findBondId(subst[2], bond.end)\n  if (subst[3] !== -1) sidebonds[3] = mol.findBondId(subst[3], bond.end)\n\n  let n1 = 0\n  let n2 = 0\n  let n3 = 0\n  let n4 = 0\n\n  if (this.dbonds[sidebonds[0]].saved !== 0) {\n    if (\n      (this.dbonds[sidebonds[0]].saved === 1 &&\n        mol.bonds.get(sidebonds[0]).begin === bond.begin) ||\n      (this.dbonds[sidebonds[0]].saved === 2 &&\n        mol.bonds.get(sidebonds[0]).end === bond.begin)\n    ) {\n      n1++\n    } else n2++\n  }\n  if (sidebonds[1] !== -1 && this.dbonds[sidebonds[1]].saved !== 0) {\n    if (\n      (this.dbonds[sidebonds[1]].saved === 2 &&\n        mol.bonds.get(sidebonds[1]).begin === bond.begin) ||\n      (this.dbonds[sidebonds[1]].saved === 1 &&\n        mol.bonds.get(sidebonds[1]).end === bond.begin)\n    ) {\n      n1++\n    } else n2++\n  }\n  if (this.dbonds[sidebonds[2]].saved !== 0) {\n    if (\n      (this.dbonds[sidebonds[2]].saved === 1 &&\n        mol.bonds.get(sidebonds[2]).begin === bond.end) ||\n      (this.dbonds[sidebonds[2]].saved === 2 &&\n        mol.bonds.get(sidebonds[2]).end === bond.end)\n    ) {\n      n3++\n    } else n4++\n  }\n  if (sidebonds[3] !== -1 && this.dbonds[sidebonds[3]].saved !== 0) {\n    if (\n      (this.dbonds[sidebonds[3]].saved === 2 &&\n        mol.bonds.get(sidebonds[3]).begin === bond.end) ||\n      (this.dbonds[sidebonds[3]].saved === 1 &&\n        mol.bonds.get(sidebonds[3]).end === bond.end)\n    ) {\n      n3++\n    } else n4++\n  }\n\n  if (parity === CisTrans.PARITY.CIS) {\n    n1 += n3\n    n2 += n4\n  } else {\n    n1 += n4\n    n2 += n3\n  }\n\n  if (n1 > 0 && n2 > 0) throw new Error('incompatible cis-trans configuration')\n\n  if (n1 === 0 && n2 === 0) return false\n\n  if (n1 > 0) {\n    this.dbonds[sidebonds[0]].saved =\n      mol.bonds.get(sidebonds[0]).begin === bond.begin ? 1 : 2\n    if (sidebonds[1] !== -1) {\n      this.dbonds[sidebonds[1]].saved =\n        mol.bonds.get(sidebonds[1]).begin === bond.begin ? 2 : 1\n    }\n\n    this.dbonds[sidebonds[2]].saved =\n      (mol.bonds.get(sidebonds[2]).begin === bond.end) ===\n      (parity === CisTrans.PARITY.CIS)\n        ? 1\n        : 2\n    if (sidebonds[3] !== -1) {\n      this.dbonds[sidebonds[3]].saved =\n        (mol.bonds.get(sidebonds[3]).begin === bond.end) ===\n        (parity === CisTrans.PARITY.CIS)\n          ? 2\n          : 1\n    }\n  }\n  if (n2 > 0) {\n    this.dbonds[sidebonds[0]].saved =\n      mol.bonds.get(sidebonds[0]).begin === bond.begin ? 2 : 1\n    if (sidebonds[1] !== -1) {\n      this.dbonds[sidebonds[1]].saved =\n        mol.bonds.get(sidebonds[1]).begin === bond.begin ? 1 : 2\n    }\n\n    this.dbonds[sidebonds[2]].saved =\n      (mol.bonds.get(sidebonds[2]).begin === bond.end) ===\n      (parity === CisTrans.PARITY.CIS)\n        ? 2\n        : 1\n    if (sidebonds[3] !== -1) {\n      this.dbonds[sidebonds[3]].saved =\n        (mol.bonds.get(sidebonds[3]).begin === bond.end) ===\n        (parity === CisTrans.PARITY.CIS)\n          ? 1\n          : 2\n    }\n  }\n\n  return true\n}\n\nSmiles.prototype.calcBondDirection = function (mol, idx, vprev) {\n  let ntouched\n\n  if (\n    this.dbonds[idx].ctbond_beg === -1 &&\n    this.dbonds[idx].ctbond_end === -1\n  ) {\n    return 0\n  }\n\n  if (mol.bonds.get(idx).type !== Bond.PATTERN.TYPE.SINGLE) {\n    throw new Error('internal: directed bond type ' + mol.bonds.get(idx).type)\n  }\n\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    ntouched = 0\n    this.cis_trans.each((ct, bid) => {\n      if (ct.parity !== 0 && !this.isBondInRing(bid)) {\n        if (this.updateSideBonds(mol, bid)) ntouched++\n      }\n    })\n    if (ntouched === this.touchedCistransbonds) break\n    this.touchedCistransbonds = ntouched\n  }\n\n  if (this.dbonds[idx].saved === 0) {\n    if (vprev === mol.bonds.get(idx).begin) this.dbonds[idx].saved = 1\n    else this.dbonds[idx].saved = 2\n  }\n\n  return this.dbonds[idx].saved\n}\n\nSmiles.prototype.writeRadicals = function (mol) {\n  // eslint-disable-line max-statements\n  const marked = new Array(this.writtenAtoms.length)\n  let i, j\n\n  for (i = 0; i < this.writtenAtoms.length; i++) {\n    if (marked[i]) continue // eslint-disable-line no-continue\n\n    const radical = mol.atoms.get(this.writtenAtoms[i]).radical\n\n    if (radical === 0) continue // eslint-disable-line no-continue\n\n    if (this.comma) {\n      this.smiles += ','\n    } else {\n      this.smiles += ' |'\n      this.comma = true\n    }\n\n    if (radical === Atom.PATTERN.RADICAL.SINGLET) this.smiles += '^3:'\n    else if (radical === Atom.PATTERN.RADICAL.DOUPLET) this.smiles += '^1:'\n    // RADICAL_TRIPLET\n    else this.smiles += '^4:'\n\n    this.smiles += i\n\n    for (j = i + 1; j < this.writtenAtoms.length; j++) {\n      if (mol.atoms.get(this.writtenAtoms[j]).radical === radical) {\n        marked[j] = true\n        this.smiles += ',' + j\n      }\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Serializer } from '../serializers.types'\nimport { SmiSerializerOptions } from './smi.types'\nimport { Smiles } from './smiles'\nimport { Struct } from 'domain/entities'\n\nexport class SmiSerializer implements Serializer<Struct> {\n  static DefaultOptions: SmiSerializerOptions = {\n    ignoreErrors: false\n  }\n\n  private readonly options: SmiSerializerOptions\n\n  constructor(options?: Partial<SmiSerializerOptions>) {\n    this.options = { ...SmiSerializer.DefaultOptions, ...options }\n  }\n\n  deserialize(_content: string): Struct {\n    throw new Error('Not implemented yet.')\n  }\n\n  serialize(struct: Struct): string {\n    return new Smiles().saveMolecule(struct, this.options.ignoreErrors)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { SdfItem, StructAssociatedData } from './sdf.types'\n\nimport { MolSerializer } from '../mol/molSerializer'\nimport { Serializer } from '../serializers.types'\n\nconst DelimeterRegex = /^[^]+?\\$\\$\\$\\$$/gm\nexport class SdfSerializer implements Serializer<Array<SdfItem>> {\n  deserialize(content: string): Array<SdfItem> {\n    let m: any\n    const result: Array<SdfItem> = []\n    const molSerializer = new MolSerializer()\n    while ((m = DelimeterRegex.exec(content)) !== null) {\n      const chunk = m[0].replace(/\\r/g, '').trim() // TODO: normalize newline?\n      const end = chunk.indexOf('M  END')\n      if (end !== -1) {\n        const propChunks: any = chunk\n          .substr(end + 7)\n          .trim()\n          .split(/^$\\n?/m)\n\n        const struct = molSerializer.deserialize(chunk.substring(0, end + 6))\n        const props = propChunks.reduce(\n          (acc: StructAssociatedData, pc: string) => {\n            const m = pc.match(/^> [ \\d]*<(\\S+)>/)\n            if (m) {\n              const field = m[1]\n              const value = pc.split('\\n')[1].trim()\n              acc[field] = Number.isFinite(value) ? +value : value.toString() // eslint-disable-line\n            }\n            return acc\n          },\n          {} as StructAssociatedData\n        )\n\n        result.push({ struct, props })\n      }\n    }\n    return result\n  }\n\n  serialize(sdfItems: Array<SdfItem>): string {\n    const molSerializer = new MolSerializer()\n    return sdfItems.reduce((res, item) => {\n      res += molSerializer.serialize(item.struct)\n\n      Object.keys(item.props).forEach((prop) => {\n        res += `> <${prop}>\\n`\n        res += `${item.props[prop]}\\n\\n`\n      })\n\n      return `${res}$$$$\\n`\n    }, '')\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport enum ChemicalMimeType {\n  Mol = 'chemical/x-mdl-molfile',\n  Rxn = 'chemical/x-mdl-rxnfile',\n  DaylightSmiles = 'chemical/x-daylight-smiles',\n  ExtendedSmiles = 'chemical/x-chemaxon-cxsmiles',\n  DaylightSmarts = 'chemical/x-daylight-smarts',\n  InChI = 'chemical/x-inchi',\n  InChIAuxInfo = 'chemical/x-inchi-aux',\n  CDX = 'chemical/x-cdx',\n  CDXML = 'chemical/x-cdxml',\n  CML = 'chemical/x-cml',\n  KET = 'chemical/x-indigo-ket',\n  UNKNOWN = 'chemical/x-unknown'\n}\n\nexport interface WithStruct {\n  struct: string\n}\n\nexport interface WithFormat {\n  format: ChemicalMimeType\n}\n\nexport interface WithOutputFormat {\n  output_format: ChemicalMimeType\n}\n\nexport interface WithSelection {\n  selected?: Array<number>\n}\n\nexport type CheckTypes =\n  | 'radicals'\n  | 'pseudoatoms'\n  | 'stereo'\n  | 'query'\n  | 'overlapping_atoms'\n  | 'overlapping_bonds'\n  | 'rgroups'\n  | 'chiral'\n  | '3d'\n  | 'chiral_flag'\n  | 'valence'\n\nexport interface CheckData extends WithStruct {\n  types: Array<CheckTypes>\n}\n\nexport interface CheckResult {\n  [key: string]: string\n}\n\nexport interface ConvertData extends WithStruct, WithOutputFormat {}\n\nexport interface ConvertResult extends WithStruct, WithFormat {}\n\nexport interface LayoutData extends WithStruct, WithOutputFormat {}\n\nexport interface LayoutResult extends WithStruct, WithFormat {}\n\nexport interface CleanData\n  extends WithStruct,\n    WithSelection,\n    WithOutputFormat {}\n\nexport interface CleanResult extends WithStruct, WithFormat {}\n\nexport interface AromatizeData extends WithStruct, WithOutputFormat {}\n\nexport interface AromatizeResult extends WithStruct, WithFormat {}\n\nexport interface DearomatizeData extends WithStruct, WithOutputFormat {}\n\nexport interface DearomatizeResult extends WithStruct, WithFormat {}\n\nexport interface CalculateCipData extends WithStruct, WithOutputFormat {}\n\nexport interface CalculateCipResult extends WithStruct, WithFormat {}\n\nexport type CalculateProps =\n  | 'molecular-weight'\n  | 'most-abundant-mass'\n  | 'monoisotopic-mass'\n  | 'gross'\n  | 'mass-composition'\n\nexport interface CalculateData extends WithStruct, WithSelection {\n  properties: Array<CalculateProps>\n}\n\nexport type CalculateResult = Record<CalculateProps, string | number | boolean>\n\nexport type AutomapMode = 'discard' | 'keep' | 'alter' | 'clear'\n\nexport interface AutomapData extends WithStruct, WithOutputFormat {\n  mode: AutomapMode\n}\n\nexport interface AutomapResult extends WithStruct, WithFormat {}\n\nexport interface InfoResult {\n  indigoVersion: string\n  imagoVersions: Array<string>\n  isAvailable: boolean\n}\n\nexport interface RecognizeResult extends WithStruct, WithOutputFormat {}\n\nexport interface StructServiceOptions {\n  [key: string]: string | number | boolean | undefined\n}\n\nexport type OutputFormatType = 'png' | 'svg'\nexport interface GenerateImageOptions extends StructServiceOptions {\n  outputFormat: OutputFormatType\n  backgroundColor?: string\n}\n\nexport interface StructService {\n  info: () => Promise<InfoResult>\n  convert: (\n    data: ConvertData,\n    options?: StructServiceOptions\n  ) => Promise<ConvertResult>\n  layout: (\n    data: LayoutData,\n    options?: StructServiceOptions\n  ) => Promise<LayoutResult>\n  clean: (\n    data: CleanData,\n    options?: StructServiceOptions\n  ) => Promise<CleanResult>\n  aromatize: (\n    data: AromatizeData,\n    options?: StructServiceOptions\n  ) => Promise<AromatizeResult>\n  dearomatize: (\n    data: DearomatizeData,\n    options?: StructServiceOptions\n  ) => Promise<DearomatizeResult>\n  calculateCip: (\n    data: CalculateCipData,\n    options?: StructServiceOptions\n  ) => Promise<CalculateCipResult>\n  automap: (\n    data: AutomapData,\n    options?: StructServiceOptions\n  ) => Promise<AutomapResult>\n  check: (\n    data: CheckData,\n    options?: StructServiceOptions\n  ) => Promise<CheckResult>\n  calculate: (\n    data: CalculateData,\n    options?: StructServiceOptions\n  ) => Promise<CalculateResult>\n  recognize: (blob: Blob, version: string) => Promise<RecognizeResult>\n  generateInchIKey: (struct: string) => Promise<string>\n  generateImageAsBase64: (\n    data: string,\n    options?: GenerateImageOptions\n  ) => Promise<string>\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AromatizeData,\n  AromatizeResult,\n  AutomapData,\n  AutomapResult,\n  CalculateCipData,\n  CalculateCipResult,\n  CalculateData,\n  CalculateResult,\n  CheckData,\n  CheckResult,\n  CleanData,\n  CleanResult,\n  ConvertData,\n  ConvertResult,\n  DearomatizeData,\n  DearomatizeResult,\n  GenerateImageOptions,\n  InfoResult,\n  LayoutData,\n  LayoutResult,\n  OutputFormatType,\n  RecognizeResult,\n  StructService,\n  StructServiceOptions\n} from 'domain/services'\n\nfunction pollDeferred(process, complete, timeGap, startTimeGap) {\n  return new Promise((resolve, reject) => {\n    function iterate() {\n      process().then(\n        (val) => {\n          try {\n            if (complete(val)) resolve(val)\n            else setTimeout(iterate, timeGap)\n          } catch (e) {\n            reject(e)\n          }\n        },\n        (err) => reject(err)\n      )\n    }\n    setTimeout(iterate, startTimeGap || 0)\n  })\n}\n\nfunction parametrizeUrl(url, params) {\n  return url.replace(/:(\\w+)/g, (_, val) => params[val])\n}\n\nfunction request(\n  method: string,\n  url: string,\n  data?: any,\n  headers?: any,\n  responseHandler?: (promise: Promise<any>) => Promise<any>\n) {\n  let requestUrl = url\n  if (data && method === 'GET') requestUrl = parametrizeUrl(url, data)\n  let response: any = fetch(requestUrl, {\n    method,\n    headers: Object.assign(\n      {\n        Accept: 'application/json'\n      },\n      headers\n    ),\n    body: method !== 'GET' ? data : undefined,\n    credentials: 'same-origin'\n  })\n\n  if (responseHandler) {\n    response = responseHandler(response)\n  } else {\n    response = response.then((response) =>\n      response\n        .json()\n        .then((res) => (response.ok ? res : Promise.reject(res.error)))\n    )\n  }\n\n  return response\n}\n\nfunction indigoCall(\n  method: string,\n  url: string,\n  baseUrl: string,\n  defaultOptions: any,\n  customHeaders?: Record<string, string>\n) {\n  return function (\n    data,\n    options,\n    responseHandler?: (promise: Promise<any>) => Promise<any>\n  ) {\n    const body = Object.assign({}, data)\n    body.options = Object.assign(body.options || {}, defaultOptions, options)\n    return request(\n      method,\n      baseUrl + url,\n      JSON.stringify(body),\n      {\n        'Content-Type': 'application/json',\n        ...customHeaders\n      },\n      responseHandler\n    )\n  }\n}\n\nexport class RemoteStructService implements StructService {\n  private readonly apiPath: string\n  private readonly defaultOptions: StructServiceOptions\n  private readonly customHeaders?: Record<string, string>\n\n  constructor(\n    apiPath: string,\n    defaultOptions: StructServiceOptions,\n    customHeaders?: Record<string, string>\n  ) {\n    this.apiPath = apiPath\n    this.defaultOptions = defaultOptions\n    this.customHeaders = customHeaders\n  }\n\n  generateInchIKey(struct: string): Promise<string> {\n    return indigoCall(\n      'POST',\n      'indigo/convert',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(\n      {\n        struct,\n        output_format: 'chemical/x-inchi'\n      },\n      {}\n    )\n  }\n\n  async info(): Promise<InfoResult> {\n    let indigoVersion: string\n    let imagoVersions: Array<string>\n    let isAvailable = false\n\n    try {\n      const response = await request('GET', this.apiPath + 'info')\n      indigoVersion = response.indigo_version\n      imagoVersions = response.imago_versions\n      isAvailable = true\n    } catch (e) {\n      indigoVersion = ''\n      imagoVersions = []\n      isAvailable = false\n    }\n\n    return {\n      indigoVersion,\n      imagoVersions,\n      isAvailable\n    }\n  }\n\n  convert(\n    data: ConvertData,\n    options?: StructServiceOptions\n  ): Promise<ConvertResult> {\n    return indigoCall(\n      'POST',\n      'indigo/convert',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  layout(\n    data: LayoutData,\n    options?: StructServiceOptions\n  ): Promise<LayoutResult> {\n    return indigoCall(\n      'POST',\n      'indigo/layout',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  clean(data: CleanData, options?: StructServiceOptions): Promise<CleanResult> {\n    return indigoCall(\n      'POST',\n      'indigo/clean',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  aromatize(\n    data: AromatizeData,\n    options?: StructServiceOptions\n  ): Promise<AromatizeResult> {\n    return indigoCall(\n      'POST',\n      'indigo/aromatize',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  dearomatize(\n    data: DearomatizeData,\n    options?: StructServiceOptions\n  ): Promise<DearomatizeResult> {\n    return indigoCall(\n      'POST',\n      'indigo/dearomatize',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  calculateCip(\n    data: CalculateCipData,\n    options?: StructServiceOptions\n  ): Promise<CalculateCipResult> {\n    return indigoCall(\n      'POST',\n      'indigo/calculate_cip',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  automap(\n    data: AutomapData,\n    options?: StructServiceOptions\n  ): Promise<AutomapResult> {\n    return indigoCall(\n      'POST',\n      'indigo/automap',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  check(data: CheckData, options?: StructServiceOptions): Promise<CheckResult> {\n    return indigoCall(\n      'POST',\n      'indigo/check',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  calculate(\n    data: CalculateData,\n    options?: StructServiceOptions\n  ): Promise<CalculateResult> {\n    return indigoCall(\n      'POST',\n      'indigo/calculate',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  recognize(blob: Blob, version: string): Promise<RecognizeResult> {\n    const parVersion = version ? `?version=${version}` : ''\n    const req = request(\n      'POST',\n      this.apiPath + `imago/uploads${parVersion}`,\n      blob,\n      {\n        'Content-Type': blob.type || 'application/octet-stream'\n      }\n    )\n    const status = request.bind(null, 'GET', this.apiPath + 'imago/uploads/:id')\n    return req\n      .then((data) =>\n        pollDeferred(\n          status.bind(null, { id: data.upload_id }),\n          (response: any) => {\n            if (response.state === 'FAILURE') throw response\n            return response.state === 'SUCCESS'\n          },\n          500,\n          300\n        )\n      )\n      .then((response: any) => ({ struct: response.metadata.mol_str }))\n  }\n\n  generateImageAsBase64(\n    data: string,\n    options?: GenerateImageOptions\n  ): Promise<string> {\n    const outputFormat: OutputFormatType = options?.outputFormat || 'png'\n    return indigoCall(\n      'POST',\n      'indigo/render',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )({ struct: data }, { 'render-output-format': outputFormat }, (response) =>\n      response.then((resp) => resp.text())\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  ServiceMode,\n  StructService,\n  StructServiceOptions,\n  StructServiceProvider\n} from 'domain/services'\n\nimport { RemoteStructService } from './remoteStructService'\n\nexport class RemoteStructServiceProvider implements StructServiceProvider {\n  private readonly apiPath: string\n  mode: ServiceMode = 'remote'\n  customHeaders?: Record<string, string>\n\n  constructor(apiPath: string, customHeaders?: Record<string, string>) {\n    let currentApiPath = apiPath\n    this.customHeaders = customHeaders\n    const params = new URLSearchParams(document.location.search)\n    if (params.has('api_path')) {\n      currentApiPath = params.get('api_path')!\n    }\n    this.apiPath =\n      !currentApiPath || /\\/$/.test(currentApiPath)\n        ? currentApiPath\n        : currentApiPath + '/'\n  }\n\n  createStructService(options: StructServiceOptions): StructService {\n    return new RemoteStructService(this.apiPath, options, this.customHeaders)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ChemicalMimeType } from 'domain/services'\n\nexport class SupportedFormatProperties {\n  name: string\n  mime: ChemicalMimeType\n  extensions: string[]\n  supportsCoords?: boolean\n  options?: any\n\n  constructor(\n    name: string,\n    mime: ChemicalMimeType,\n    extensions: string[],\n    supportsCoords?: boolean,\n    options?: any\n  ) {\n    this.name = name\n    this.mime = mime\n    this.extensions = extensions\n    this.supportsCoords = supportsCoords || false\n    this.options = options || {}\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ChemicalMimeType } from 'domain/services'\nimport { SupportedFormat } from './structFormatter.types'\nimport { SupportedFormatProperties } from './supportedFormatProperties'\n\ntype FormatPropertiesMap = {\n  [key in SupportedFormat]: SupportedFormatProperties\n}\n\nconst formatProperties: FormatPropertiesMap = {\n  molAuto: new SupportedFormatProperties(\n    // TODO: is it a valid name?\n    'MDL Molfile Auto Format detect',\n    ChemicalMimeType.Mol,\n    ['.mol'],\n    true,\n    { 'molfile-saving-mode': 'auto' }\n  ),\n  mol: new SupportedFormatProperties(\n    'MDL Molfile V2000',\n    ChemicalMimeType.Mol,\n    ['.mol'],\n    true\n  ),\n  molV3000: new SupportedFormatProperties(\n    'MDL Molfile V3000',\n    ChemicalMimeType.Mol,\n    ['.mol'],\n    true,\n    { 'molfile-saving-mode': '3000' }\n  ),\n  rxn: new SupportedFormatProperties(\n    'MDL Rxnfile V2000',\n    ChemicalMimeType.Rxn,\n    ['.rxn'],\n    true\n  ),\n  rxnV3000: new SupportedFormatProperties(\n    'MDL Rxnfile V3000',\n    ChemicalMimeType.Rxn,\n    ['.rxn'],\n    true,\n    { 'molfile-saving-mode': '3000' }\n  ),\n  smiles: new SupportedFormatProperties(\n    'Daylight SMILES',\n    ChemicalMimeType.DaylightSmiles,\n    ['.smi', '.smiles']\n  ),\n  smilesExt: new SupportedFormatProperties(\n    'Extended SMILES',\n    ChemicalMimeType.ExtendedSmiles,\n    ['.cxsmi', '.cxsmiles']\n  ),\n  smarts: new SupportedFormatProperties(\n    'Daylight SMARTS',\n    ChemicalMimeType.DaylightSmarts,\n    ['.smarts']\n  ),\n  inChI: new SupportedFormatProperties('InChI', ChemicalMimeType.InChI, [\n    '.inchi'\n  ]),\n  inChIAuxInfo: new SupportedFormatProperties(\n    'InChI AuxInfo',\n    ChemicalMimeType.InChIAuxInfo,\n    ['.inchi']\n  ),\n  cml: new SupportedFormatProperties(\n    'CML',\n    ChemicalMimeType.CML,\n    ['.cml', '.mrv'],\n    true\n  ),\n  ket: new SupportedFormatProperties('Ket Format', ChemicalMimeType.KET, [\n    '.ket'\n  ]),\n  cdxml: new SupportedFormatProperties(\n    'CDXML',\n    ChemicalMimeType.CDXML,\n    ['.cdxml'],\n    true\n  ),\n  cdx: new SupportedFormatProperties(\n    'Base64 CDX',\n    ChemicalMimeType.CDX,\n    ['.b64cdx'],\n    true\n  ),\n  binaryCdx: new SupportedFormatProperties(\n    'CDX',\n    ChemicalMimeType.CDX,\n    ['.cdx'],\n    true\n  ),\n  unknown: new SupportedFormatProperties(\n    'Unknown',\n    ChemicalMimeType.UNKNOWN,\n    ['.'],\n    true\n  )\n}\n\nconst imgFormatProperties = {\n  svg: { extension: '.svg', name: 'SVG Document' },\n  png: { extension: '.png', name: 'PNG Image' }\n}\n\nfunction getPropertiesByImgFormat(format) {\n  return imgFormatProperties[format]\n}\n\nfunction getPropertiesByFormat(format: SupportedFormat) {\n  return formatProperties[format]\n}\n\nexport { formatProperties, getPropertiesByFormat, getPropertiesByImgFormat }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { MolSerializerOptions } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\nimport { StructServiceOptions } from 'domain/services'\n\nexport interface StructFormatter {\n  getStructureFromStructAsync: (struct: Struct) => Promise<string>\n  getStructureFromStringAsync: (stringifiedStruct: string) => Promise<Struct>\n}\n\nexport enum SupportedFormat {\n  mol = 'mol',\n  molV3000 = 'molV3000',\n  molAuto = 'molAuto',\n  rxn = 'rxn',\n  rxnV3000 = 'rxnV3000',\n  smiles = 'smiles',\n  smilesExt = 'smilesExt',\n  smarts = 'smarts',\n  inChI = 'inChI',\n  inChIAuxInfo = 'inChIAuxInfo',\n  cml = 'cml',\n  ket = 'ket',\n  cdxml = 'cdxml',\n  cdx = 'cdx',\n  binaryCdx = 'binaryCdx',\n  unknown = 'unknown'\n}\n\nexport type FormatterFactoryOptions = Partial<\n  MolSerializerOptions & StructServiceOptions\n>\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { KetSerializer } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\nimport { StructFormatter } from './structFormatter.types'\n\nexport class KetFormatter implements StructFormatter {\n  #ketSerializer: KetSerializer\n\n  constructor(serializer: KetSerializer) {\n    this.#ketSerializer = serializer\n  }\n\n  async getStructureFromStructAsync(struct: Struct): Promise<string> {\n    const ket = this.#ketSerializer.serialize(struct)\n    return ket\n  }\n\n  async getStructureFromStringAsync(content: string): Promise<Struct> {\n    return this.#ketSerializer.deserialize(content)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { MolSerializer } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\nimport { StructFormatter } from './structFormatter.types'\n\nexport class RxnFormatter implements StructFormatter {\n  #molSerializer: MolSerializer\n\n  constructor(molSerializer: MolSerializer) {\n    this.#molSerializer = molSerializer\n  }\n\n  async getStructureFromStructAsync(struct: Struct): Promise<string> {\n    const stringifiedMolfile = this.#molSerializer.serialize(struct)\n    return stringifiedMolfile\n  }\n\n  async getStructureFromStringAsync(\n    stringifiedStruct: string\n  ): Promise<Struct> {\n    const struct = this.#molSerializer.deserialize(stringifiedStruct)\n    return struct\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  ConvertData,\n  ConvertResult,\n  LayoutData,\n  LayoutResult,\n  StructService,\n  StructServiceOptions\n} from 'domain/services'\nimport { StructFormatter, SupportedFormat } from './structFormatter.types'\n\nimport { KetSerializer } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\nimport { getPropertiesByFormat } from './formatProperties'\n\ntype ConvertPromise = (\n  data: ConvertData,\n  options?: StructServiceOptions\n) => Promise<ConvertResult>\n\ntype LayoutPromise = (\n  data: LayoutData,\n  options?: StructServiceOptions\n) => Promise<LayoutResult>\n\nexport class ServerFormatter implements StructFormatter {\n  #structService: StructService\n  #ketSerializer: KetSerializer\n  #format: SupportedFormat\n  #options?: StructServiceOptions\n\n  constructor(\n    structService: StructService,\n    ketSerializer: KetSerializer,\n    format: SupportedFormat,\n    options?: StructServiceOptions\n  ) {\n    this.#structService = structService\n    this.#ketSerializer = ketSerializer\n    this.#format = format\n    this.#options = options\n  }\n\n  async getStructureFromStructAsync(struct: Struct): Promise<string> {\n    const formatProperties = getPropertiesByFormat(this.#format)\n\n    try {\n      const stringifiedStruct = this.#ketSerializer.serialize(struct)\n      const convertResult = await this.#structService.convert(\n        {\n          struct: stringifiedStruct,\n          output_format: formatProperties.mime\n        },\n        { ...this.#options, ...formatProperties.options }\n      )\n\n      return convertResult.struct\n    } catch (error: any) {\n      let message\n      if (error.message === 'Server is not compatible') {\n        message = `${formatProperties.name} is not supported.`\n      } else {\n        message = `Convert error!\\n${error.message || error}`\n      }\n\n      throw new Error(message)\n    }\n  }\n\n  async getStructureFromStringAsync(\n    stringifiedStruct: string\n  ): Promise<Struct> {\n    let promise: LayoutPromise | ConvertPromise\n\n    const data: ConvertData | LayoutData = {\n      struct: undefined as any,\n      output_format: getPropertiesByFormat(SupportedFormat.ket).mime\n    }\n\n    const withCoords = getPropertiesByFormat(this.#format).supportsCoords\n    if (withCoords) {\n      promise = this.#structService.convert\n      data.struct = stringifiedStruct\n    } else {\n      promise = this.#structService.layout\n      data.struct = stringifiedStruct.trim()\n    }\n\n    try {\n      const result = await promise(data, this.#options)\n      const parsedStruct = this.#ketSerializer.deserialize(result.struct)\n      if (!withCoords) {\n        parsedStruct.rescale()\n      }\n      return parsedStruct\n    } catch (error: any) {\n      if (error.message !== 'Server is not compatible') {\n        throw Error(`Convert error!\\n${error.message || error}`)\n      }\n\n      const formatError =\n        this.#format === 'smiles'\n          ? `${\n              getPropertiesByFormat(SupportedFormat.smilesExt).name\n            } and opening of ${\n              getPropertiesByFormat(SupportedFormat.smiles).name\n            }`\n          : getPropertiesByFormat(this.#format).name\n\n      throw Error(`${formatError} is not supported in standalone mode.`)\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { MolSerializer } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\nimport { StructFormatter } from './structFormatter.types'\n\nexport class MolfileV2000Formatter implements StructFormatter {\n  #molSerializer: MolSerializer\n\n  constructor(molSerializer: MolSerializer) {\n    this.#molSerializer = molSerializer\n  }\n\n  async getStructureFromStructAsync(struct: Struct): Promise<string> {\n    const stringifiedMolfile = this.#molSerializer.serialize(struct)\n    return stringifiedMolfile\n  }\n\n  async getStructureFromStringAsync(\n    stringifiedStruct: string\n  ): Promise<Struct> {\n    const struct = this.#molSerializer.deserialize(stringifiedStruct)\n    return struct\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  FormatterFactoryOptions,\n  StructFormatter,\n  SupportedFormat\n} from './structFormatter.types'\nimport {\n  KetSerializer,\n  MolSerializer,\n  MolSerializerOptions\n} from 'domain/serializers'\nimport { StructService, StructServiceOptions } from 'domain/services'\nimport { KetFormatter } from './ketFormatter'\nimport { RxnFormatter } from './rxnFormatter'\nimport { ServerFormatter } from './serverFormatter'\nimport { MolfileV2000Formatter } from './molfileV2000Formatter'\n\nexport class FormatterFactory {\n  #structService: StructService\n\n  constructor(structService: StructService) {\n    this.#structService = structService\n  }\n\n  private separateOptions(\n    options?: FormatterFactoryOptions\n  ): [Partial<MolSerializerOptions>, Partial<StructServiceOptions>] {\n    if (!options) {\n      return [{}, {}]\n    }\n\n    const {\n      reactionRelayout,\n      badHeaderRecover,\n      ignoreChiralFlag,\n      ...structServiceOptions\n    } = options\n\n    const molfileParseOptions: Partial<MolSerializerOptions> = {}\n\n    if (typeof reactionRelayout === 'boolean') {\n      molfileParseOptions.reactionRelayout = reactionRelayout\n    }\n    if (typeof badHeaderRecover === 'boolean') {\n      molfileParseOptions.badHeaderRecover = badHeaderRecover\n    }\n\n    if (typeof ignoreChiralFlag === 'boolean') {\n      molfileParseOptions.ignoreChiralFlag = ignoreChiralFlag\n      structServiceOptions['ignore-no-chiral-flag'] = ignoreChiralFlag\n    }\n\n    return [molfileParseOptions, structServiceOptions]\n  }\n\n  create(\n    format: SupportedFormat,\n    options?: FormatterFactoryOptions\n  ): StructFormatter {\n    const [molSerializerOptions, structServiceOptions] =\n      this.separateOptions(options)\n\n    let formatter: StructFormatter\n    switch (format) {\n      case SupportedFormat.ket:\n        formatter = new KetFormatter(new KetSerializer())\n        break\n\n      case SupportedFormat.rxn:\n        formatter = new RxnFormatter(new MolSerializer(molSerializerOptions))\n        break\n\n      case SupportedFormat.mol:\n        formatter = new MolfileV2000Formatter(\n          new MolSerializer(molSerializerOptions)\n        )\n        break\n\n      case SupportedFormat.cml:\n      case SupportedFormat.inChIAuxInfo:\n      case SupportedFormat.inChI:\n      case SupportedFormat.molV3000:\n      case SupportedFormat.smiles:\n      case SupportedFormat.rxnV3000:\n      case SupportedFormat.smilesExt:\n      case SupportedFormat.smarts:\n      case SupportedFormat.cdxml:\n      case SupportedFormat.cdx:\n      case SupportedFormat.binaryCdx:\n      case SupportedFormat.unknown:\n      default:\n        formatter = new ServerFormatter(\n          this.#structService,\n          new KetSerializer(),\n          format,\n          structServiceOptions\n        )\n    }\n\n    return formatter\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { SupportedFormat } from './structFormatter.types'\n\nexport function identifyStructFormat(\n  stringifiedStruct: string\n): SupportedFormat {\n  // Mimic Indigo/molecule_auto_loader.cpp as much as possible\n  const sanitizedString = stringifiedStruct.trim()\n\n  try {\n    if (JSON.parse(sanitizedString)) {\n      return SupportedFormat.ket\n    }\n  } catch (er) {} // eslint-disable-line\n\n  if (sanitizedString.indexOf('$RXN') !== -1) {\n    return SupportedFormat.rxn\n  }\n\n  if (sanitizedString.indexOf('V2000') !== -1) {\n    return SupportedFormat.mol\n  }\n\n  if (sanitizedString.indexOf('V3000') !== -1) {\n    return SupportedFormat.molV3000\n  }\n\n  const match = sanitizedString.match(/^(M {2}END|\\$END MOL)$/m)\n\n  if (match) {\n    const end = (match.index || 0) + match[0].length\n    if (\n      end === sanitizedString.length ||\n      sanitizedString.slice(end, end + 20).search(/^\\$(MOL|END CTAB)$/m) !== -1\n    ) {\n      return SupportedFormat.mol\n    }\n  }\n\n  if (\n    sanitizedString[0] === '<' &&\n    sanitizedString.indexOf('<molecule') !== -1\n  ) {\n    return SupportedFormat.cml\n  }\n\n  const clearStr = sanitizedString\n    .replace(/\\s/g, '')\n    .replace(/(\\\\r)|(\\\\n)/g, '')\n  const isBase64String =\n    /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/\n  const cdxHeader = 'VjCD0100'\n  if (\n    clearStr.length % 4 === 0 &&\n    isBase64String.test(clearStr) &&\n    window.atob(clearStr).startsWith(cdxHeader)\n  ) {\n    return SupportedFormat.cdx\n  }\n\n  if (sanitizedString.slice(0, 5) === 'InChI') {\n    return SupportedFormat.inChI\n  }\n\n  if (sanitizedString.indexOf('\\n') === -1) {\n    // TODO: smiles regexp\n    return SupportedFormat.smiles\n  }\n\n  if (sanitizedString.indexOf('<CDXML') !== -1) {\n    return SupportedFormat.cdxml\n  }\n\n  return SupportedFormat.unknown\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n// Single entry point to Raphaël library\n\nimport Raphael from 'raphael'\nimport { Vec2 } from 'domain/entities'\n\n// TODO: refactor ugly prototype extensions to plain old functions\nRaphael.el.translateAbs = function (x, y) {\n  this.delta = this.delta || new Vec2()\n  this.delta.x += x - 0\n  this.delta.y += y - 0\n  this.transform('t' + this.delta.x.toString() + ',' + this.delta.y.toString())\n}\n\nRaphael.st.translateAbs = function (x, y) {\n  this.forEach((el) => {\n    el.translateAbs(x, y)\n  })\n}\n\nexport default Raphael\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport enum LayerMap {\n  background = 'background',\n  selectionPlate = 'selectionPlate',\n  hovering = 'hovering',\n  warnings = 'warnings',\n  data = 'data',\n  indices = 'indices'\n}\n\nexport enum StereoColoringType {\n  LabelsOnly = 'LabelsOnly',\n  BondsOnly = 'BondsOnly',\n  LabelsAndBonds = 'LabelsAndBonds',\n  Off = 'Off'\n}\n\nexport enum StereLabelStyleType {\n  IUPAC = 'Iupac',\n  Classic = 'Classic',\n  On = 'On',\n  Off = 'Off'\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n// Visel is a shorthand for VISual ELement\n// It corresponds to a visualization (i.e. set of paths) of an atom or a bond.\nimport { Box2Abs, Vec2 } from 'domain/entities'\n\nclass Visel {\n  constructor(type) {\n    this.type = type\n    this.paths = []\n    this.boxes = []\n    this.boundingBox = null\n    this.oldBoundingBox = null\n    this.exts = []\n  }\n\n  add(path, bb, ext) {\n    this.paths.push(path)\n    if (bb) {\n      this.boxes.push(bb)\n      this.boundingBox =\n        this.boundingBox == null ? bb : Box2Abs.union(this.boundingBox, bb)\n    }\n    if (ext) this.exts.push(ext)\n  }\n\n  clear() {\n    this.paths = []\n    this.boxes = []\n    this.exts = []\n    if (this.boundingBox !== null) {\n      this.oldBoundingBox = this.boundingBox.clone()\n    }\n    this.boundingBox = null\n  }\n\n  translate(...args) {\n    if (args.length > 2) {\n      // TODO: replace to debug time assert\n      throw new Error('One vector or two scalar arguments expected')\n    }\n    if (args.length === 1) {\n      const vector = args[0]\n      this.translate(vector.x, vector.y)\n    } else {\n      const x = args[0]\n      const y = args[1]\n      const delta = new Vec2(x, y)\n      for (let i = 0; i < this.paths.length; ++i) {\n        this.paths[i].translateAbs(x, y)\n      }\n      for (let j = 0; j < this.boxes.length; ++j) {\n        this.boxes[j] = this.boxes[j].translate(delta)\n      }\n      if (this.boundingBox !== null) {\n        this.boundingBox = this.boundingBox.translate(delta)\n      }\n    }\n  }\n}\n\nexport default Visel\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs } from 'domain/entities'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\nimport Visel from './visel'\n\nclass ReObject {\n  public visel: Visel\n  public hover = false\n  public hovering: any = null\n  public selected = false\n  public selectionPlate: any = null\n\n  constructor(viselType: string) {\n    this.visel = new Visel(viselType)\n  }\n\n  getVBoxObj(render: Render): Box2Abs | null {\n    let vbox = this.visel.boundingBox\n    if (vbox === null) return null\n    if (render.options.offset) {\n      vbox = vbox.translate(render.options.offset.negated())\n    }\n    return vbox.transform(Scale.scaled2obj, render.options)\n  }\n\n  setHover(hover: boolean, render: Render): void {\n    // TODO render should be field\n    if (hover) {\n      let noredraw = 'hovering' in this && this.hovering !== null // && !this.highlighting.removed;\n      if (noredraw) {\n        if (this.hovering.type === 'set') {\n          if (!this.hovering[0]) return\n          noredraw = !this.hovering[0].removed\n        } else {\n          noredraw = !this.hovering.removed\n        }\n      }\n      if (noredraw) {\n        this.hovering.show()\n      } else {\n        render.paper.setStart()\n        this.drawHover(render)\n        this.hovering = render.paper.setFinish()\n      }\n    } else if (this.hovering) {\n      this.hovering.hide()\n    }\n\n    this.hover = hover\n  }\n\n  drawHover(_render: Render): any {\n    throw new Error('ReObject.drawHover is not overridden.')\n  }\n\n  makeSelectionPlate(_restruct: ReStruct, _paper: any, _styles: any): any {\n    throw new Error('ReObject.makeSelectionPlate is not overridden')\n  }\n}\n\nexport default ReObject\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from 'domain/entities'\nimport assert from 'assert'\n\nfunction tfx(v) {\n  return parseFloat(v).toFixed(8)\n}\n\nfunction relBox(box) {\n  return {\n    x: box.x,\n    y: box.y,\n    width: box.width,\n    height: box.height\n  }\n}\n\n/**\n * Finds intersection of a ray and a box and\n * Returns the shift magnitude to avoid it\n * @param p { Vec2 }\n * @param d { Vec2 }\n * @param bb { Box2Abs }\n */\nfunction shiftRayBox(p, d, bb) {\n  assert(!!p)\n  assert(!!d)\n  assert(!!bb)\n\n  // four corner points of the box\n  const b = [\n    bb.p0,\n    new Vec2(bb.p1.x, bb.p0.y),\n    bb.p1,\n    new Vec2(bb.p0.x, bb.p1.y)\n  ]\n\n  const r = b.map((v) => v.sub(p)) // b relative to p\n\n  d = d.normalized()\n\n  const rc = r.map((v) => Vec2.cross(v, d)) // cross prods\n  const rd = r.map((v) => Vec2.dot(v, d)) // dot prods\n\n  // find foremost points on the right and on the left of the ray\n  let pid = -1\n  let nid = -1\n\n  for (let i = 0; i < 4; ++i) {\n    if (rc[i] > 0) {\n      if (pid < 0 || rd[pid] < rd[i]) pid = i\n    } else if (nid < 0 || rd[nid] < rd[i]) {\n      nid = i\n    }\n  }\n\n  if (nid < 0 || pid < 0) {\n    // no intersection, no shift\n    return 0\n  }\n\n  // check the order\n  const id0 = rd[pid] > rd[nid] ? nid : pid\n  const id1 = rd[pid] > rd[nid] ? pid : nid\n\n  // simple proportion to calculate the shift\n  /* eslint-disable no-mixed-operators */\n  return (\n    rd[id0] +\n    (Math.abs(rc[id0]) * (rd[id1] - rd[id0])) /\n      (Math.abs(rc[id0]) + Math.abs(rc[id1]))\n  )\n}\nfunction calcCoordinates(aPoint, bPoint, lengthHyp) {\n  const obj: {\n    pos1: null | { x: number; y: number }\n    pos2: null | { x: number; y: number }\n  } = { pos1: null, pos2: null }\n  const oPos2 = { x: bPoint.x - aPoint.x, y: bPoint.y - aPoint.y }\n  const c =\n    (lengthHyp ** 2 - oPos2.x * oPos2.x - oPos2.y * oPos2.y - lengthHyp ** 2) /\n    -2\n  const a = oPos2.x * oPos2.x + oPos2.y * oPos2.y\n  if (oPos2.x !== 0) {\n    const b = -2 * oPos2.y * c\n    const e = c * c - lengthHyp * lengthHyp * oPos2.x * oPos2.x\n    const D = b * b - 4 * a * e\n    if (D > 0) {\n      obj.pos1 = { x: 0, y: 0 }\n      obj.pos2 = { x: 0, y: 0 }\n      obj.pos1.y = (-b + Math.sqrt(D)) / (2 * a)\n      obj.pos2.y = (-b - Math.sqrt(D)) / (2 * a)\n      obj.pos1.x = (c - obj.pos1.y * oPos2.y) / oPos2.x\n      obj.pos2.x = (c - obj.pos2.y * oPos2.y) / oPos2.x\n    }\n  } else {\n    obj.pos1 = { x: 0, y: 0 }\n    obj.pos2 = { x: 0, y: 0 }\n    obj.pos1.y = c / oPos2.y\n    obj.pos2.y = c / oPos2.y\n    obj.pos1.x = -Math.sqrt(lengthHyp ** 2 - c ** 2 / oPos2.y ** 2)\n    obj.pos2.x = Math.sqrt(lengthHyp ** 2 - c ** 2 / oPos2.y ** 2)\n  }\n  if (obj.pos1 !== null) {\n    obj.pos1.x += aPoint.x\n    obj.pos1.y += aPoint.y\n  }\n  if (obj.pos2 !== null) {\n    obj.pos2.x += aPoint.x\n    obj.pos2.y += aPoint.y\n  }\n  return obj\n}\n\nconst util = {\n  tfx,\n  relBox,\n  shiftRayBox,\n  calcCoordinates\n}\n\nexport default util\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RxnArrowMode, Vec2, RxnArrow } from 'domain/entities'\n\nimport Raphael from './raphael-ext'\nimport svgPath from 'svgpath'\nimport util from './util'\n\nconst tfx = util.tfx\n\nfunction rectangle(paper, pos, options) {\n  return paper.rect(\n    tfx(Math.min(pos[0].x, pos[1].x)),\n    tfx(Math.min(pos[0].y, pos[1].y)),\n    tfx(Math.abs(pos[1].x - pos[0].x)),\n    tfx(Math.abs(pos[1].y - pos[0].y))\n  )\n}\n\nfunction rectangleArrowHighlightAndSelection(\n  paper,\n  { pos, height },\n  length,\n  angle,\n  options\n) {\n  const [a, b] = pos\n  const b0x = a.x + length\n  const [wOffset, hOffset] = [5, height || 8]\n\n  const path =\n    `M${tfx(a.x - wOffset)},${tfx(a.y)}` +\n    `L${tfx(a.x - wOffset)},${tfx(a.y - hOffset)}` +\n    `L${tfx(b0x + wOffset)},${tfx(a.y - hOffset)}` +\n    `L${tfx(b0x + wOffset)},${tfx(a.y + (!height && hOffset))}` +\n    `L${tfx(a.x - wOffset)},${tfx(a.y + (!height && hOffset))}Z`\n\n  const transformedPath = svgPath(path).rotate(angle, a.x, a.y).toString()\n\n  return transformedPath\n}\n\nfunction ellipse(paper, pos, options) {\n  const rad = Vec2.diff(pos[1], pos[0])\n  const rx = rad.x / 2\n  const ry = rad.y / 2\n  return paper.ellipse(pos[0].x + rx, pos[0].y + ry, Math.abs(rx), Math.abs(ry))\n}\n\nfunction polyline(paper, pos, options) {\n  const path = ['M', pos[0].x, pos[0].y]\n  for (let i = 1; i < pos.length; i++) path.push('L', pos[i].x, pos[i].y)\n  return paper.path(path)\n}\n\nfunction line(paper, pos, options) {\n  const path = ['M', pos[0].x, pos[0].y]\n  path.push('L', pos[1].x, pos[1].y)\n  return paper.path(path)\n}\n\nfunction arrow(paper, item, length, angle, options) {\n  switch (item.mode) {\n    case RxnArrowMode.OpenAngle: {\n      return arrowOpenAngle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.FilledTriangle: {\n      return arrowFilledTriangle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.FilledBow: {\n      return arrowFilledBow(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.DashedOpenAngle: {\n      return arrowDashedOpenAngle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.Failed: {\n      return arrowFailed(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.BothEndsFilledTriangle: {\n      return arrowBothEndsFilledTriangle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.EquilibriumFilledHalfBow: {\n      return arrowEquilibriumFilledHalfBow(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.EquilibriumFilledTriangle: {\n      return arrowEquilibriumFilledTriangle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.EquilibriumOpenAngle: {\n      return arrowEquilibriumOpenAngle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.UnbalancedEquilibriumFilledHalfBow: {\n      return arrowUnbalancedEquilibriumFilledHalfBow(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n    case RxnArrowMode.UnbalancedEquilibriumOpenHalfAngle: {\n      return arrowUnbalancedEquilibriumOpenHalfAngle(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n    case RxnArrowMode.UnbalancedEquilibriumLargeFilledHalfBow: {\n      return arrowUnbalancedEquilibriumLargeFilledHalfBow(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n    case RxnArrowMode.UnbalancedEquilibriumFilledHalfTriangle: {\n      return arrowUnbalancedEquilibriumFilledHalfTriangle(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n    case RxnArrowMode.EllipticalArcFilledBow: {\n      return arrowEllipticalArcFilledBow(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.EllipticalArcFilledTriangle: {\n      return arrowEllipticalArcFilledTriangle(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n    case RxnArrowMode.EllipticalArcOpenAngle: {\n      return arrowEllipticalArcOpenAngle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.EllipticalArcOpenHalfAngle: {\n      return arrowEllipticalArcOpenHalfAngle(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n  }\n}\n\nfunction arrowEllipticalArcFilledBow(\n  paper,\n  { pos: [a, b], height },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const direction = height >= 0 ? 1 : -1\n  const arrowHeadLength = direction * 10\n  const arrowHeadWidth = direction * 5\n  const arrowHeadAttr = direction * 4\n\n  const b0x = a.x + arrowLength\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `A${arrowLength / 2},${height},${0},${0},${direction > 0 ? 1 : 0},${tfx(\n      b0x\n    )},${tfx(a.y)}` +\n    `L${tfx(b0x - arrowHeadWidth)},${tfx(a.y - arrowHeadLength)}` +\n    `l${tfx(arrowHeadWidth)},${tfx(arrowHeadAttr)}` +\n    `l${tfx(arrowHeadWidth)},${tfx(-arrowHeadAttr)}` +\n    `l${tfx(-arrowHeadWidth)},${arrowHeadLength}`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr })\n}\n\nfunction arrowEllipticalArcFilledTriangle(\n  paper,\n  { pos: [a, b], height },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const direction = height >= 0 ? 1 : -1\n  const triangleLength = direction * 10\n  const triangleWidth = direction * 5\n\n  const b0x = a.x + arrowLength\n\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `A${arrowLength / 2},${height},${0},${0},${direction > 0 ? 1 : 0},${tfx(\n      b0x\n    )},${tfx(a.y)}` +\n    `L${tfx(b0x - triangleWidth)},${tfx(a.y - triangleLength)}` +\n    `l${tfx(triangleLength)},${tfx(0)}` +\n    `l${tfx(-triangleWidth)},${tfx(triangleLength)}`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr })\n}\n\nfunction arrowEllipticalArcOpenAngle(\n  paper,\n  { pos: [a, b], height },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const direction = height >= 0 ? 1 : -1\n  const width = direction * 5\n  const length = direction * 7\n  const b0x = a.x + arrowLength\n\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `A${arrowLength / 2},${height},${0},${0},${direction > 0 ? 1 : 0},${tfx(\n      b0x\n    )},${tfx(a.y)}` +\n    `L${tfx(b0x - width)},${tfx(a.y - length)}` +\n    `M${tfx(b0x)},${tfx(a.y)}` +\n    `L${tfx(b0x + width)}, ${tfx(a.y - length)}`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr(options.lineattr)\n}\n\nfunction arrowEllipticalArcOpenHalfAngle(\n  paper,\n  { pos: [a, b], height },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const direction = height >= 0 ? 1 : -1\n  const width = direction * 5\n  const length = direction * 7\n  const b0x = a.x + arrowLength\n\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `A${arrowLength / 2},${height},${0},${0},${direction > 0 ? 1 : 0}, ${tfx(\n      b0x\n    )},${tfx(a.y)}` +\n    `L${tfx(b0x + width)}, ${tfx(a.y - length)}`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr(options.lineattr)\n}\n\nfunction arrowOpenAngle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const width = 5\n  const length = 7\n\n  const b0x = a.x + arrowLength\n\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `L${tfx(b0x)},${tfx(a.y)}` +\n    `L${tfx(b0x - length)},${tfx(a.y - width)}` +\n    `M${tfx(b0x)},${tfx(a.y)}` +\n    `L${tfx(b0x - length)}, ${tfx(a.y + width)}`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr(options.lineattr)\n}\n\nfunction arrowFilledTriangle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const triangleLength = 10\n  const triangleWidth = 5\n\n  const b0x = a.x + arrowLength\n\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `L${tfx(b0x)},${tfx(a.y)}` +\n    `L${tfx(b0x - triangleLength)},${tfx(a.y + triangleWidth)}` +\n    `L${tfx(b0x - triangleLength)},${tfx(a.y - triangleWidth)}` +\n    `L${tfx(b0x)},${tfx(a.y)}Z`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowFilledBow(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const arrowHeadLength = 10\n  const arrowHeadWidth = 5\n  const arrowHeadAttr = 4\n\n  const b0x = a.x + arrowLength\n\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `L${tfx(b0x)},${tfx(a.y)}` +\n    `L${tfx(b0x - arrowHeadLength)},${tfx(a.y + arrowHeadWidth)}` +\n    `L${tfx(b0x - arrowHeadLength + arrowHeadAttr)},${tfx(a.y)}` +\n    `L${tfx(b0x - arrowHeadLength)},${tfx(a.y - arrowHeadWidth)}` +\n    `L${tfx(b0x)},${tfx(a.y)}Z`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowDashedOpenAngle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const triangleLength = 10\n  const triangleWidth = 5\n  const dashInterval = 3.5\n\n  const path = []\n\n  const b0x = a.x + arrowLength\n\n  // Dashed arrow\n  for (let i = 0; i < arrowLength / dashInterval; i++) {\n    if (i % 2) {\n      path.push(`L${tfx(a.x + i * dashInterval)},${tfx(a.y)}`)\n    } else {\n      path.push(`M${tfx(a.x + i * dashInterval)},${tfx(a.y)}`)\n    }\n  }\n\n  // Arrowhead\n  path.push(\n    `M${tfx(b0x)},${tfx(a.y)}` +\n      `L${tfx(b0x - triangleLength)},${tfx(a.y + triangleWidth)}` +\n      `M${tfx(b0x)},${tfx(a.y)}` +\n      `L${tfx(b0x - triangleLength)},${tfx(a.y - triangleWidth)}`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowFailed(paper, { pos: [a, b] }, arrowLength, arrowAngle, options) {\n  const arrowHeadLength = 10\n  const arrowHeadWidth = 5\n  const arrowHeadAttr = 4\n  const failSignWidth = 8\n\n  const b0x = a.x + arrowLength\n\n  const arrowCenter = b0x - (b0x - a.x) / 2\n\n  const path = []\n\n  // Arrow with arrowhead\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y)}` +\n      `L${tfx(b0x)},${tfx(a.y)}` +\n      `L${tfx(b0x - arrowHeadLength)},${tfx(a.y + arrowHeadWidth)}` +\n      `L${tfx(b0x - arrowHeadLength + arrowHeadAttr)},${tfx(a.y)}` +\n      `L${tfx(b0x - arrowHeadLength)},${tfx(a.y - arrowHeadWidth)}` +\n      `L${tfx(b0x)},${tfx(a.y)}Z`\n  )\n\n  // Failed sign line 1\n  path.push(\n    `M${tfx(arrowCenter + failSignWidth)},${tfx(a.y + failSignWidth)}` +\n      `L${tfx(arrowCenter - failSignWidth)},${tfx(a.y - failSignWidth)}`\n  )\n\n  // Failed sign line 2\n  path.push(\n    `M${tfx(arrowCenter + failSignWidth)},${tfx(a.y - failSignWidth)}` +\n      `L${tfx(arrowCenter - failSignWidth)},${tfx(a.y + failSignWidth)}`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowBothEndsFilledTriangle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const triangleLength = 10\n  const triangleWidth = 5\n\n  const b0x = a.x + arrowLength\n\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `L${tfx(b0x)},${tfx(a.y)}` +\n    `L${tfx(b0x - triangleLength)},${tfx(a.y + triangleWidth)}` +\n    `L${tfx(b0x - triangleLength)},${tfx(a.y - triangleWidth)}` +\n    `L${tfx(b0x)},${tfx(a.y)}` +\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `L${tfx(a.x + triangleLength)},${tfx(a.y - triangleWidth)}` +\n    `L${tfx(a.x + triangleLength)},${tfx(a.y + triangleWidth)}` +\n    `L${tfx(a.x)},${tfx(a.y)}`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowEquilibriumFilledHalfBow(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 7\n  const arrowHeadAttr = 2\n\n  const b0x = a.x + arrowLength\n\n  const path = []\n\n  // Arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y - arrowOffset)}` +\n      `L${tfx(b0x - arrowLen + arrowHeadAttr)},${tfx(a.y - lineOffset)}Z`\n  )\n\n  // Arrowhead\n  path.push(\n    `M${tfx(b0x)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x + arrowLen)},${tfx(a.y + arrowOffset)}` +\n      `L${tfx(a.x + arrowLen - arrowHeadAttr)},${a.y + lineOffset}Z`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowEquilibriumFilledTriangle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 7\n\n  const b0x = a.x + arrowLength\n\n  const path = []\n\n  // First arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y - arrowOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}Z`\n  )\n\n  // Second arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y + lineOffset)}` +\n      `M${tfx(a.x)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x + arrowLen)},${tfx(a.y + arrowOffset)}` +\n      `L${tfx(a.x + arrowLen)},${a.y + lineOffset}Z` +\n      `L${tfx(a.x + arrowLen)},${tfx(a.y)}` +\n      `L${tfx(a.x + arrowLen)},${a.y + lineOffset}Z`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowEquilibriumOpenAngle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const width = 5\n  const length = 7\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 7\n\n  const b0x = a.x + arrowLength\n\n  const path = []\n\n  // First arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - length)},${tfx(a.y - width - lineOffset)}`\n  )\n\n  // Second arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y + lineOffset)}` +\n      `M${tfx(a.x)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x + arrowLen)},${tfx(a.y + lineOffset + width)}`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr(options.lineattr)\n}\n\nfunction arrowUnbalancedEquilibriumFilledHalfBow(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 7\n  const arrowHeadAttr = 2\n  const unbalanceVal = 15\n\n  const b0x = a.x + arrowLength\n\n  const path = []\n\n  // First arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y - arrowOffset)}` +\n      `L${tfx(b0x - arrowLen + arrowHeadAttr)},${tfx(a.y - lineOffset)}Z`\n  )\n\n  // Second (Unbalanced) arrow\n  path.push(\n    `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(b0x - unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x + arrowLen + unbalanceVal)},${tfx(a.y + arrowOffset)}` +\n      `L${tfx(a.x + arrowLen - arrowHeadAttr + unbalanceVal)},${\n        a.y + lineOffset\n      }Z`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowUnbalancedEquilibriumOpenHalfAngle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const width = 5\n  const length = 7\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 7\n  const unbalanceVal = 15\n\n  const b0x = a.x + arrowLength\n\n  const path = []\n\n  // First arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - length)},${tfx(a.y - width - lineOffset)}`\n  )\n\n  // Second (Unbalanced) arrow\n  path.push(\n    `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(b0x - unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x + arrowLen + unbalanceVal)},${tfx(a.y + lineOffset + width)}`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr(options.lineattr)\n}\n\nfunction arrowUnbalancedEquilibriumLargeFilledHalfBow(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 10\n  const arrowHeadAttr = 2\n  const unbalanceVal = 15\n\n  const b0x = a.x + arrowLength\n\n  const path = []\n\n  // First arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y - arrowOffset)}` +\n      `L${tfx(b0x - arrowLen + arrowHeadAttr)},${tfx(a.y - lineOffset)}Z`\n  )\n\n  // Second (Unbalanced) arrow\n  path.push(\n    `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(b0x - unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x + arrowLen + unbalanceVal)},${tfx(a.y + arrowOffset)}` +\n      `L${tfx(a.x + arrowLen - arrowHeadAttr + unbalanceVal)},${\n        a.y + lineOffset\n      }Z`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowUnbalancedEquilibriumFilledHalfTriangle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 7\n  const unbalanceVal = 15\n\n  const b0x = a.x + arrowLength\n\n  const path = []\n\n  // First arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y - arrowOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y - lineOffset)}Z`\n  )\n\n  // Second (Unbalanced) arrow\n  path.push(\n    `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(b0x - unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x + arrowLen + unbalanceVal)},${tfx(a.y + arrowOffset)}` +\n      `L${tfx(a.x + arrowLen + unbalanceVal)},${a.y + lineOffset}Z`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction plus(paper, c, options) {\n  const s = options.scale / 5\n  return paper\n    .path(\n      'M{0},{4}L{0},{5}M{2},{1}L{3},{1}',\n      tfx(c.x),\n      tfx(c.y),\n      tfx(c.x - s),\n      tfx(c.x + s),\n      tfx(c.y - s),\n      tfx(c.y + s)\n    )\n    .attr(options.lineattr)\n}\n\nfunction bondSingle(paper, hb1, hb2, options, color = '#000') {\n  const a = hb1.p\n  const b = hb2.p\n  return paper.path(makeStroke(a, b)).attr(options.lineattr).attr({\n    fill: color,\n    stroke: color\n  })\n}\n\nfunction bondSingleUp(paper, a, b2, b3, options, color = '#000') {\n  // eslint-disable-line max-params\n  return paper\n    .path(\n      'M{0},{1}L{2},{3}L{4},{5}Z',\n      tfx(a.x),\n      tfx(a.y),\n      tfx(b2.x),\n      tfx(b2.y),\n      tfx(b3.x),\n      tfx(b3.y)\n    )\n    .attr(options.lineattr)\n    .attr({\n      fill: color,\n      stroke: color\n    })\n}\n\nfunction bondSingleStereoBold(paper, a1, a2, a3, a4, options, color = '#000') {\n  // eslint-disable-line max-params\n  const bond = paper\n    .path(\n      'M{0},{1}L{2},{3}L{4},{5}L{6},{7}Z',\n      tfx(a1.x),\n      tfx(a1.y),\n      tfx(a2.x),\n      tfx(a2.y),\n      tfx(a3.x),\n      tfx(a3.y),\n      tfx(a4.x),\n      tfx(a4.y)\n    )\n    .attr(options.lineattr)\n  bond.attr({\n    stroke: color,\n    fill: color\n  })\n  return bond\n}\n\nfunction bondDoubleStereoBold(\n  paper,\n  sgBondPath,\n  b1,\n  b2,\n  options,\n  color = '#000'\n) {\n  // eslint-disable-line max-params\n  return paper.set([\n    sgBondPath,\n    paper\n      .path('M{0},{1}L{2},{3}', tfx(b1.x), tfx(b1.y), tfx(b2.x), tfx(b2.y))\n      .attr(options.lineattr)\n      .attr({\n        stroke: color,\n        fill: color\n      })\n  ])\n}\n\nfunction bondSingleDown(paper, hb1, d, nlines, step, options, color = '#000') {\n  // eslint-disable-line max-params\n  const a = hb1.p\n  const n = hb1.norm\n  const bsp = 0.7 * options.stereoBond\n\n  let path = ''\n  let p\n  let q\n  let r\n  for (let i = 0; i < nlines; ++i) {\n    r = a.addScaled(d, step * i)\n    p = r.addScaled(n, (bsp * (i + 0.5)) / (nlines - 0.5))\n    q = r.addScaled(n, (-bsp * (i + 0.5)) / (nlines - 0.5))\n    path += makeStroke(p, q)\n  }\n  return paper.path(path).attr(options.lineattr).attr({\n    fill: color,\n    stroke: color\n  })\n}\n\nfunction bondSingleEither(\n  paper,\n  hb1,\n  d,\n  nlines,\n  step,\n  options,\n  color = '#000'\n) {\n  // eslint-disable-line max-params\n  const a = hb1.p\n  const n = hb1.norm\n  const bsp = 0.7 * options.stereoBond\n\n  let path = 'M' + tfx(a.x) + ',' + tfx(a.y)\n  let r = a\n  for (let i = 0; i < nlines; ++i) {\n    r = a\n      .addScaled(d, step * (i + 0.5))\n      .addScaled(n, ((i & 1 ? -1 : +1) * bsp * (i + 0.5)) / (nlines - 0.5))\n    path += 'L' + tfx(r.x) + ',' + tfx(r.y)\n  }\n  return paper.path(path).attr(options.lineattr).attr({\n    fill: color,\n    stroke: color\n  })\n}\n\nfunction bondDouble(paper, a1, a2, b1, b2, cisTrans, options) {\n  // eslint-disable-line max-params\n  return paper\n    .path(\n      cisTrans\n        ? 'M{0},{1}L{6},{7}M{4},{5}L{2},{3}'\n        : 'M{0},{1}L{2},{3}M{4},{5}L{6},{7}',\n      tfx(a1.x),\n      tfx(a1.y),\n      tfx(b1.x),\n      tfx(b1.y),\n      tfx(a2.x),\n      tfx(a2.y),\n      tfx(b2.x),\n      tfx(b2.y)\n    )\n    .attr(options.lineattr)\n}\n\nfunction bondSingleOrDouble(paper, hb1, hb2, nSect, options) {\n  // eslint-disable-line max-statements, max-params\n  const a = hb1.p\n  const b = hb2.p\n  const n = hb1.norm\n  const bsp = options.bondSpace / 2\n\n  let path = ''\n  let pi\n  let pp = a\n  for (let i = 1; i <= nSect; ++i) {\n    pi = Vec2.lc2(a, (nSect - i) / nSect, b, i / nSect)\n    if (i & 1) {\n      path += makeStroke(pp, pi)\n    } else {\n      path += makeStroke(pp.addScaled(n, bsp), pi.addScaled(n, bsp))\n      path += makeStroke(pp.addScaled(n, -bsp), pi.addScaled(n, -bsp))\n    }\n    pp = pi\n  }\n  return paper.path(path).attr(options.lineattr)\n}\n\nfunction bondTriple(paper, hb1, hb2, options, color = '#000') {\n  const a = hb1.p\n  const b = hb2.p\n  const n = hb1.norm\n  const a2 = a.addScaled(n, options.bondSpace)\n  const b2 = b.addScaled(n, options.bondSpace)\n  const a3 = a.addScaled(n, -options.bondSpace)\n  const b3 = b.addScaled(n, -options.bondSpace)\n  return paper\n    .path(makeStroke(a, b) + makeStroke(a2, b2) + makeStroke(a3, b3))\n    .attr(options.lineattr)\n    .attr({\n      fill: color,\n      stroke: color\n    })\n}\n\nfunction bondAromatic(paper, paths, bondShift, options) {\n  const l1 = paper.path(paths[0]).attr(options.lineattr)\n  const l2 = paper.path(paths[1]).attr(options.lineattr)\n  if (bondShift !== undefined && bondShift !== null) {\n    ;(bondShift > 0 ? l1 : l2).attr({ 'stroke-dasharray': '- ' })\n  }\n\n  return paper.set([l1, l2])\n}\n\nfunction bondAny(paper, hb1, hb2, options) {\n  const a = hb1.p\n  const b = hb2.p\n  return paper\n    .path(makeStroke(a, b))\n    .attr(options.lineattr)\n    .attr({ 'stroke-dasharray': '- ' })\n}\n\nfunction bondHydrogen(paper, hb1, hb2, options) {\n  const a = hb1.p\n  const b = hb2.p\n  return paper.path(makeStroke(a, b)).attr(options.lineattr).attr({\n    'stroke-dasharray': '.',\n    'stroke-linecap': 'square'\n  })\n}\n\nfunction bondDative(paper, hb1, hb2, options) {\n  const a = hb1.p\n  const b = hb2.p\n  return paper\n    .path(makeStroke(a, b))\n    .attr(options.lineattr)\n    .attr({ 'arrow-end': 'block-midium-long' })\n}\n\nfunction reactingCenter(paper, p, options) {\n  let pathdesc = ''\n  for (let i = 0; i < p.length / 2; ++i) {\n    pathdesc += makeStroke(p[2 * i], p[2 * i + 1])\n  }\n  return paper.path(pathdesc).attr(options.lineattr)\n}\n\nfunction topologyMark(paper, p, mark, options) {\n  const path = paper.text(p.x, p.y, mark).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: '#000'\n  })\n  const rbb = util.relBox(path.getBBox())\n  recenterText(path, rbb)\n  return path\n}\n\nfunction radicalCap(paper, p, options) {\n  const s = options.lineWidth * 0.9\n  const dw = s\n  const dh = 2 * s\n  return paper\n    .path(\n      'M{0},{1}L{2},{3}L{4},{5}',\n      tfx(p.x - dw),\n      tfx(p.y + dh),\n      tfx(p.x),\n      tfx(p.y),\n      tfx(p.x + dw),\n      tfx(p.y + dh)\n    )\n    .attr({\n      stroke: '#000',\n      'stroke-width': options.lineWidth * 0.7,\n      'stroke-linecap': 'square',\n      'stroke-linejoin': 'miter'\n    })\n}\n\nfunction radicalBullet(paper, p, options) {\n  return paper.circle(tfx(p.x), tfx(p.y), options.lineWidth).attr({\n    stroke: null,\n    fill: '#000'\n  })\n}\n\nfunction bracket(paper, d, n, c, bracketWidth, bracketHeight, options) {\n  // eslint-disable-line max-params\n  bracketWidth = bracketWidth || 0.25\n  bracketHeight = bracketHeight || 1.0\n  const a0 = c.addScaled(n, -0.5 * bracketHeight)\n  const a1 = c.addScaled(n, 0.5 * bracketHeight)\n  const b0 = a0.addScaled(d, -bracketWidth)\n  const b1 = a1.addScaled(d, -bracketWidth)\n\n  return paper\n    .path(\n      'M{0},{1}L{2},{3}L{4},{5}L{6},{7}',\n      tfx(b0.x),\n      tfx(b0.y),\n      tfx(a0.x),\n      tfx(a0.y),\n      tfx(a1.x),\n      tfx(a1.y),\n      tfx(b1.x),\n      tfx(b1.y)\n    )\n    .attr(options.sgroupBracketStyle)\n}\n\nfunction selectionRectangle(paper, p0, p1, options) {\n  return paper\n    .rect(\n      tfx(Math.min(p0.x, p1.x)),\n      tfx(Math.min(p0.y, p1.y)),\n      tfx(Math.abs(p1.x - p0.x)),\n      tfx(Math.abs(p1.y - p0.y))\n    )\n    .attr(options.lassoStyle)\n}\n\nfunction selectionPolygon(paper, r, options) {\n  const v = r[r.length - 1]\n  let pstr = 'M' + tfx(v.x) + ',' + tfx(v.y)\n  for (let i = 0; i < r.length; ++i) {\n    pstr += 'L' + tfx(r[i].x) + ',' + tfx(r[i].y)\n  }\n  return paper.path(pstr).attr(options.lassoStyle)\n}\n\nfunction selectionLine(paper, p0, p1, options) {\n  return paper.path(makeStroke(p0, p1)).attr(options.lassoStyle)\n}\n\nfunction makeStroke(a, b) {\n  return 'M' + tfx(a.x) + ',' + tfx(a.y) + 'L' + tfx(b.x) + ',' + tfx(b.y) + '\t'\n}\n\nfunction dashedPath(p0, p1, dash) {\n  let t0 = 0\n  const t1 = Vec2.dist(p0, p1)\n  const d = Vec2.diff(p1, p0).normalized()\n  let black = true\n  let path = ''\n  let i = 0\n\n  while (t0 < t1) {\n    const len = dash[i % dash.length]\n    const t2 = t0 + Math.min(len, t1 - t0)\n    if (black) {\n      path +=\n        'M ' +\n        p0.addScaled(d, t0).coordStr() +\n        ' L ' +\n        p0.addScaled(d, t2).coordStr()\n    }\n    t0 += len\n    black = !black\n    i++\n  }\n  return path\n}\n\nfunction aromaticBondPaths(a2, a3, b2, b3, mask, dash) {\n  // eslint-disable-line max-params\n  const l1 = dash && mask & 1 ? dashedPath(a2, b2, dash) : makeStroke(a2, b2)\n  const l2 = dash && mask & 2 ? dashedPath(a3, b3, dash) : makeStroke(a3, b3)\n\n  return [l1, l2]\n}\n\nfunction recenterText(path, rbb) {\n  // TODO: find a better way\n  if (Raphael.vml) {\n    const gap = rbb.height * 0.16\n    path.translateAbs(0, gap)\n    rbb.y += gap\n  }\n}\n\nexport default {\n  recenterText,\n  arrow,\n  plus,\n  aromaticBondPaths,\n  bondSingle,\n  bondSingleUp,\n  bondSingleStereoBold,\n  bondDoubleStereoBold,\n  bondSingleDown,\n  bondSingleEither,\n  bondDouble,\n  bondSingleOrDouble,\n  bondTriple,\n  bondAromatic,\n  bondAny,\n  bondHydrogen,\n  bondDative,\n  reactingCenter,\n  topologyMark,\n  radicalCap,\n  radicalBullet,\n  bracket,\n  selectionRectangle,\n  selectionPolygon,\n  selectionLine,\n  ellipse,\n  rectangle,\n  rectangleArrowHighlightAndSelection,\n  polyline,\n  line\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  Bond,\n  Box2Abs,\n  FunctionalGroup,\n  StereoFlag,\n  StereoLabel,\n  Struct,\n  Vec2\n} from 'domain/entities'\nimport { ElementColor, Elements } from 'domain/constants'\nimport {\n  LayerMap,\n  StereLabelStyleType,\n  StereoColoringType\n} from './generalEnumTypes'\n\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\ninterface ElemAttr {\n  text: string\n  path: any\n  rbb: { x: number; y: number; width: number; height: number }\n}\n\nconst StereoLabelMinOpacity = 0.3\n\nenum ShowHydrogenLabels {\n  Off = 'off',\n  Hetero = 'Hetero',\n  Terminal = 'Terminal',\n  TerminalAndHetero = 'Terminal and Hetero',\n  On = 'on'\n}\n\nclass ReAtom extends ReObject {\n  a: Atom\n  showLabel: boolean\n  hydrogenOnTheLeft: boolean\n  color: string\n  component: number\n  label?: ElemAttr\n\n  constructor(atom: Atom) {\n    super('atom')\n    this.a = atom // TODO rename a to item\n    this.showLabel = false\n\n    this.hydrogenOnTheLeft = false\n\n    this.color = '#000000'\n    this.component = -1\n  }\n\n  static isSelectable(): true {\n    return true\n  }\n\n  getVBoxObj(render: Render): Box2Abs | null {\n    if (this.visel.boundingBox) {\n      return ReObject.prototype.getVBoxObj.call(this, render)\n    }\n    return new Box2Abs(this.a.pp, this.a.pp)\n  }\n\n  drawHover(render: Render) {\n    const ret = this.makeHoverPlate(render)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  makeHoverPlate(render: Render) {\n    const paper = render.paper\n    const options = render.options\n    const ps = Scale.obj2scaled(this.a.pp, options)\n    const atom = this.a\n    const sgroups = render.ctab.sgroups\n    const functionalGroups = render.ctab.molecule.functionalGroups\n    if (\n      FunctionalGroup.isAtomInContractedFunctionalGroup(\n        atom,\n        sgroups,\n        functionalGroups,\n        true\n      )\n    ) {\n      return null\n    }\n    return paper\n      .circle(ps.x, ps.y, options.atomSelectionPlateRadius)\n      .attr(options.hoverStyle)\n  }\n\n  makeSelectionPlate(restruct: ReStruct, paper: any, styles: any) {\n    const atom = this.a\n    const sgroups = restruct.render.ctab.sgroups\n    const functionalGroups = restruct.render.ctab.molecule.functionalGroups\n    if (\n      FunctionalGroup.isAtomInContractedFunctionalGroup(\n        atom,\n        sgroups,\n        functionalGroups,\n        true\n      )\n    ) {\n      return null\n    }\n\n    const ps = Scale.obj2scaled(this.a.pp, restruct.render.options)\n    return paper\n      .circle(ps.x, ps.y, styles.atomSelectionPlateRadius)\n      .attr(styles.selectionStyle)\n  }\n\n  show(restruct: ReStruct, aid: number, options: any): void {\n    // eslint-disable-line max-statements\n    const atom = restruct.molecule.atoms.get(aid)\n    const sgroups = restruct.molecule.sgroups\n    const functionalGroups = restruct.molecule.functionalGroups\n    const render = restruct.render\n    const ps = Scale.obj2scaled(this.a.pp, render.options)\n\n    if (\n      FunctionalGroup.isAtomInContractedFunctionalGroup(\n        atom,\n        sgroups,\n        functionalGroups,\n        false\n      )\n    ) {\n      if (FunctionalGroup.isAttachmentPointAtom(aid, restruct.molecule)) {\n        let sgroupName\n        for (const sg of sgroups.values()) {\n          if (sg.atoms.includes(aid)) sgroupName = sg.data.name\n        }\n        const path = render.paper.text(ps.x, ps.y, sgroupName).attr({\n          'font-weight': 700,\n          'font-size': 14\n        })\n        restruct.addReObjectPath(LayerMap.data, this.visel, path, ps, true)\n      }\n      return\n    }\n\n    this.hydrogenOnTheLeft = setHydrogenPos(restruct.molecule, this)\n    this.showLabel = isLabelVisible(restruct, render.options, this)\n    this.color = 'black' // reset colour\n\n    let delta\n    let rightMargin\n    let leftMargin\n    let implh\n    let isHydrogen\n    let label\n    let index: any = null\n\n    if (this.showLabel) {\n      label = buildLabel(this, render.paper, ps, options)\n      delta = 0.5 * options.lineWidth\n      rightMargin =\n        (label.rbb.width / 2) * (options.zoom > 1 ? 1 : options.zoom)\n      leftMargin =\n        (-label.rbb.width / 2) * (options.zoom > 1 ? 1 : options.zoom)\n      implh = Math.floor(this.a.implicitH)\n      isHydrogen = label.text === 'H'\n      restruct.addReObjectPath(LayerMap.data, this.visel, label.path, ps, true)\n    }\n    if (options.showAtomIds) {\n      index = {}\n      index.text = aid.toString()\n      let idPos = this.hydrogenOnTheLeft\n        ? Vec2.lc(ps, 1, new Vec2({ x: -2, y: 0, z: 0 }), 6)\n        : Vec2.lc(ps, 1, new Vec2({ x: 2, y: 0, z: 0 }), 6)\n      if (this.showLabel) {\n        idPos = Vec2.lc(idPos, 1, new Vec2({ x: 1, y: -3, z: 0 }), 6)\n      }\n      index.path = render.paper.text(idPos.x, idPos.y, index.text).attr({\n        font: options.font,\n        'font-size': options.fontszsub,\n        fill: '#070'\n      })\n      index.rbb = util.relBox(index.path.getBBox())\n      draw.recenterText(index.path, index.rbb)\n      restruct.addReObjectPath(LayerMap.indices, this.visel, index.path, ps)\n    }\n    this.setHover(this.hover, render)\n\n    if (this.showLabel && !this.a.pseudo) {\n      let hydroIndex: any = null\n      if (isHydrogen && implh > 0) {\n        hydroIndex = showHydroIndex(this, render, implh, rightMargin)\n        rightMargin += hydroIndex.rbb.width + delta\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          hydroIndex.path,\n          ps,\n          true\n        )\n      }\n\n      if (this.a.radical !== 0) {\n        const radical = showRadical(this, render)\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          radical.path,\n          ps,\n          true\n        )\n      }\n      if (this.a.isotope !== 0) {\n        const isotope = showIsotope(this, render, leftMargin)\n        leftMargin -= isotope.rbb.width + delta\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          isotope.path,\n          ps,\n          true\n        )\n      }\n      if (\n        !isHydrogen &&\n        !this.a.alias &&\n        implh > 0 &&\n        displayHydrogen(options.showHydrogenLabels, this)\n      ) {\n        const data = showHydrogen(this, render, implh, {\n          hydrogen: {},\n          hydroIndex,\n          rightMargin,\n          leftMargin\n        })\n        const hydrogen = data.hydrogen\n        hydroIndex = data.hydroIndex\n        rightMargin = data.rightMargin\n        leftMargin = data.leftMargin\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          hydrogen.path,\n          ps,\n          true\n        )\n        if (hydroIndex != null) {\n          restruct.addReObjectPath(\n            LayerMap.data,\n            this.visel,\n            hydroIndex.path,\n            ps,\n            true\n          )\n        }\n      }\n\n      if (this.a.charge !== 0 && options.showCharge) {\n        const charge = showCharge(this, render, rightMargin)\n        rightMargin += charge.rbb.width + delta\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          charge.path,\n          ps,\n          true\n        )\n      }\n      if (this.a.explicitValence >= 0 && options.showValence) {\n        const valence = showExplicitValence(this, render, rightMargin)\n        rightMargin += valence.rbb.width + delta\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          valence.path,\n          ps,\n          true\n        )\n      }\n\n      if (this.a.badConn && options.showValenceWarnings) {\n        const warning = showWarning(this, render, leftMargin, rightMargin)\n        restruct.addReObjectPath(\n          LayerMap.warnings,\n          this.visel,\n          warning.path,\n          ps,\n          true\n        )\n      }\n      if (index) {\n        /* eslint-disable no-mixed-operators */\n        pathAndRBoxTranslate(\n          index.path,\n          index.rbb,\n          -0.5 * label.rbb.width - 0.5 * index.rbb.width - delta,\n          0.3 * label.rbb.height\n        )\n        /* eslint-enable no-mixed-operators */\n      }\n    }\n\n    if (this.a.attpnt) {\n      const lsb = bisectLargestSector(this, restruct.molecule)\n      showAttpnt(this, render, lsb, restruct.addReObjectPath.bind(restruct))\n    }\n\n    const stereoLabel = this.a.stereoLabel // Enhanced Stereo\n    const aamText = getAamText(this)\n    const queryAttrsText = !this.a.pseudo ? getQueryAttrsText(this) : ''\n\n    // we render them together to avoid possible collisions\n\n    const fragmentId = Number(restruct.atoms.get(aid)?.a.fragment)\n    // TODO: fragment should not be null\n    const fragment = restruct.molecule.frags.get(fragmentId)\n\n    const text =\n      (shouldDisplayStereoLabel(\n        stereoLabel,\n        options.stereoLabelStyle,\n        options.ignoreChiralFlag,\n        fragment?.enhancedStereoFlag\n      )\n        ? `${stereoLabel}\\n`\n        : '') +\n      (queryAttrsText.length > 0 ? `${queryAttrsText}\\n` : '') +\n      (aamText.length > 0 ? `.${aamText}.` : '')\n\n    if (text.length > 0) {\n      const elem = Elements.get(this.a.label)\n      const aamPath = render.paper.text(ps.x, ps.y, text).attr({\n        font: options.font,\n        'font-size': options.fontszsub,\n        fill: options.atomColoring && elem ? ElementColor[this.a.label] : '#000'\n      })\n      if (stereoLabel) {\n        // use dom element to change color of stereo label which is the first element\n        // of just created text\n        // text -> tspan\n        const color = getStereoAtomColor(render.options, stereoLabel)\n        aamPath.node.childNodes[0].setAttribute('fill', color)\n        const opacity = getStereoAtomOpacity(render.options, stereoLabel)\n        aamPath.node.childNodes[0].setAttribute('fill-opacity', opacity)\n      }\n      const aamBox = util.relBox(aamPath.getBBox())\n      draw.recenterText(aamPath, aamBox)\n      const visel = this.visel\n      let t = 3\n      let dir = bisectLargestSector(this, restruct.molecule)\n      // estimate the shift to clear the atom label\n      for (let i = 0; i < visel.exts.length; ++i) {\n        t = Math.max(t, util.shiftRayBox(ps, dir, visel.exts[i].translate(ps)))\n      }\n      // estimate the shift backwards to account for the size of the aam/query text box itself\n      t += util.shiftRayBox(ps, dir.negated(), Box2Abs.fromRelBox(aamBox))\n      dir = dir.scaled(8 + t)\n      pathAndRBoxTranslate(aamPath, aamBox, dir.x, dir.y)\n      restruct.addReObjectPath(LayerMap.data, this.visel, aamPath, ps, true)\n    }\n\n    // Checking whether atom is highlighted and what's the last color\n    const highlights = restruct.molecule.highlights\n    let isHighlighted = false\n    let highlightColor = ''\n    highlights.forEach((highlight) => {\n      const hasCurrentHighlight = highlight.atoms?.includes(aid)\n      isHighlighted = isHighlighted || hasCurrentHighlight\n      if (hasCurrentHighlight) {\n        highlightColor = highlight.color\n      }\n    })\n\n    // Drawing highlight\n    if (isHighlighted) {\n      const style = { fill: highlightColor, stroke: 'none' }\n\n      const ps = Scale.obj2scaled(this.a.pp, restruct.render.options)\n      const path = render.paper\n        .circle(ps.x, ps.y, options.atomSelectionPlateRadius * 0.8)\n        .attr(style)\n\n      restruct.addReObjectPath(LayerMap.hovering, this.visel, path)\n    }\n  }\n}\n\nfunction getStereoAtomColor(options, stereoLabel) {\n  if (\n    !stereoLabel ||\n    options.colorStereogenicCenters === StereoColoringType.Off ||\n    options.colorStereogenicCenters === StereoColoringType.BondsOnly\n  ) {\n    return '#000'\n  }\n\n  return getColorFromStereoLabel(options, stereoLabel)\n}\n\nexport function getColorFromStereoLabel(options, stereoLabel) {\n  const stereoLabelType = stereoLabel.match(/\\D+/g)[0]\n\n  switch (stereoLabelType) {\n    case StereoLabel.And:\n      return options.colorOfAndCenters\n    case StereoLabel.Or:\n      return options.colorOfOrCenters\n    case StereoLabel.Abs:\n      return options.colorOfAbsoluteCenters\n    default:\n      return '#000'\n  }\n}\n\nfunction getStereoAtomOpacity(options, stereoLabel) {\n  const stereoLabelType = stereoLabel.match(/\\D+/g)[0]\n  const stereoLabelNumber = +stereoLabel.replace(stereoLabelType, '')\n  if (\n    !options.autoFadeOfStereoLabels ||\n    stereoLabelType === StereoLabel.Abs ||\n    options.colorStereogenicCenters === StereoColoringType.Off ||\n    options.colorStereogenicCenters === StereoColoringType.BondsOnly\n  ) {\n    return 1\n  }\n  return Math.max(1 - (stereoLabelNumber - 1) / 10, StereoLabelMinOpacity)\n}\n\nfunction shouldDisplayStereoLabel(\n  stereoLabel,\n  labelStyle,\n  ignoreChiralFlag,\n  flag: StereoFlag | undefined\n): boolean {\n  if (!stereoLabel) {\n    return false\n  }\n  const stereoLabelType = stereoLabel.match(/\\D+/g)[0]\n\n  if (ignoreChiralFlag && stereoLabelType === StereoLabel.Abs) {\n    return false\n  }\n  if (ignoreChiralFlag && stereoLabelType !== StereoLabel.Abs) {\n    return true\n  }\n\n  switch (labelStyle) {\n    // Off\n    case StereLabelStyleType.Off:\n      return false\n    // On\n    case StereLabelStyleType.On:\n      return true\n    // Classic\n    case StereLabelStyleType.Classic:\n      return !!(flag === StereoFlag.Mixed || stereoLabelType === StereoLabel.Or)\n    // IUPAC\n    case StereLabelStyleType.IUPAC:\n      return !!(\n        flag === StereoFlag.Mixed && stereoLabelType !== StereoLabel.Abs\n      )\n    default:\n      return true\n  }\n}\n\nfunction isLabelVisible(restruct, options, atom) {\n  const visibleTerminal =\n    options.showHydrogenLabels !== ShowHydrogenLabels.Off &&\n    options.showHydrogenLabels !== ShowHydrogenLabels.Hetero\n\n  const neighborsLength =\n    atom.a.neighbors.length === 0 ||\n    (atom.a.neighbors.length < 2 && visibleTerminal)\n\n  const shouldBeVisible =\n    neighborsLength ||\n    options.carbonExplicitly ||\n    atom.a.alias ||\n    atom.a.isotope !== 0 ||\n    atom.a.radical !== 0 ||\n    atom.a.charge !== 0 ||\n    atom.a.explicitValence >= 0 ||\n    atom.a.atomList !== null ||\n    atom.a.rglabel !== null ||\n    (atom.a.badConn && options.showValenceWarnings) ||\n    atom.a.label.toLowerCase() !== 'c'\n\n  if (shouldBeVisible) return true\n\n  if (atom.a.neighbors.length === 2) {\n    const nei1 = atom.a.neighbors[0]\n    const nei2 = atom.a.neighbors[1]\n    const hb1 = restruct.molecule.halfBonds.get(nei1)\n    const hb2 = restruct.molecule.halfBonds.get(nei2)\n    const bond1 = restruct.bonds.get(hb1.bid)\n    const bond2 = restruct.bonds.get(hb2.bid)\n\n    const sameNotStereo =\n      bond1.b.type === bond2.b.type &&\n      bond1.b.stereo === Bond.PATTERN.STEREO.NONE &&\n      bond2.b.stereo === Bond.PATTERN.STEREO.NONE\n\n    if (sameNotStereo && Math.abs(Vec2.cross(hb1.dir, hb2.dir)) < 0.2) {\n      return true\n    }\n  }\n\n  return false\n}\n\nfunction displayHydrogen(hydrogenLabels, atom) {\n  return (\n    hydrogenLabels === ShowHydrogenLabels.On ||\n    (hydrogenLabels === ShowHydrogenLabels.Terminal &&\n      atom.a.neighbors.length < 2) ||\n    (hydrogenLabels === ShowHydrogenLabels.Hetero &&\n      atom.label.text.toLowerCase() !== 'c') ||\n    (hydrogenLabels === ShowHydrogenLabels.TerminalAndHetero &&\n      (atom.a.neighbors.length < 2 || atom.label.text.toLowerCase() !== 'c'))\n  )\n}\n\nfunction setHydrogenPos(struct, atom) {\n  // check where should the hydrogen be put on the left of the label\n  if (atom.a.neighbors.length === 0) {\n    const element = Elements.get(atom.a.label)\n    return !element || Boolean(element.leftH)\n  }\n\n  let yl = 1\n  let yr = 1\n  let nl = 0\n  let nr = 0\n\n  atom.a.neighbors.forEach((nei) => {\n    const d = struct.halfBonds.get(nei).dir\n\n    if (d.x <= 0) {\n      yl = Math.min(yl, Math.abs(d.y))\n      nl++\n    } else {\n      yr = Math.min(yr, Math.abs(d.y))\n      nr++\n    }\n  })\n\n  return yl < 0.51 || yr < 0.51 ? yr < yl : nr > nl\n}\n\nfunction buildLabel(\n  atom: ReAtom,\n  paper: any,\n  ps: Vec2,\n  options: any\n): ElemAttr {\n  // eslint-disable-line max-statements\n  let label: any = {}\n  label.text = getLabelText(atom.a)\n\n  if (label.text === '') label = 'R#' // for structures that missed 'M  RGP' tag in molfile\n\n  if (label.text === atom.a.label) {\n    const element = Elements.get(label.text)\n    if (options.atomColoring && element) {\n      atom.color = ElementColor[label.text] || '#000'\n    }\n  }\n\n  label.path = paper.text(ps.x, ps.y, label.text).attr({\n    font: options.font,\n    'font-size': options.fontsz,\n    fill: atom.color,\n    'font-style': atom.a.pseudo ? 'italic' : ''\n  })\n\n  label.rbb = util.relBox(label.path.getBBox())\n  draw.recenterText(label.path, label.rbb)\n\n  if (atom.a.atomList !== null) {\n    pathAndRBoxTranslate(\n      label.path,\n      label.rbb,\n      ((atom.hydrogenOnTheLeft ? -1 : 1) *\n        (label.rbb.width - label.rbb.height)) /\n        2,\n      0\n    )\n  }\n\n  atom.label = label\n  return label\n}\n\nfunction getLabelText(atom) {\n  if (atom.atomList !== null) return atom.atomList.label()\n\n  if (atom.pseudo) return atom.pseudo\n\n  if (atom.alias) return atom.alias\n\n  if (atom.label === 'R#' && atom.rglabel !== null) {\n    let text = ''\n\n    for (let rgi = 0; rgi < 32; rgi++) {\n      if (atom.rglabel & (1 << rgi)) {\n        // eslint-disable-line max-depth\n        text += 'R' + (rgi + 1).toString()\n      }\n    }\n\n    return text\n  }\n\n  return atom.label\n}\n\nfunction showHydroIndex(atom, render, implh, rightMargin): ElemAttr {\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const delta = 0.5 * options.lineWidth\n  const hydroIndex: any = {}\n  hydroIndex.text = (implh + 1).toString()\n  hydroIndex.path = render.paper.text(ps.x, ps.y, hydroIndex.text).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: atom.color\n  })\n  hydroIndex.rbb = util.relBox(hydroIndex.path.getBBox())\n  draw.recenterText(hydroIndex.path, hydroIndex.rbb)\n  /* eslint-disable no-mixed-operators */\n  pathAndRBoxTranslate(\n    hydroIndex.path,\n    hydroIndex.rbb,\n    rightMargin + 0.5 * hydroIndex.rbb.width + delta,\n    0.2 * atom.label.rbb.height\n  )\n  /* eslint-enable no-mixed-operators */\n  return hydroIndex\n}\n\nfunction showRadical(atom: ReAtom, render: Render): Omit<ElemAttr, 'text'> {\n  const ps: Vec2 = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const paper: any = render.paper\n  const radical: any = {}\n  let hshift\n  switch (atom.a.radical) {\n    case 1:\n      radical.path = paper.set()\n      hshift = 1.6 * options.lineWidth\n      radical.path.push(\n        draw.radicalBullet(paper, ps.add(new Vec2(-hshift, 0)), options),\n        draw.radicalBullet(paper, ps.add(new Vec2(hshift, 0)), options)\n      )\n      radical.path.attr('fill', atom.color)\n      break\n    case 2:\n      radical.path = paper.set()\n      radical.path.push(draw.radicalBullet(paper, ps, options))\n      radical.path.attr('fill', atom.color)\n      break\n    case 3:\n      radical.path = paper.set()\n      hshift = 1.6 * options.lineWidth\n      radical.path.push(\n        draw.radicalCap(paper, ps.add(new Vec2(-hshift, 0)), options),\n        draw.radicalCap(paper, ps.add(new Vec2(hshift, 0)), options)\n      )\n      radical.path.attr('stroke', atom.color)\n      break\n    default:\n      break\n  }\n  radical.rbb = util.relBox(radical.path.getBBox())\n  let vshift = -0.5 * (atom.label!.rbb.height + radical.rbb.height)\n  if (atom.a.radical === 3) vshift -= options.lineWidth / 2\n  pathAndRBoxTranslate(radical.path, radical.rbb, 0, vshift)\n  return radical\n}\n\nfunction showIsotope(\n  atom: ReAtom,\n  render: Render,\n  leftMargin: number\n): ElemAttr {\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const delta = 0.5 * options.lineWidth\n  const isotope: any = {}\n  isotope.text = atom.a.isotope.toString()\n  isotope.path = render.paper.text(ps.x, ps.y, isotope.text).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: atom.color\n  })\n  isotope.rbb = util.relBox(isotope.path.getBBox())\n  draw.recenterText(isotope.path, isotope.rbb)\n  /* eslint-disable no-mixed-operators */\n  pathAndRBoxTranslate(\n    isotope.path,\n    isotope.rbb,\n    leftMargin - 0.5 * isotope.rbb.width - delta,\n    -0.3 * atom.label!.rbb.height\n  )\n  /* eslint-enable no-mixed-operators */\n  return isotope\n}\n\nfunction showCharge(\n  atom: ReAtom,\n  render: Render,\n  rightMargin: number\n): ElemAttr {\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const delta = 0.5 * options.lineWidth\n  const charge: any = {}\n  charge.text = ''\n  const absCharge = Math.abs(atom.a.charge)\n  if (absCharge !== 1) charge.text = absCharge.toString()\n  if (atom.a.charge < 0) charge.text += '\\u2013'\n  else charge.text += '+'\n\n  charge.path = render.paper.text(ps.x, ps.y, charge.text).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: atom.color\n  })\n  charge.rbb = util.relBox(charge.path.getBBox())\n  draw.recenterText(charge.path, charge.rbb)\n  /* eslint-disable no-mixed-operators */\n  pathAndRBoxTranslate(\n    charge.path,\n    charge.rbb,\n    rightMargin + 0.5 * charge.rbb.width + delta,\n    -0.3 * atom.label!.rbb.height\n  )\n  /* eslint-enable no-mixed-operators */\n  return charge\n}\n\nfunction showExplicitValence(\n  atom: ReAtom,\n  render: Render,\n  rightMargin: number\n): ElemAttr {\n  const mapValence = {\n    0: '0',\n    1: 'I',\n    2: 'II',\n    3: 'III',\n    4: 'IV',\n    5: 'V',\n    6: 'VI',\n    7: 'VII',\n    8: 'VIII',\n    9: 'IX',\n    10: 'X',\n    11: 'XI',\n    12: 'XII',\n    13: 'XIII',\n    14: 'XIV'\n  }\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const delta = 0.5 * options.lineWidth\n  const valence: any = {}\n  valence.text = mapValence[atom.a.explicitValence]\n  if (!valence.text) {\n    throw new Error('invalid valence ' + atom.a.explicitValence.toString())\n  }\n  valence.text = '(' + valence.text + ')'\n  valence.path = render.paper.text(ps.x, ps.y, valence.text).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: atom.color\n  })\n  valence.rbb = util.relBox(valence.path.getBBox())\n  draw.recenterText(valence.path, valence.rbb)\n  /* eslint-disable no-mixed-operators */\n  pathAndRBoxTranslate(\n    valence.path,\n    valence.rbb,\n    rightMargin + 0.5 * valence.rbb.width + delta,\n    -0.3 * atom.label!.rbb.height\n  )\n  /* eslint-enable no-mixed-operators */\n  return valence\n}\n\nfunction showHydrogen(\n  atom: ReAtom,\n  render: Render,\n  implh: number,\n  data: {\n    hydrogen: any\n    hydroIndex: number\n    rightMargin: number\n    leftMargin: number\n  }\n): {\n  hydrogen: ElemAttr\n  hydroIndex: ElemAttr\n  rightMargin: number\n  leftMargin: number\n} {\n  // eslint-disable-line max-statements\n  let hydroIndex: any = data.hydroIndex\n  const hydrogenLeft = atom.hydrogenOnTheLeft\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const delta = 0.5 * options.lineWidth\n  const hydrogen = data.hydrogen\n  hydrogen.text = 'H'\n  hydrogen.path = render.paper.text(ps.x, ps.y, hydrogen.text).attr({\n    font: options.font,\n    'font-size': options.fontsz,\n    fill: atom.color\n  })\n  hydrogen.rbb = util.relBox(hydrogen.path.getBBox())\n  draw.recenterText(hydrogen.path, hydrogen.rbb)\n  if (!hydrogenLeft) {\n    pathAndRBoxTranslate(\n      hydrogen.path,\n      hydrogen.rbb,\n      data.rightMargin + 0.5 * hydrogen.rbb.width + delta,\n      0\n    )\n    data.rightMargin += hydrogen.rbb.width + delta\n  }\n  if (implh > 1) {\n    hydroIndex = {}\n    hydroIndex.text = implh.toString()\n    hydroIndex.path = render.paper.text(ps.x, ps.y, hydroIndex.text).attr({\n      font: options.font,\n      'font-size': options.fontszsub,\n      fill: atom.color\n    })\n    hydroIndex.rbb = util.relBox(hydroIndex.path.getBBox())\n    draw.recenterText(hydroIndex.path, hydroIndex.rbb)\n    if (!hydrogenLeft) {\n      pathAndRBoxTranslate(\n        hydroIndex.path,\n        hydroIndex.rbb,\n        data.rightMargin +\n          0.5 * hydroIndex.rbb.width * (options.zoom > 1 ? 1 : options.zoom) +\n          delta,\n        0.2 * atom.label!.rbb.height\n      )\n      data.rightMargin += hydroIndex.rbb.width + delta\n    }\n  }\n  if (hydrogenLeft) {\n    if (hydroIndex != null) {\n      pathAndRBoxTranslate(\n        hydroIndex.path,\n        hydroIndex.rbb,\n        data.leftMargin - 0.5 * hydroIndex.rbb.width - delta,\n        0.2 * atom.label!.rbb.height\n      )\n      data.leftMargin -= hydroIndex.rbb.width + delta\n    }\n    pathAndRBoxTranslate(\n      hydrogen.path,\n      hydrogen.rbb,\n      data.leftMargin -\n        0.5 *\n          hydrogen.rbb.width *\n          (implh > 1 && options.zoom < 1 ? options.zoom : 1) -\n        delta,\n      0\n    )\n    data.leftMargin -= hydrogen.rbb.width + delta\n  }\n  return Object.assign(data, { hydrogen, hydroIndex })\n}\n\nfunction showWarning(\n  atom,\n  render,\n  leftMargin,\n  rightMargin\n): { rbb: DOMRect; path: any } {\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const delta = 0.5 * render.options.lineWidth\n  const tfx = util.tfx\n  const warning: any = {}\n  const y = ps.y + atom.label.rbb.height / 2 + delta\n  warning.path = render.paper\n    .path(\n      'M{0},{1}L{2},{3}',\n      tfx(ps.x + leftMargin),\n      tfx(y),\n      tfx(ps.x + rightMargin),\n      tfx(y)\n    )\n    .attr(render.options.lineattr)\n    .attr({ stroke: '#F00' })\n  warning.rbb = util.relBox(warning.path.getBBox())\n  return warning\n}\n\nfunction showAttpnt(atom, render, lsb, addReObjectPath) {\n  // eslint-disable-line max-statements\n  const asterisk = '∗'\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const tfx = util.tfx\n  let i, j\n  for (i = 0; i < 4; ++i) {\n    let attpntText = ''\n    if (atom.a.attpnt & (1 << i)) {\n      if (attpntText.length > 0) attpntText += ' '\n      attpntText += asterisk\n      for (j = 0; j < (i === 0 ? 0 : i + 1); ++j) attpntText += \"'\"\n      let pos0 = new Vec2(ps)\n      let pos1 = ps.addScaled(lsb, 0.7 * options.scale)\n\n      const attpntPath1 = render.paper.text(pos1.x, pos1.y, attpntText).attr({\n        font: options.font,\n        'font-size': options.fontsz,\n        fill: atom.color\n      })\n      const attpntRbb = util.relBox(attpntPath1.getBBox())\n      draw.recenterText(attpntPath1, attpntRbb)\n\n      const lsbn = lsb.negated()\n      /* eslint-disable no-mixed-operators */\n      pos1 = pos1.addScaled(\n        lsbn,\n        util.shiftRayBox(pos1, lsbn, Box2Abs.fromRelBox(attpntRbb)) +\n          options.lineWidth / 2\n      )\n      /* eslint-enable no-mixed-operators */\n      pos0 = shiftBondEnd(atom, pos0, lsb, options.lineWidth)\n      const n = lsb.rotateSC(1, 0)\n      const arrowLeft = pos1\n        .addScaled(n, 0.05 * options.scale)\n        .addScaled(lsbn, 0.09 * options.scale)\n      const arrowRight = pos1\n        .addScaled(n, -0.05 * options.scale)\n        .addScaled(lsbn, 0.09 * options.scale)\n      const attpntPath = render.paper.set()\n      attpntPath.push(\n        attpntPath1,\n        render.paper\n          .path(\n            'M{0},{1}L{2},{3}M{4},{5}L{2},{3}L{6},{7}',\n            tfx(pos0.x),\n            tfx(pos0.y),\n            tfx(pos1.x),\n            tfx(pos1.y),\n            tfx(arrowLeft.x),\n            tfx(arrowLeft.y),\n            tfx(arrowRight.x),\n            tfx(arrowRight.y)\n          )\n          .attr(render.options.lineattr)\n          .attr({ 'stroke-width': options.lineWidth / 2 })\n      )\n      addReObjectPath(LayerMap.indices, atom.visel, attpntPath, ps)\n      lsb = lsb.rotate(Math.PI / 6)\n    }\n  }\n}\n\n// function getStereoLabelText(atom, aid, render) {\n// \tconst struct = render.ctab.molecule;\n// \tconst frag = struct.frags.get(atom.a.fragment);\n// \tconst stereo = frag.getStereoAtomMark(aid);\n// \tif (!stereo.type) return null;\n//\n// \treturn stereo.type + (stereo.number || '');\n// }\n\nfunction getAamText(atom) {\n  let aamText = ''\n  if (atom.a.aam > 0) aamText += atom.a.aam\n  if (atom.a.invRet > 0) {\n    if (aamText.length > 0) aamText += ','\n    if (atom.a.invRet === 1) aamText += 'Inv'\n    else if (atom.a.invRet === 2) aamText += 'Ret'\n    else throw new Error('Invalid value for the invert/retain flag')\n  }\n  if (atom.a.exactChangeFlag > 0) {\n    if (aamText.length > 0) aamText += ','\n    if (atom.a.exactChangeFlag === 1) aamText += 'ext'\n    else throw new Error('Invalid value for the exact change flag')\n  }\n  return aamText\n}\n\nfunction getQueryAttrsText(atom) {\n  let queryAttrsText = ''\n  if (atom.a.ringBondCount !== 0) {\n    if (atom.a.ringBondCount > 0) {\n      queryAttrsText += 'rb' + atom.a.ringBondCount.toString()\n    } else if (atom.a.ringBondCount === -1) queryAttrsText += 'rb0'\n    else if (atom.a.ringBondCount === -2) queryAttrsText += 'rb*'\n    else throw new Error('Ring bond count invalid')\n  }\n  if (atom.a.substitutionCount !== 0) {\n    if (queryAttrsText.length > 0) queryAttrsText += ','\n    if (atom.a.substitutionCount > 0) {\n      queryAttrsText += 's' + atom.a.substitutionCount.toString()\n    } else if (atom.a.substitutionCount === -1) queryAttrsText += 's0'\n    else if (atom.a.substitutionCount === -2) queryAttrsText += 's*'\n    else throw new Error('Substitution count invalid')\n  }\n  if (atom.a.unsaturatedAtom > 0) {\n    if (queryAttrsText.length > 0) queryAttrsText += ','\n    if (atom.a.unsaturatedAtom === 1) queryAttrsText += 'u'\n    else throw new Error('Unsaturated atom invalid value')\n  }\n  if (atom.a.hCount > 0) {\n    if (queryAttrsText.length > 0) queryAttrsText += ','\n    queryAttrsText += 'H' + (atom.a.hCount - 1).toString()\n  }\n  return queryAttrsText\n}\n\nfunction pathAndRBoxTranslate(path, rbb, x, y) {\n  path.translateAbs(x, y)\n  rbb.x += x\n  rbb.y += y\n}\n\nfunction bisectLargestSector(atom: ReAtom, struct: Struct) {\n  let angles: Array<number> = []\n  atom.a.neighbors.forEach((hbid) => {\n    const hb = struct.halfBonds.get(hbid)\n    hb && angles.push(hb.ang)\n  })\n  angles = angles.sort((a, b) => a - b)\n  const da: Array<number> = []\n  for (let i = 0; i < angles.length - 1; ++i) {\n    da.push(angles[(i + 1) % angles.length] - angles[i])\n  }\n  da.push(angles[0] - angles[angles.length - 1] + 2 * Math.PI)\n  let daMax = 0\n  let ang = -Math.PI / 2\n  for (let i = 0; i < angles.length; ++i) {\n    if (da[i] > daMax) {\n      daMax = da[i]\n      ang = angles[i] + da[i] / 2\n    }\n  }\n  return new Vec2(Math.cos(ang), Math.sin(ang))\n}\n\nfunction shiftBondEnd(atom, pos0, dir, margin) {\n  let t = 0\n  const visel = atom.visel\n  for (let k = 0; k < visel.exts.length; ++k) {\n    const box = visel.exts[k].translate(pos0)\n    t = Math.max(t, util.shiftRayBox(pos0, dir, box))\n  }\n  if (t > 0) pos0 = pos0.addScaled(dir, t + margin)\n  return pos0\n}\n\nexport default ReAtom\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  Bond,\n  FunctionalGroup,\n  HalfBond,\n  Struct,\n  Vec2\n} from 'domain/entities'\nimport { LayerMap, StereoColoringType } from './generalEnumTypes'\nimport ReAtom, { getColorFromStereoLabel } from './reatom'\n\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\nclass ReBond extends ReObject {\n  b: Bond\n  doubleBondShift: number\n  path: any\n  neihbid1 = -1\n  neihbid2 = -1\n  boldStereo?: boolean\n  rbb?: { x: number; y: number; width: number; height: number }\n\n  constructor(bond: Bond) {\n    super('bond')\n    this.b = bond // TODO rename b to item\n    this.doubleBondShift = 0\n  }\n\n  static isSelectable() {\n    return true\n  }\n\n  drawHover(render: Render) {\n    const ret = this.makeHoverPlate(render)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  makeHoverPlate(render: Render) {\n    const options = render.options\n    bondRecalc(this, render.ctab, options)\n    const bond = this.b\n    const sgroups = render.ctab.sgroups\n    const functionalGroups = render.ctab.molecule.functionalGroups\n    if (\n      FunctionalGroup.isBondInContractedFunctionalGroup(\n        bond,\n        sgroups,\n        functionalGroups\n      )\n    ) {\n      return null\n    }\n\n    const c = Scale.obj2scaled(this.b.center, options)\n    return render.paper\n      .circle(c.x, c.y, 0.8 * options.atomSelectionPlateRadius)\n      .attr(options.hoverStyle)\n  }\n\n  makeSelectionPlate(restruct: ReStruct, paper: any, options: any) {\n    bondRecalc(this, restruct, options)\n    const bond = this.b\n    const sgroups = restruct.render.ctab.sgroups\n    const functionalGroups = restruct.render.ctab.molecule.functionalGroups\n    if (\n      FunctionalGroup.isBondInContractedFunctionalGroup(\n        bond,\n        sgroups,\n        functionalGroups\n      )\n    ) {\n      return null\n    }\n\n    const c = Scale.obj2scaled(this.b.center, options)\n    return paper\n      .circle(c.x, c.y, 0.8 * options.atomSelectionPlateRadius)\n      .attr(options.selectionStyle)\n  }\n\n  show(restruct: ReStruct, bid: number, options: any): void {\n    // eslint-disable-line max-statements\n    const render = restruct.render\n    const struct = restruct.molecule\n    const bond = restruct.molecule.bonds.get(bid)\n    const sgroups = restruct.molecule.sgroups\n    const functionalGroups = restruct.molecule.functionalGroups\n    if (\n      bond &&\n      FunctionalGroup.isBondInContractedFunctionalGroup(\n        bond,\n        sgroups,\n        functionalGroups\n      )\n    ) {\n      return\n    }\n\n    const paper = render.paper\n    const hb1 =\n      this.b.hb1 !== undefined ? struct.halfBonds.get(this.b.hb1) : null\n    const hb2 =\n      this.b.hb2 !== undefined ? struct.halfBonds.get(this.b.hb2) : null\n\n    checkStereoBold(bid, this, restruct)\n    bondRecalc(this, restruct, options)\n    setDoubleBondShift(this, struct)\n    if (!hb1 || !hb2) return\n    this.path = getBondPath(restruct, this, hb1, hb2)\n    this.rbb = util.relBox(this.path.getBBox())\n    restruct.addReObjectPath(LayerMap.data, this.visel, this.path, null, true)\n    const reactingCenter: any = {}\n    reactingCenter.path = getReactingCenterPath(render, this, hb1, hb2)\n    if (reactingCenter.path) {\n      reactingCenter.rbb = util.relBox(reactingCenter.path.getBBox())\n      restruct.addReObjectPath(\n        LayerMap.data,\n        this.visel,\n        reactingCenter.path,\n        null,\n        true\n      )\n    }\n    const topology: any = {}\n    topology.path = getTopologyMark(render, this, hb1, hb2)\n    if (topology.path) {\n      topology.rbb = util.relBox(topology.path.getBBox())\n      restruct.addReObjectPath(\n        LayerMap.data,\n        this.visel,\n        topology.path,\n        null,\n        true\n      )\n    }\n    this.setHover(this.hover, render)\n\n    let ipath = null\n    const bondIdxOff = options.subFontSize * 0.6\n    if (options.showBondIds) {\n      ipath = getIdsPath(bid, paper, hb1, hb2, bondIdxOff, 0.5, 0.5, hb1.norm)\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath)\n    }\n    if (options.showHalfBondIds) {\n      ipath = getIdsPath(\n        this.b.hb1!,\n        paper,\n        hb1,\n        hb2,\n        bondIdxOff,\n        0.8,\n        0.2,\n        hb1.norm\n      )\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath)\n      ipath = getIdsPath(\n        this.b.hb2!,\n        paper,\n        hb1,\n        hb2,\n        bondIdxOff,\n        0.2,\n        0.8,\n        hb2.norm\n      )\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath)\n    }\n    if (options.showLoopIds && !options.showBondIds) {\n      ipath = getIdsPath(\n        hb1.loop,\n        paper,\n        hb1,\n        hb2,\n        bondIdxOff,\n        0.5,\n        0.5,\n        hb2.norm\n      )\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath)\n      ipath = getIdsPath(\n        hb2.loop,\n        paper,\n        hb1,\n        hb2,\n        bondIdxOff,\n        0.5,\n        0.5,\n        hb1.norm\n      )\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath)\n    }\n\n    // Checking whether bond is highlighted and what is the last color\n    const highlights = restruct.molecule.highlights\n    let isHighlighted = false\n    let highlightColor = ''\n    highlights.forEach((highlight) => {\n      const hasCurrentHighlight = highlight.bonds?.includes(bid)\n      isHighlighted = isHighlighted || hasCurrentHighlight\n      if (hasCurrentHighlight) {\n        highlightColor = highlight.color\n      }\n    })\n\n    // Drawing highlight\n    if (isHighlighted) {\n      const style = {\n        fill: highlightColor,\n        stroke: highlightColor,\n        'stroke-width': options.lineattr['stroke-width'] * 7,\n        'stroke-linecap': 'round'\n      }\n\n      const c = Scale.obj2scaled(this.b.center, restruct.render.options)\n\n      const highlightPath = getHighlightPath(restruct, hb1, hb2)\n      highlightPath.attr(style)\n\n      restruct.addReObjectPath(\n        LayerMap.hovering,\n        this.visel,\n        highlightPath,\n        c,\n        true\n      )\n    }\n  }\n}\n\nfunction getHighlightPath(restruct: ReStruct, hb1: HalfBond, hb2: HalfBond) {\n  const beginning = { x: hb1.p.x, y: hb1.p.y }\n  const end = { x: hb2.p.x, y: hb2.p.y }\n\n  const paper = restruct.render.paper\n\n  const pathString = `M${beginning.x},${beginning.y} L${end.x},${end.y}`\n\n  const path = paper.path(pathString)\n\n  return path\n}\n\nfunction findIncomingStereoUpBond(\n  atom: Atom,\n  bid0: number,\n  includeBoldStereoBond: boolean,\n  restruct: ReStruct\n): number {\n  return atom.neighbors.findIndex((hbid) => {\n    const hb = restruct.molecule.halfBonds.get(hbid)\n\n    if (!hb || hb.bid === bid0) return false\n\n    const neibond = restruct.bonds.get(hb.bid)\n\n    if (!neibond) return false\n    const singleUp =\n      neibond.b.type === Bond.PATTERN.TYPE.SINGLE &&\n      neibond.b.stereo === Bond.PATTERN.STEREO.UP\n\n    if (singleUp) {\n      return (\n        neibond.b.end === hb.begin ||\n        (neibond.boldStereo && includeBoldStereoBond)\n      )\n    }\n\n    return !!(\n      neibond.b.type === Bond.PATTERN.TYPE.DOUBLE &&\n      neibond.b.stereo === Bond.PATTERN.STEREO.NONE &&\n      includeBoldStereoBond &&\n      neibond.boldStereo\n    )\n  })\n}\n\nfunction findIncomingUpBonds(\n  bid0: number,\n  bond: ReBond,\n  restruct: ReStruct\n): void {\n  const halfbonds = [bond.b.begin, bond.b.end].map((aid) => {\n    const atom = restruct.molecule.atoms.get(aid)\n    if (!atom) return -1\n    const pos = findIncomingStereoUpBond(atom, bid0, true, restruct)\n    return pos < 0 ? -1 : atom.neighbors[pos]\n  })\n\n  bond.neihbid1 = restruct.atoms.get(bond.b.begin)?.showLabel\n    ? -1\n    : halfbonds[0]\n  bond.neihbid2 = restruct.atoms.get(bond.b.end)?.showLabel ? -1 : halfbonds[1]\n}\n\nfunction checkStereoBold(bid0, bond, restruct) {\n  const halfbonds = [bond.b.begin, bond.b.end].map((aid) => {\n    const atom = restruct.molecule.atoms.get(aid)\n    const pos = findIncomingStereoUpBond(atom, bid0, false, restruct)\n    return pos < 0 ? -1 : atom.neighbors[pos]\n  })\n  bond.boldStereo = halfbonds[0] >= 0 && halfbonds[1] >= 0\n}\n\nfunction getBondPath(\n  restruct: ReStruct,\n  bond: ReBond,\n  hb1: HalfBond,\n  hb2: HalfBond\n) {\n  let path = null\n  const render = restruct.render\n  const struct = restruct.molecule\n  const shiftA = !restruct.atoms.get(hb1.begin)?.showLabel\n  const shiftB = !restruct.atoms.get(hb2.begin)?.showLabel\n\n  switch (bond.b.type) {\n    case Bond.PATTERN.TYPE.SINGLE:\n      switch (bond.b.stereo) {\n        case Bond.PATTERN.STEREO.UP:\n          findIncomingUpBonds(hb1.bid, bond, restruct)\n          if (bond.boldStereo && bond.neihbid1 >= 0 && bond.neihbid2 >= 0) {\n            path = getBondSingleStereoBoldPath(render, hb1, hb2, bond, struct)\n          } else path = getBondSingleUpPath(render, hb1, hb2, bond, struct)\n          break\n        case Bond.PATTERN.STEREO.DOWN:\n          path = getBondSingleDownPath(render, hb1, hb2, bond, struct)\n          break\n        case Bond.PATTERN.STEREO.EITHER:\n          path = getBondSingleEitherPath(render, hb1, hb2, bond, struct)\n          break\n        default:\n          path = draw.bondSingle(\n            render.paper,\n            hb1,\n            hb2,\n            render.options,\n            getStereoBondColor(render.options, bond, struct)\n          )\n          break\n      }\n      break\n    case Bond.PATTERN.TYPE.DOUBLE:\n      findIncomingUpBonds(hb1.bid, bond, restruct)\n      if (\n        bond.b.stereo === Bond.PATTERN.STEREO.NONE &&\n        bond.boldStereo &&\n        bond.neihbid1 >= 0 &&\n        bond.neihbid2 >= 0\n      ) {\n        path = getBondDoubleStereoBoldPath(\n          render,\n          hb1,\n          hb2,\n          bond,\n          struct,\n          shiftA,\n          shiftB\n        )\n      } else path = getBondDoublePath(render, hb1, hb2, bond, shiftA, shiftB)\n      break\n    case Bond.PATTERN.TYPE.TRIPLE:\n      path = draw.bondTriple(render.paper, hb1, hb2, render.options)\n      break\n    case Bond.PATTERN.TYPE.AROMATIC: {\n      const inAromaticLoop =\n        (hb1.loop >= 0 && struct.loops.get(hb1.loop)?.aromatic) ||\n        (hb2.loop >= 0 && struct.loops.get(hb2.loop)?.aromatic)\n      path = inAromaticLoop\n        ? draw.bondSingle(render.paper, hb1, hb2, render.options)\n        : getBondAromaticPath(render, hb1, hb2, bond, shiftA, shiftB)\n      break\n    }\n    case Bond.PATTERN.TYPE.SINGLE_OR_DOUBLE:\n      path = getSingleOrDoublePath(render, hb1, hb2)\n      break\n    case Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC:\n      path = getBondAromaticPath(render, hb1, hb2, bond, shiftA, shiftB)\n      break\n    case Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC:\n      path = getBondAromaticPath(render, hb1, hb2, bond, shiftA, shiftB)\n      break\n    case Bond.PATTERN.TYPE.ANY:\n      path = draw.bondAny(render.paper, hb1, hb2, render.options)\n      break\n    case Bond.PATTERN.TYPE.HYDROGEN:\n      path = draw.bondHydrogen(render.paper, hb1, hb2, render.options)\n      break\n    case Bond.PATTERN.TYPE.DATIVE:\n      path = draw.bondDative(render.paper, hb1, hb2, render.options)\n      break\n    default:\n      throw new Error('Bond type ' + bond.b.type + ' not supported')\n  }\n  return path\n}\n\n/* Get Path */\nfunction getBondSingleUpPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct\n) {\n  // eslint-disable-line max-params\n  const a = hb1.p\n  const b = hb2.p\n  const n = hb1.norm\n  const options = render.options\n  const bsp = 0.7 * options.stereoBond\n  let b2 = b.addScaled(n, bsp)\n  let b3 = b.addScaled(n, -bsp)\n  if (bond.neihbid2 >= 0) {\n    // if the end is shared with another up-bond heading this way\n    const coords = stereoUpBondGetCoordinates(\n      hb2,\n      bond.neihbid2,\n      options.stereoBond,\n      struct\n    )\n    b2 = coords[0]\n    b3 = coords[1]\n  }\n  return draw.bondSingleUp(\n    render.paper,\n    a,\n    b2,\n    b3,\n    options,\n    getStereoBondColor(options, bond, struct)\n  )\n}\n\nfunction getStereoBondColor(\n  options: any,\n  bond: ReBond,\n  struct: Struct\n): string {\n  const defaultColor = '#000'\n\n  if (bond.b.stereo === 0) return defaultColor\n\n  const beginAtomStereoLabel = struct.atoms.get(bond.b.begin)?.stereoLabel\n  const endAtomStereoLabel = struct.atoms.get(bond.b.end)?.stereoLabel\n\n  let stereoLabel = ''\n  if (beginAtomStereoLabel && !endAtomStereoLabel) {\n    stereoLabel = beginAtomStereoLabel\n  } else if (!beginAtomStereoLabel && endAtomStereoLabel) {\n    stereoLabel = endAtomStereoLabel\n  }\n\n  if (\n    // if no stereolabel presents or presents in both then use default color\n    !stereoLabel ||\n    options.colorStereogenicCenters === StereoColoringType.Off ||\n    options.colorStereogenicCenters === StereoColoringType.LabelsOnly\n  ) {\n    return defaultColor\n  }\n\n  return getColorFromStereoLabel(options, stereoLabel)\n}\n\nfunction getBondSingleStereoBoldPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct\n) {\n  // eslint-disable-line max-params\n  const options = render.options\n  const coords1 = stereoUpBondGetCoordinates(\n    hb1,\n    bond.neihbid1,\n    options.stereoBond,\n    struct\n  )\n  const coords2 = stereoUpBondGetCoordinates(\n    hb2,\n    bond.neihbid2,\n    options.stereoBond,\n    struct\n  )\n  const a1 = coords1[0]\n  const a2 = coords1[1]\n  const a3 = coords2[0]\n  const a4 = coords2[1]\n  return draw.bondSingleStereoBold(\n    render.paper,\n    a1,\n    a2,\n    a3,\n    a4,\n    options,\n    getStereoBondColor(options, bond, struct)\n  )\n}\n\nfunction getBondDoubleStereoBoldPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct,\n  shiftA: boolean,\n  shiftB: boolean\n) {\n  // eslint-disable-line max-params\n  const a = hb1.p\n  const b = hb2.p\n  const n = hb1.norm\n  const shift = bond.doubleBondShift\n  const bsp = 1.5 * render.options.stereoBond\n  let b1 = a.addScaled(n, bsp * shift)\n  let b2 = b.addScaled(n, bsp * shift)\n  if (shift > 0) {\n    if (shiftA) {\n      b1 = b1.addScaled(\n        hb1.dir,\n        bsp * getBondLineShift(hb1.rightCos, hb1.rightSin)\n      )\n    }\n    if (shiftB) {\n      b2 = b2.addScaled(\n        hb1.dir,\n        -bsp * getBondLineShift(hb2.leftCos, hb2.leftSin)\n      )\n    }\n  } else if (shift < 0) {\n    if (shiftA) {\n      b1 = b1.addScaled(\n        hb1.dir,\n        bsp * getBondLineShift(hb1.leftCos, hb1.leftSin)\n      )\n    }\n    if (shiftB) {\n      b2 = b2.addScaled(\n        hb1.dir,\n        -bsp * getBondLineShift(hb2.rightCos, hb2.rightSin)\n      )\n    }\n  }\n  const sgBondPath = getBondSingleStereoBoldPath(render, hb1, hb2, bond, struct)\n  return draw.bondDoubleStereoBold(\n    render.paper,\n    sgBondPath,\n    b1,\n    b2,\n    render.options,\n    getStereoBondColor(render.options, bond, struct)\n  )\n}\n\nfunction getBondLineShift(cos: number, sin: number): number {\n  if (sin < 0 || Math.abs(cos) > 0.9) return 0\n  return sin / (1 - cos)\n}\n\nfunction stereoUpBondGetCoordinates(\n  hb: HalfBond,\n  neihbid: number,\n  bondSpace: any,\n  struct: Struct\n): [Vec2, Vec2] {\n  const neihb = struct.halfBonds.get(neihbid)\n  const cos = Vec2.dot(hb.dir, neihb!.dir)\n  const sin = Vec2.cross(hb.dir, neihb!.dir)\n  const cosHalf = Math.sqrt(0.5 * (1 - cos))\n  const biss = neihb!.dir.rotateSC(\n    (sin >= 0 ? -1 : 1) * cosHalf,\n    Math.sqrt(0.5 * (1 + cos))\n  )\n\n  const denomAdd = 0.3\n  const scale = 0.7\n  const a1 = hb.p.addScaled(biss, (scale * bondSpace) / (cosHalf + denomAdd))\n  const a2 = hb.p.addScaled(\n    biss.negated(),\n    (scale * bondSpace) / (cosHalf + denomAdd)\n  )\n  return sin > 0 ? [a1, a2] : [a2, a1]\n}\n\nfunction getBondSingleDownPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct\n) {\n  const a = hb1.p\n  const b = hb2.p\n  const options = render.options\n  let d = b.sub(a)\n  const len = d.length() + 0.2\n  d = d.normalized()\n  const interval = 1.2 * options.lineWidth\n  const nlines =\n    Math.max(\n      Math.floor((len - options.lineWidth) / (options.lineWidth + interval)),\n      0\n    ) + 2\n  const step = len / (nlines - 1)\n  return draw.bondSingleDown(\n    render.paper,\n    hb1,\n    d,\n    nlines,\n    step,\n    options,\n    getStereoBondColor(options, bond, struct)\n  )\n}\n\nfunction getBondSingleEitherPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct\n) {\n  const a = hb1.p\n  const b = hb2.p\n  const options = render.options\n  let d = b.sub(a)\n  const len = d.length()\n  d = d.normalized()\n  const interval = 0.6 * options.lineWidth\n  const nlines =\n    Math.max(\n      Math.floor((len - options.lineWidth) / (options.lineWidth + interval)),\n      0\n    ) + 2\n  const step = len / (nlines - 0.5)\n  return draw.bondSingleEither(\n    render.paper,\n    hb1,\n    d,\n    nlines,\n    step,\n    options,\n    getStereoBondColor(options, bond, struct)\n  )\n}\n\nfunction getBondDoublePath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  shiftA: boolean,\n  shiftB: boolean\n) {\n  // eslint-disable-line max-params, max-statements\n  const cisTrans = bond.b.stereo === Bond.PATTERN.STEREO.CIS_TRANS\n\n  const a = hb1.p\n  const b = hb2.p\n  const n = hb1.norm\n  const shift = cisTrans ? 0 : bond.doubleBondShift\n\n  const options = render.options\n  const bsp = options.bondSpace / 2\n  const s1 = bsp + shift * bsp\n  const s2 = -bsp + shift * bsp\n\n  let a1 = a.addScaled(n, s1)\n  let b1 = b.addScaled(n, s1)\n  let a2 = a.addScaled(n, s2)\n  let b2 = b.addScaled(n, s2)\n\n  if (shift > 0) {\n    if (shiftA) {\n      a1 = a1.addScaled(\n        hb1.dir,\n        options.bondSpace * getBondLineShift(hb1.rightCos, hb1.rightSin)\n      )\n    }\n    if (shiftB) {\n      b1 = b1.addScaled(\n        hb1.dir,\n        -options.bondSpace * getBondLineShift(hb2.leftCos, hb2.leftSin)\n      )\n    }\n  } else if (shift < 0) {\n    if (shiftA) {\n      a2 = a2.addScaled(\n        hb1.dir,\n        options.bondSpace * getBondLineShift(hb1.leftCos, hb1.leftSin)\n      )\n    }\n    if (shiftB) {\n      b2 = b2.addScaled(\n        hb1.dir,\n        -options.bondSpace * getBondLineShift(hb2.rightCos, hb2.rightSin)\n      )\n    }\n  }\n\n  return draw.bondDouble(render.paper, a1, a2, b1, b2, cisTrans, options)\n}\n\nfunction getSingleOrDoublePath(render: Render, hb1: HalfBond, hb2: HalfBond) {\n  const a = hb1.p\n  const b = hb2.p\n  const options = render.options\n\n  let nSect =\n    Vec2.dist(a, b) / Number((options.bondSpace + options.lineWidth).toFixed())\n  if (!(nSect & 1)) nSect += 1\n  return draw.bondSingleOrDouble(render.paper, hb1, hb2, nSect, options)\n}\n\nfunction getBondAromaticPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  shiftA: boolean,\n  shiftB: boolean\n) {\n  // eslint-disable-line max-params\n  const dashdotPattern = [0.125, 0.125, 0.005, 0.125]\n  let mark: number | null = null\n  let dash: number[] | null = null\n  const options = render.options\n  const bondShift = bond.doubleBondShift\n\n  if (bond.b.type === Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC) {\n    mark = bondShift > 0 ? 1 : 2\n    dash = dashdotPattern.map((v) => v * options.scale)\n  }\n  if (bond.b.type === Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC) {\n    mark = 3\n    dash = dashdotPattern.map((v) => v * options.scale)\n  }\n  const paths = getAromaticBondPaths(\n    hb1,\n    hb2,\n    bondShift,\n    shiftA,\n    shiftB,\n    options.bondSpace,\n    mark,\n    dash\n  )\n  return draw.bondAromatic(render.paper, paths, bondShift, options)\n}\n\nfunction getAromaticBondPaths(\n  hb1: HalfBond,\n  hb2: HalfBond,\n  shift: number,\n  shiftA: boolean,\n  shiftB: boolean,\n  bondSpace: number,\n  mask: number | null,\n  dash: number[] | null\n) {\n  // eslint-disable-line max-params, max-statements\n  const a = hb1.p\n  const b = hb2.p\n  const n = hb1.norm\n  const bsp = bondSpace / 2\n  const s1 = bsp + shift * bsp\n  const s2 = -bsp + shift * bsp\n  let a2 = a.addScaled(n, s1)\n  let b2 = b.addScaled(n, s1)\n  let a3 = a.addScaled(n, s2)\n  let b3 = b.addScaled(n, s2)\n  if (shift > 0) {\n    if (shiftA) {\n      a2 = a2.addScaled(\n        hb1.dir,\n        bondSpace * getBondLineShift(hb1.rightCos, hb1.rightSin)\n      )\n    }\n    if (shiftB) {\n      b2 = b2.addScaled(\n        hb1.dir,\n        -bondSpace * getBondLineShift(hb2.leftCos, hb2.leftSin)\n      )\n    }\n  } else if (shift < 0) {\n    if (shiftA) {\n      a3 = a3.addScaled(\n        hb1.dir,\n        bondSpace * getBondLineShift(hb1.leftCos, hb1.leftSin)\n      )\n    }\n    if (shiftB) {\n      b3 = b3.addScaled(\n        hb1.dir,\n        -bondSpace * getBondLineShift(hb2.rightCos, hb2.rightSin)\n      )\n    }\n  }\n  return draw.aromaticBondPaths(a2, a3, b2, b3, mask, dash)\n}\n\nfunction getReactingCenterPath(\n  render: Render,\n  bond: ReBond,\n  hb1: HalfBond,\n  hb2: HalfBond\n) {\n  // eslint-disable-line max-statements\n  const a = hb1.p\n  const b = hb2.p\n  const c = b.add(a).scaled(0.5)\n  const d = b.sub(a).normalized()\n  const n = d.rotateSC(1, 0)\n\n  const p: Array<Vec2> = []\n\n  const lw = render.options.lineWidth\n  const bs = render.options.bondSpace / 2\n  const alongIntRc = lw // half interval along for CENTER\n  const alongIntMadeBroken = 2 * lw // half interval between along for MADE_OR_BROKEN\n  const alongSz = 1.5 * bs // half size along for CENTER\n  const acrossInt = 1.5 * bs // half interval across for CENTER\n  const acrossSz = 3.0 * bs // half size across for all\n  const tiltTan = 0.2 // tangent of the tilt angle\n\n  switch (bond.b.reactingCenterStatus) {\n    case Bond.PATTERN.REACTING_CENTER.NOT_CENTER: // X\n      p.push(c.addScaled(n, acrossSz).addScaled(d, tiltTan * acrossSz))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, -tiltTan * acrossSz))\n      p.push(c.addScaled(n, acrossSz).addScaled(d, -tiltTan * acrossSz))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, tiltTan * acrossSz))\n      break\n    case Bond.PATTERN.REACTING_CENTER.CENTER: // #\n      p.push(\n        c\n          .addScaled(n, acrossSz)\n          .addScaled(d, tiltTan * acrossSz)\n          .addScaled(d, alongIntRc)\n      )\n      p.push(\n        c\n          .addScaled(n, -acrossSz)\n          .addScaled(d, -tiltTan * acrossSz)\n          .addScaled(d, alongIntRc)\n      )\n      p.push(\n        c\n          .addScaled(n, acrossSz)\n          .addScaled(d, tiltTan * acrossSz)\n          .addScaled(d, -alongIntRc)\n      )\n      p.push(\n        c\n          .addScaled(n, -acrossSz)\n          .addScaled(d, -tiltTan * acrossSz)\n          .addScaled(d, -alongIntRc)\n      )\n      p.push(c.addScaled(d, alongSz).addScaled(n, acrossInt))\n      p.push(c.addScaled(d, -alongSz).addScaled(n, acrossInt))\n      p.push(c.addScaled(d, alongSz).addScaled(n, -acrossInt))\n      p.push(c.addScaled(d, -alongSz).addScaled(n, -acrossInt))\n      break\n    // case Bond.PATTERN.REACTING_CENTER.UNCHANGED: draw a circle\n    case Bond.PATTERN.REACTING_CENTER.MADE_OR_BROKEN:\n      p.push(c.addScaled(n, acrossSz).addScaled(d, alongIntMadeBroken))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, alongIntMadeBroken))\n      p.push(c.addScaled(n, acrossSz).addScaled(d, -alongIntMadeBroken))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, -alongIntMadeBroken))\n      break\n    case Bond.PATTERN.REACTING_CENTER.ORDER_CHANGED:\n      p.push(c.addScaled(n, acrossSz))\n      p.push(c.addScaled(n, -acrossSz))\n      break\n    case Bond.PATTERN.REACTING_CENTER.MADE_OR_BROKEN_AND_CHANGED:\n      p.push(c.addScaled(n, acrossSz).addScaled(d, alongIntMadeBroken))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, alongIntMadeBroken))\n      p.push(c.addScaled(n, acrossSz).addScaled(d, -alongIntMadeBroken))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, -alongIntMadeBroken))\n      p.push(c.addScaled(n, acrossSz))\n      p.push(c.addScaled(n, -acrossSz))\n      break\n    default:\n      return null\n  }\n  return draw.reactingCenter(render.paper, p, render.options)\n}\n\nfunction getTopologyMark(\n  render: Render,\n  bond: ReBond,\n  hb1: HalfBond,\n  hb2: HalfBond\n) {\n  // eslint-disable-line max-statements\n  const options = render.options\n  let mark: string | null = null\n\n  if (bond.b.topology === Bond.PATTERN.TOPOLOGY.RING) mark = 'rng'\n  else if (bond.b.topology === Bond.PATTERN.TOPOLOGY.CHAIN) mark = 'chn'\n  else return null\n\n  const a = hb1.p\n  const b = hb2.p\n  const c = b.add(a).scaled(0.5)\n  const d = b.sub(a).normalized()\n  let n = d.rotateSC(1, 0)\n  let fixed = options.lineWidth\n  if (bond.doubleBondShift > 0) n = n.scaled(-bond.doubleBondShift)\n  else if (bond.doubleBondShift === 0) fixed += options.bondSpace / 2\n\n  const s = new Vec2(2, 1).scaled(options.bondSpace)\n  if (bond.b.type === Bond.PATTERN.TYPE.TRIPLE) fixed += options.bondSpace\n  const p = c.add(new Vec2(n.x * (s.x + fixed), n.y * (s.y + fixed)))\n\n  return draw.topologyMark(render.paper, p, mark, options)\n}\n\nfunction getIdsPath(\n  bid: number,\n  paper: any,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bondIdxOff: number,\n  param1: number,\n  param2: number,\n  norm: Vec2\n) {\n  // eslint-disable-line max-params\n  const pb = Vec2.lc(hb1.p, param1, hb2.p, param2, norm, bondIdxOff)\n  const ipath = paper.text(pb.x, pb.y, bid.toString())\n  const irbb = util.relBox(ipath.getBBox())\n  draw.recenterText(ipath, irbb)\n  return ipath\n}\n/* ----- */\n\nfunction setDoubleBondShift(bond: ReBond, struct: Struct): void {\n  const hb1 = bond.b.hb1\n  const hb2 = bond.b.hb2\n\n  if ((!hb1 && hb1 !== 0) || (!hb2 && hb2 !== 0)) {\n    bond.doubleBondShift = selectDoubleBondShiftChain(struct, bond)\n    return\n  }\n\n  const loop1 = struct.halfBonds.get(hb1)!.loop\n  const loop2 = struct.halfBonds.get(hb2)!.loop\n  if (loop1 >= 0 && loop2 >= 0) {\n    const d1 = struct.loops.get(loop1)!.dblBonds\n    const d2 = struct.loops.get(loop2)!.dblBonds\n    const n1 = struct.loops.get(loop1)!.hbs.length\n    const n2 = struct.loops.get(loop2)!.hbs.length\n    bond.doubleBondShift = selectDoubleBondShift(n1, n2, d1, d2)\n  } else if (loop1 >= 0) {\n    bond.doubleBondShift = -1\n  } else if (loop2 >= 0) {\n    bond.doubleBondShift = 1\n  } else {\n    bond.doubleBondShift = selectDoubleBondShiftChain(struct, bond)\n  }\n}\n\nfunction bondRecalc(bond: ReBond, restruct: ReStruct, options: any): void {\n  const render = restruct.render\n  const atom1 = restruct.atoms.get(bond.b.begin)\n  const atom2 = restruct.atoms.get(bond.b.end)\n\n  if (\n    !atom1 ||\n    !atom2 ||\n    bond.b.hb1 === undefined ||\n    bond.b.hb2 === undefined\n  ) {\n    return\n  }\n\n  const p1 = Scale.obj2scaled(atom1.a.pp, render.options)\n  const p2 = Scale.obj2scaled(atom2.a.pp, render.options)\n  const hb1 = restruct.molecule.halfBonds.get(bond.b.hb1)\n  const hb2 = restruct.molecule.halfBonds.get(bond.b.hb2)\n\n  if (!hb1?.dir || !hb2?.dir) return\n\n  hb1.p = shiftBondEnd(atom1, p1, hb1.dir, 2 * options.lineWidth)\n  hb2.p = shiftBondEnd(atom2, p2, hb2.dir, 2 * options.lineWidth)\n  bond.b.center = Vec2.lc2(atom1.a.pp, 0.5, atom2.a.pp, 0.5)\n  bond.b.len = Vec2.dist(p1, p2)\n  bond.b.sb = options.lineWidth * 5\n  /* eslint-disable no-mixed-operators */\n  bond.b.sa = Math.max(bond.b.sb, bond.b.len / 2 - options.lineWidth * 2)\n  /* eslint-enable no-mixed-operators */\n  bond.b.angle = (Math.atan2(hb1.dir.y, hb1.dir.x) * 180) / Math.PI\n}\n\nfunction shiftBondEnd(\n  atom: ReAtom,\n  pos0: Vec2,\n  dir: Vec2,\n  margin: number\n): Vec2 {\n  let t = 0\n  const visel = atom.visel\n  for (let k = 0; k < visel.exts.length; ++k) {\n    const box = visel.exts[k].translate(pos0)\n    t = Math.max(t, util.shiftRayBox(pos0, dir, box))\n  }\n  if (t > 0) pos0 = pos0.addScaled(dir, t + margin)\n  return pos0\n}\n\nfunction selectDoubleBondShift(\n  n1: number,\n  n2: number,\n  d1: number,\n  d2: number\n): number {\n  if (n1 === 6 && n2 !== 6 && (d1 > 1 || d2 === 1)) return -1\n  if (n2 === 6 && n1 !== 6 && (d2 > 1 || d1 === 1)) return 1\n  if (n2 * d1 > n1 * d2) return -1\n  if (n2 * d1 < n1 * d2) return 1\n  if (n2 > n1) return -1\n  return 1\n}\n\nfunction selectDoubleBondShiftChain(struct: Struct, bond: ReBond): number {\n  if ((!bond.b.hb1 && bond.b.hb1 !== 0) || (!bond.b.hb2 && bond.b.hb2 !== 0)) {\n    return 0\n  }\n\n  const hb1 = struct.halfBonds.get(bond.b.hb1)\n  const hb2 = struct.halfBonds.get(bond.b.hb2)\n  if (!hb1 || !hb2) return 0\n  const nLeft = (hb1.leftSin > 0.3 ? 1 : 0) + (hb2.rightSin > 0.3 ? 1 : 0)\n  const nRight = (hb2.leftSin > 0.3 ? 1 : 0) + (hb1.rightSin > 0.3 ? 1 : 0)\n  if (nLeft > nRight) return -1\n  if (nLeft < nRight) return 1\n  if ((hb1.leftSin > 0.3 ? 1 : 0) + (hb1.rightSin > 0.3 ? 1 : 0) === 1) return 1\n  return 0\n}\n\nexport default ReBond\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, Fragment, StereoFlag } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\n\nclass ReEnhancedFlag extends ReObject {\n  #path: any\n\n  constructor() {\n    super('enhancedFlag')\n  }\n\n  static isSelectable() {\n    return true\n  }\n\n  hoverPath(render: Render): any {\n    const box = Box2Abs.fromRelBox(this.#path.getBBox())\n    const sz = box.p1.sub(box.p0)\n    const p0 = box.p0.sub(render.options.offset)\n    return render.paper.rect(p0.x, p0.y, sz.x, sz.y)\n  }\n\n  drawHover(render: Render): any {\n    // TODO: after the enhanced flag stops being displayed, need to remove the reEnhancedflag object from ctab\n    if (!this.#path?.attrs) return null\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  makeSelectionPlate(restruct: ReStruct, _paper: any, options: any): any {\n    // TODO: after the enhanced flag stops being displayed, need to remove the reEnhancedflag object from ctab\n    if (!this.#path?.attrs) return null\n    return this.hoverPath(restruct.render).attr(options.selectionStyle)\n  }\n\n  show(restruct: ReStruct, fragmentId: number, options: any): void {\n    const render = restruct.render\n    const fragment = restruct.molecule.frags.get(fragmentId)\n    if (!fragment?.enhancedStereoFlag) return\n\n    const position = fragment.stereoFlagPosition\n      ? fragment.stereoFlagPosition\n      : Fragment.getDefaultStereoFlagPosition(restruct.molecule, fragmentId)!\n\n    const paper = render.paper\n    const ps = Scale.obj2scaled(position, options)\n\n    const stereoFlagMap = {\n      [StereoFlag.Abs]: options.absFlagLabel,\n      [StereoFlag.And]: options.andFlagLabel,\n      [StereoFlag.Mixed]: options.mixedFlagLabel,\n      [StereoFlag.Or]: options.orFlagLabel\n    }\n\n    if (options.showStereoFlags && !options.ignoreChiralFlag) {\n      this.#path = paper\n        .text(\n          ps.x,\n          ps.y,\n          fragment.enhancedStereoFlag\n            ? stereoFlagMap[fragment.enhancedStereoFlag]\n            : ''\n        )\n        .attr({\n          font: options.font,\n          'font-size': options.fontsz,\n          fill: '#000'\n        })\n    }\n    render.ctab.addReObjectPath(\n      LayerMap.data,\n      this.visel,\n      this.#path,\n      null,\n      true\n    )\n  }\n}\n\nexport default ReEnhancedFlag\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, Vec2 } from 'domain/entities'\n\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\n\nclass ReFrag extends ReObject {\n  constructor(/* Struct.Fragment */ frag) {\n    super('frag')\n    this.item = frag\n  }\n\n  static isSelectable() {\n    return false\n  }\n\n  fragGetAtoms(restruct, fid) {\n    return Array.from(restruct.atoms.keys()).filter(\n      (aid) => restruct.atoms.get(aid).a.fragment === fid\n    )\n  }\n\n  fragGetBonds(restruct, fid) {\n    return Array.from(restruct.bonds.keys()).filter((bid) => {\n      const bond = restruct.bonds.get(bid).b\n\n      const firstFrag = restruct.atoms.get(bond.begin).a.fragment\n      const secondFrag = restruct.atoms.get(bond.end).a.fragment\n\n      return firstFrag === fid && secondFrag === fid\n    })\n  }\n\n  calcBBox(restruct, fid, render) {\n    // TODO need to review parameter list\n    let ret\n    restruct.atoms.forEach((atom) => {\n      if (atom.a.fragment !== fid) return\n\n      // TODO ReObject.calcBBox to be used instead\n      let bba = atom.visel.boundingBox\n      if (!bba) {\n        bba = new Box2Abs(atom.a.pp, atom.a.pp)\n        const ext = new Vec2(0.05 * 3, 0.05 * 3)\n        bba = bba.extend(ext, ext)\n      } else {\n        if (!render) render = global._ui_editor.render // eslint-disable-line\n        bba = bba\n          .translate((render.options.offset || new Vec2()).negated())\n          .transform(Scale.scaled2obj, render.options)\n      }\n      ret = ret ? Box2Abs.union(ret, bba) : bba\n    })\n\n    return ret\n  }\n\n  // TODO need to review parameter list\n  _draw(render, fid, attrs) {\n    // eslint-disable-line no-underscore-dangle\n    const bb = this.calcBBox(render.ctab, fid, render)\n\n    if (bb) {\n      const p0 = Scale.obj2scaled(new Vec2(bb.p0.x, bb.p0.y), render.options)\n      const p1 = Scale.obj2scaled(new Vec2(bb.p1.x, bb.p1.y), render.options)\n      return render.paper\n        .rect(p0.x, p0.y, p1.x - p0.x, p1.y - p0.y, 0)\n        .attr(attrs)\n    }\n\n    // TODO abnormal situation, empty fragments must be destroyed by tools\n  }\n\n  draw(render) {\n    // eslint-disable-line no-unused-vars\n    return null // this._draw(render, fid, { 'stroke' : 'lightgray' }); // [RB] for debugging only\n  }\n\n  drawHover(render) {\n    // eslint-disable-line no-unused-vars\n    // Do nothing. This method shouldn't actually be called.\n  }\n\n  setHover(hover, render) {\n    let fid = render.ctab.frags.keyOf(this)\n\n    if (!fid && fid !== 0) {\n      console.warn('Fragment does not belong to the render')\n      return\n    }\n\n    fid = parseInt(fid, 10)\n\n    render.ctab.atoms.forEach((atom) => {\n      if (atom.a.fragment === fid) atom.setHover(hover, render)\n    })\n\n    render.ctab.bonds.forEach((bond) => {\n      if (render.ctab.atoms.get(bond.b.begin).a.fragment === fid) {\n        bond.setHover(hover, render)\n      }\n    })\n  }\n}\nexport default ReFrag\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, Vec2 } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\nconst BORDER_EXT = new Vec2(0.05 * 3, 0.05 * 3)\nclass ReRGroup extends ReObject {\n  constructor(/* RGroup */ rgroup) {\n    super('rgroup')\n    this.labelBox = null\n    this.item = rgroup\n  }\n\n  static isSelectable() {\n    return false\n  }\n\n  getAtoms(render) {\n    let ret = []\n    this.item.frags.forEach((fid) => {\n      ret = ret.concat(\n        render.ctab.frags.get(fid).fragGetAtoms(render.ctab, fid)\n      )\n    })\n    return ret\n  }\n\n  getBonds(render) {\n    let ret = []\n    this.item.frags.forEach((fid) => {\n      ret = ret.concat(\n        render.ctab.frags.get(fid).fragGetBonds(render.ctab, fid)\n      )\n    })\n    return ret\n  }\n\n  calcBBox(render) {\n    let ret = null\n    this.item.frags.forEach((fid) => {\n      const bbf = render.ctab.frags.get(fid).calcBBox(render.ctab, fid, render)\n      if (bbf) ret = ret ? Box2Abs.union(ret, bbf) : bbf\n    })\n\n    if (ret) ret = ret.extend(BORDER_EXT, BORDER_EXT)\n\n    return ret\n  }\n\n  // TODO need to review parameter list\n  draw(render, options) {\n    // eslint-disable-line max-statements\n    const bb = this.calcBBox(render)\n\n    if (!bb) {\n      console.error(\n        'Abnormal situation, empty fragments must be destroyed by tools'\n      )\n      return {}\n    }\n\n    const ret = { data: [] }\n    const p0 = Scale.obj2scaled(bb.p0, options)\n    const p1 = Scale.obj2scaled(bb.p1, options)\n    const brackets = render.paper.set()\n\n    rGroupdrawBrackets(brackets, render, bb) // eslint-disable-line new-cap\n\n    ret.data.push(brackets)\n    const key = render.ctab.rgroups.keyOf(this)\n    const labelSet = render.paper.set()\n    const label = render.paper\n      .text(p0.x, (p0.y + p1.y) / 2, 'R' + key + '=')\n      .attr({\n        font: options.font,\n        'font-size': options.fontRLabel,\n        fill: 'black'\n      })\n\n    const labelBox = util.relBox(label.getBBox())\n    label.translateAbs(-labelBox.width / 2 - options.lineWidth, 0)\n\n    labelSet.push(label)\n    const logicStyle = {\n      font: options.font,\n      'font-size': options.fontRLogic,\n      fill: 'black'\n    }\n\n    const logic = [rLogicToString(key, this.item)]\n\n    let shift = labelBox.height / 2 + options.lineWidth / 2\n    for (let i = 0; i < logic.length; ++i) {\n      const logicPath = render.paper\n        .text(p0.x, (p0.y + p1.y) / 2, logic[i])\n        .attr(logicStyle)\n      const logicBox = util.relBox(logicPath.getBBox())\n      shift += logicBox.height / 2\n      logicPath.translateAbs(-logicBox.width / 2 - 6 * options.lineWidth, shift)\n      shift += logicBox.height / 2 + options.lineWidth / 2\n      ret.data.push(logicPath)\n      labelSet.push(logicPath)\n    }\n\n    ret.data.push(label)\n    this.labelBox = Box2Abs.fromRelBox(labelSet.getBBox()).transform(\n      Scale.scaled2obj,\n      render.options\n    )\n    return ret\n  }\n\n  // TODO need to review parameter list\n  _draw(render, rgid, attrs) {\n    // eslint-disable-line no-underscore-dangle\n    if (!this.getVBoxObj(render)) return null\n    const bb = this.getVBoxObj(render).extend(BORDER_EXT, BORDER_EXT) // eslint-disable-line no-underscore-dangle\n\n    if (!bb) return null\n\n    const p0 = Scale.obj2scaled(bb.p0, render.options)\n    const p1 = Scale.obj2scaled(bb.p1, render.options)\n    return render.paper\n      .rect(p0.x, p0.y, p1.x - p0.x, p1.y - p0.y, 0)\n      .attr(attrs)\n  }\n\n  drawHover(render) {\n    const rgid = render.ctab.rgroups.keyOf(this)\n\n    if (!rgid) {\n      console.error(\n        'Abnormal situation, fragment does not belong to the render'\n      )\n      return null\n    }\n\n    const ret = this._draw(\n      render,\n      rgid,\n      render.options.hoverStyle /* { 'fill' : 'red' } */\n    ) // eslint-disable-line no-underscore-dangle\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n\n    this.item.frags.forEach((fnum, fid) => {\n      render.ctab.frags.get(fid).drawHover(render)\n    })\n\n    return ret\n  }\n\n  show(restruct, id, options) {\n    const drawing = this.draw(restruct.render, options)\n\n    Object.keys(drawing).forEach((group) => {\n      while (drawing[group].length > 0) {\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          drawing[group].shift(),\n          null,\n          true\n        )\n      }\n    })\n    // TODO rgroup selection & highlighting\n  }\n}\n\nfunction rGroupdrawBrackets(set, render, bb, d) {\n  d = Scale.obj2scaled(d || new Vec2(1, 0), render.options)\n  const bracketWidth = Math.min(0.25, bb.sz().x * 0.3)\n  const bracketHeight = bb.p1.y - bb.p0.y\n  const cy = 0.5 * (bb.p1.y + bb.p0.y)\n\n  const leftBracket = draw.bracket(\n    render.paper,\n    d.negated(),\n    d.negated().rotateSC(1, 0),\n    Scale.obj2scaled(new Vec2(bb.p0.x, cy), render.options),\n    bracketWidth,\n    bracketHeight,\n    render.options\n  )\n\n  const rightBracket = draw.bracket(\n    render.paper,\n    d,\n    d.rotateSC(1, 0),\n    Scale.obj2scaled(new Vec2(bb.p1.x, cy), render.options),\n    bracketWidth,\n    bracketHeight,\n    render.options\n  )\n\n  return set.push(leftBracket, rightBracket)\n}\n\nfunction rLogicToString(id, rLogic) {\n  const ifThen = rLogic.ifthen > 0 ? 'IF ' : ''\n\n  const rangeExists =\n    rLogic.range.startsWith('>') ||\n    rLogic.range.startsWith('<') ||\n    rLogic.range.startsWith('=')\n\n  let range = null\n  if (rLogic.range.length > 0) {\n    range = rangeExists ? rLogic.range : '=' + rLogic.range\n  } else range = '>0'\n\n  const restH = rLogic.resth ? ' (RestH)' : ''\n  const nextRg = rLogic.ifthen > 0 ? '\\nTHEN R' + rLogic.ifthen.toString() : ''\n\n  return `${ifThen}R${id.toString()}${range}${restH}${nextRg}`\n}\n\nexport default ReRGroup\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, RxnArrow, RxnArrowMode, Vec2 } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport Raphael from '../raphael-ext'\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\ntype Arrow = {\n  pos: Array<Vec2>\n  mode: RxnArrowMode\n  height?: number\n}\n\ntype ArrowParams = {\n  length: number\n  angle: number\n}\ninterface MinDistanceWithReferencePoint {\n  minDist: number\n  refPoint: Vec2 | null\n}\n\nclass ReRxnArrow extends ReObject {\n  item: Arrow\n\n  constructor(/* chem.RxnArrow */ arrow: Arrow) {\n    super('rxnArrow')\n    this.item = arrow\n  }\n\n  static isSelectable(): boolean {\n    return true\n  }\n\n  calcDistance(p: Vec2, s: any): MinDistanceWithReferencePoint {\n    const point: Vec2 = new Vec2(p.x, p.y)\n    const distRef: MinDistanceWithReferencePoint =\n      this.getReferencePointDistance(p)\n    const item = this.item\n    const pos = item.pos\n\n    let dist: number = calculateDistanceToLine(pos, point)\n\n    if (RxnArrow.isElliptical(item)) {\n      // currently an elliptical arrow is highlighted if a pointer is close to one of the 3 virtual lines\n      // that form a triangle from the arrow's 3 reference points\n      // TODO: make a better detection (maybe rectangular, so it's similar to visual highlight/selection)\n      const [startPoint, endPoint, middlePoint] = this.getReferencePoints()\n      dist = Math.min(\n        dist,\n        calculateDistanceToLine([startPoint, middlePoint], point),\n        calculateDistanceToLine([middlePoint, endPoint], point)\n      )\n    }\n\n    const refPoint: Vec2 | null =\n      distRef.minDist <= 8 / s ? distRef.refPoint : null\n    // distance is a smallest between dist to figure and it's reference points\n    dist = Math.min(distRef.minDist, dist)\n    return { minDist: dist, refPoint }\n  }\n\n  getReferencePointDistance(p: Vec2): MinDistanceWithReferencePoint {\n    const dist: any = []\n    const refPoints = this.getReferencePoints()\n    refPoints.forEach((rp) => {\n      dist.push({ minDist: Math.abs(Vec2.dist(p, rp)), refPoint: rp })\n    })\n\n    const minDist: MinDistanceWithReferencePoint = dist.reduce(\n      (acc, current) =>\n        !acc ? current : acc.minDist < current.minDist ? acc : current,\n      null\n    )\n\n    return minDist\n  }\n\n  hoverPath(render: Render) {\n    const path = this.generatePath(render, render.options, 'selection')\n\n    return render.paper.path(path)\n  }\n\n  drawHover(render: Render) {\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  getReferencePoints(): Array<Vec2> {\n    const refPoints: Array<Vec2> = []\n    const item = this.item\n    const [a, b] = item.pos\n    const height = item.height\n    refPoints.push(new Vec2(a.x, a.y))\n    refPoints.push(new Vec2(b.x, b.y))\n\n    if (RxnArrow.isElliptical(item)) {\n      const middlePoint = findMiddlePoint(height!, a, b)\n      refPoints.push(middlePoint)\n    }\n    return refPoints\n  }\n\n  makeSelectionPlate(restruct: ReStruct, _paper, styles) {\n    const render = restruct.render\n    const options = restruct.render.options\n\n    const refPoints = this.getReferencePoints()\n    const scaleFactor = options.scale\n    const selectionSet = restruct.render.paper.set()\n    selectionSet.push(\n      render.paper\n        .path(this.generatePath(render, options, 'selection'))\n        .attr(styles.selectionStyle)\n    )\n\n    refPoints.forEach((rp) => {\n      const scaledRP = Scale.obj2scaled(rp, restruct.render.options)\n      selectionSet.push(\n        restruct.render.paper\n          .circle(scaledRP.x, scaledRP.y, scaleFactor / 8)\n          .attr({ fill: 'black' })\n      )\n    })\n    return selectionSet\n  }\n\n  generatePath(render: Render, options, type) {\n    let path\n    const item = this.item\n    const height = RxnArrow.isElliptical(item) && item.height! * options.scale\n    const pos = item.pos.map((p) => {\n      return Scale.obj2scaled(p, options) || new Vec2()\n    })\n    const { length, angle } = this.getArrowParams(\n      pos[0].x,\n      pos[0].y,\n      pos[1].x,\n      pos[1].y\n    )\n\n    switch (type) {\n      case 'selection':\n        path = draw.rectangleArrowHighlightAndSelection(\n          render.paper,\n          { pos, height },\n          length,\n          angle,\n          options\n        )\n        break\n      case 'arrow':\n        path = draw.arrow(\n          render.paper,\n          { ...item, pos, height },\n          length,\n          angle,\n          options\n        )\n        break\n    }\n\n    return path\n  }\n\n  getArrowParams(x1, y1, x2, y2): ArrowParams {\n    const length = Math.hypot(x2 - x1, y2 - y1)\n    const angle = Raphael.angle(x1, y1, x2, y2) - 180\n\n    return { length, angle }\n  }\n\n  show(restruct: ReStruct, _id, options) {\n    const path = this.generatePath(restruct.render, options, 'arrow')\n\n    const offset = options.offset\n    if (offset != null) path.translateAbs(offset.x, offset.y)\n\n    this.visel.add(path, Box2Abs.fromRelBox(util.relBox(path.getBBox())))\n  }\n}\n\nfunction calculateDistanceToLine(pos: Array<Vec2>, point: Vec2): number {\n  let dist: number\n  if (\n    (point.x < Math.min(pos[0].x, pos[1].x) ||\n      point.x > Math.max(pos[0].x, pos[1].x)) &&\n    (point.y < Math.min(pos[0].y, pos[1].y) ||\n      point.y > Math.max(pos[0].y, pos[1].y))\n  ) {\n    dist = Math.min(Vec2.dist(pos[0], point), Vec2.dist(pos[1], point))\n  } else {\n    const a = Vec2.dist(pos[0], pos[1])\n    const b = Vec2.dist(pos[0], point)\n    const c = Vec2.dist(pos[1], point)\n    const per = (a + b + c) / 2\n    dist = (2 / a) * Math.sqrt(per * (per - a) * (per - b) * (per - c))\n  }\n  return dist\n}\nfunction findMiddlePoint(height: number, a: Vec2, b: Vec2) {\n  if (+util.tfx(height) === 0) {\n    const minX = Math.min(a.x, b.x)\n    const minY = Math.min(a.y, b.y)\n    const x = minX + Math.abs(a.x - b.x) / 2\n    const y = minY + Math.abs(a.y - b.y) / 2\n    return new Vec2(x, y)\n  }\n  const length = Math.hypot(b.x - a.x, b.y - a.y)\n  const lengthHyp = Math.hypot(length / 2, height)\n  const coordinates1 = util.calcCoordinates(a, b, lengthHyp).pos1\n  const coordinates2 = util.calcCoordinates(a, b, lengthHyp).pos2\n\n  if (height > 0) {\n    if (b.x < a.x) {\n      return new Vec2(coordinates1?.x, coordinates1?.y)\n    }\n    if (b.x > a.x) {\n      return new Vec2(coordinates2?.x, coordinates2?.y)\n    }\n    if (b.x === a.x) {\n      if (b.y > a.y) {\n        return new Vec2(coordinates2?.x, coordinates2?.y)\n      }\n      if (b.y < a.y) {\n        return new Vec2(coordinates1?.x, coordinates1?.y)\n      }\n      if (b.y === a.y) {\n        return new Vec2(a.x, a.y)\n      }\n    }\n  } else {\n    if (b.x > a.x) {\n      return new Vec2(coordinates1?.x, coordinates1?.y)\n    }\n    if (b.x < a.x) {\n      return new Vec2(coordinates2?.x, coordinates2?.y)\n    }\n    if (b.x === a.x) {\n      if (b.y > a.y) {\n        return new Vec2(coordinates1?.x, coordinates1?.y)\n      }\n      if (b.y < a.y) {\n        return new Vec2(coordinates2?.x, coordinates2?.y)\n      }\n      if (b.y === a.y) {\n        return new Vec2(a.x, a.y)\n      }\n    }\n  }\n  return new Vec2(a.x, a.y)\n}\n\nexport default ReRxnArrow\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs } from 'domain/entities'\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\nclass ReRxnPlus extends ReObject {\n  constructor(/* chem.RxnPlus */ plus) {\n    super('rxnPlus')\n    this.item = plus\n  }\n\n  static isSelectable() {\n    return true\n  }\n\n  hoverPath(render) {\n    const p = Scale.obj2scaled(this.item.pp, render.options)\n    const s = render.options.scale\n    /* eslint-disable no-mixed-operators */\n    return render.paper.rect(p.x - s / 4, p.y - s / 4, s / 2, s / 2, s / 8)\n    /* eslint-enable no-mixed-operators */\n  }\n\n  drawHover(render) {\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  makeSelectionPlate(restruct, paper, styles) {\n    // TODO [MK] review parameters\n    return this.hoverPath(restruct.render).attr(styles.selectionStyle)\n  }\n\n  show(restruct, id, options) {\n    const render = restruct.render\n    const centre = Scale.obj2scaled(this.item.pp, options)\n    const path = draw.plus(render.paper, centre, options)\n    const offset = options.offset\n    if (offset != null) path.translateAbs(offset.x, offset.y)\n    this.visel.add(path, Box2Abs.fromRelBox(util.relBox(path.getBBox())))\n  }\n}\n\nexport default ReRxnPlus\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\n\nclass ReDataSGroupData extends ReObject {\n  constructor(sgroup) {\n    super('sgroupData')\n    this.sgroup = sgroup\n  }\n\n  static isSelectable() {\n    return true\n  }\n\n  hoverPath(render) {\n    const box = this.sgroup.dataArea\n    const p0 = Scale.obj2scaled(box.p0, render.options)\n    const sz = Scale.obj2scaled(box.p1, render.options).sub(p0)\n    return render.paper.rect(p0.x, p0.y, sz.x, sz.y)\n  }\n\n  drawHover(render) {\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  makeSelectionPlate(restruct, paper, styles) {\n    // TODO [MK] review parameters\n    return this.hoverPath(restruct.render).attr(styles.selectionStyle)\n  }\n}\n\nexport default ReDataSGroupData\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, FunctionalGroup, Pile, SGroup, Vec2 } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReDataSGroupData from './redatasgroupdata'\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\nconst tfx = util.tfx\n\nclass ReSGroup extends ReObject {\n  constructor(sgroup) {\n    super('sgroup')\n    this.item = sgroup\n  }\n\n  static isSelectable() {\n    return false\n  }\n\n  draw(remol, sgroup) {\n    this.render = remol.render\n    let set = this.render.paper.set()\n    const atomSet = new Pile(sgroup.atoms)\n    const crossBonds = SGroup.getCrossBonds(remol.molecule, atomSet)\n    SGroup.bracketPos(sgroup, remol.molecule, crossBonds, remol, this.render)\n    const bracketBox = sgroup.bracketBox\n    const d = sgroup.bracketDir\n    sgroup.areas = [bracketBox]\n    const functionalGroups = remol.molecule.functionalGroups\n    if (\n      FunctionalGroup.isContractedFunctionalGroup(sgroup.id, functionalGroups)\n    ) {\n      sgroup.atoms.forEach((aid) => {\n        if (FunctionalGroup.isAttachmentPointAtom(aid, remol.molecule)) {\n          sgroup.firstSgroupAtom = remol.molecule.atoms.get(aid)\n          sgroup.functionalGroup = true\n        }\n      })\n    } else {\n      switch (sgroup.type) {\n        case 'MUL':\n          SGroupdrawBrackets(\n            set,\n            this.render,\n            sgroup,\n            crossBonds,\n            atomSet,\n            bracketBox,\n            d,\n            sgroup.data.mul\n          )\n          break\n        case 'SRU': {\n          let connectivity = sgroup.data.connectivity || 'eu'\n          if (connectivity === 'ht') connectivity = ''\n          const subscript = sgroup.data.subscript || 'n'\n          SGroupdrawBrackets(\n            set,\n            this.render,\n            sgroup,\n            crossBonds,\n            atomSet,\n            bracketBox,\n            d,\n            subscript,\n            connectivity\n          )\n          break\n        }\n        case 'SUP': {\n          SGroupdrawBrackets(\n            set,\n            this.render,\n            sgroup,\n            crossBonds,\n            atomSet,\n            bracketBox,\n            d,\n            sgroup.data.name,\n            null,\n            { 'font-style': 'italic' }\n          )\n          break\n        }\n        case 'GEN': {\n          SGroupdrawBrackets(\n            set,\n            this.render,\n            sgroup,\n            crossBonds,\n            atomSet,\n            bracketBox,\n            d\n          )\n          break\n        }\n        case 'DAT': {\n          set = drawGroupDat(remol, sgroup)\n          break\n        }\n        default:\n          break\n      }\n    }\n    return set\n  }\n\n  getTextHighlightDimensions(padding = 0) {\n    let startX = 0\n    let startY = 0\n    let width = 0\n    let height = 0\n    const sGroupItem = this.item\n    const sGroupHasFirstAtom =\n      sGroupItem.functionalGroup &&\n      !sGroupItem.data.expanded &&\n      sGroupItem.firstSgroupAtom\n    if (sGroupHasFirstAtom) {\n      const firstAtomPosition = sGroupItem.firstSgroupAtom.pp\n      const [firstAtomId] = sGroupItem.atoms\n      const reSGroupAtom = this.render.ctab.atoms.get(firstAtomId)\n      const sGroupTextBoundingBox =\n        reSGroupAtom.visel.boundingBox || reSGroupAtom.visel.oldBoundingBox\n      if (sGroupTextBoundingBox) {\n        const { x, y } = Scale.obj2scaled(\n          firstAtomPosition,\n          this.render.options\n        )\n        const { p0, p1 } = sGroupTextBoundingBox\n        width = p1.x - p0.x + padding * 2\n        height = p1.y - p0.y + padding * 2\n        startX = x - width / 2\n        startY = y - height / 2\n      }\n    }\n\n    return { startX, startY, width, height }\n  }\n\n  makeSelectionPlate(restruct, paper, options) {\n    const sgroup = this.item\n    const functionalGroups = restruct.molecule.functionalGroups\n    if (\n      FunctionalGroup.isContractedFunctionalGroup(sgroup.id, functionalGroups)\n    ) {\n      const { startX, startY, width, height } = this.getTextHighlightDimensions(\n        this.render.options.fontsz / 2\n      )\n      return paper\n        .rect(startX, startY, width, height)\n        .attr(options.selectionStyle)\n    }\n  }\n\n  drawHover(render) {\n    // eslint-disable-line max-statements\n    const options = render.options\n    const paper = render.paper\n    const sGroupItem = this.item\n    const { a0, a1, b0, b1 } = getHighlighPathInfo(sGroupItem, options)\n\n    const functionalGroups = render.ctab.molecule.functionalGroups\n    const set = paper.set()\n    if (\n      FunctionalGroup.isContractedFunctionalGroup(\n        sGroupItem.id,\n        functionalGroups\n      )\n    ) {\n      const { startX, startY, width, height } = this.getTextHighlightDimensions(\n        options.fontsz / 2\n      )\n      sGroupItem.hovering = paper\n        .rect(startX, startY, width, height)\n        .attr(options.hoverStyle)\n    } else {\n      sGroupItem.hovering = paper\n        .path(\n          'M{0},{1}L{2},{3}L{4},{5}L{6},{7}L{0},{1}',\n          tfx(a0.x),\n          tfx(a0.y),\n          tfx(a1.x),\n          tfx(a1.y),\n          tfx(b1.x),\n          tfx(b1.y),\n          tfx(b0.x),\n          tfx(b0.y)\n        )\n        .attr(options.hoverStyle)\n    }\n    set.push(sGroupItem.hovering)\n\n    SGroup.getAtoms(render.ctab.molecule, sGroupItem).forEach((aid) => {\n      set.push(render.ctab.atoms.get(aid).makeHoverPlate(render))\n    }, this)\n    SGroup.getBonds(render.ctab.molecule, sGroupItem).forEach((bid) => {\n      set.push(render.ctab.bonds.get(bid).makeHoverPlate(render))\n    }, this)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, set)\n  }\n\n  show(restruct) {\n    const render = restruct.render\n    const sgroup = this.item\n    if (sgroup.data.fieldName !== 'MRV_IMPLICIT_H') {\n      const remol = render.ctab\n      const path = this.draw(remol, sgroup)\n      restruct.addReObjectPath(LayerMap.data, this.visel, path, null, true)\n      this.setHover(this.hover, render) // TODO: fix this\n    }\n  }\n}\n\nfunction SGroupdrawBrackets(\n  set,\n  render,\n  sg,\n  crossBonds,\n  atomSet,\n  bracketBox,\n  d,\n  lowerIndexText,\n  upperIndexText,\n  indexAttribute\n) {\n  // eslint-disable-line max-params\n  const brackets = getBracketParameters(\n    render.ctab.molecule,\n    crossBonds,\n    atomSet,\n    bracketBox,\n    d,\n    render,\n    sg.id\n  )\n  let ir = -1\n  for (let i = 0; i < brackets.length; ++i) {\n    const bracket = brackets[i]\n    const path = draw.bracket(\n      render.paper,\n      Scale.obj2scaled(bracket.d, render.options),\n      Scale.obj2scaled(bracket.n, render.options),\n      Scale.obj2scaled(bracket.c, render.options),\n      bracket.w,\n      bracket.h,\n      render.options\n    )\n    set.push(path)\n    if (\n      ir < 0 ||\n      brackets[ir].d.x < bracket.d.x ||\n      (brackets[ir].d.x === bracket.d.x && brackets[ir].d.y > bracket.d.y)\n    ) {\n      ir = i\n    }\n  }\n  const bracketR = brackets[ir]\n  function renderIndex(text, shift) {\n    const indexPos = Scale.obj2scaled(\n      bracketR.c.addScaled(bracketR.n, shift * bracketR.h),\n      render.options\n    )\n    const indexPath = render.paper.text(indexPos.x, indexPos.y, text).attr({\n      font: render.options.font,\n      'font-size': render.options.fontszsub\n    })\n    if (indexAttribute) indexPath.attr(indexAttribute)\n    const indexBox = Box2Abs.fromRelBox(util.relBox(indexPath.getBBox()))\n    const t =\n      Math.max(util.shiftRayBox(indexPos, bracketR.d.negated(), indexBox), 3) +\n      2\n    indexPath.translateAbs(t * bracketR.d.x, t * bracketR.d.y)\n    set.push(indexPath)\n  }\n  if (lowerIndexText) renderIndex(lowerIndexText, 0.5)\n  if (upperIndexText) renderIndex(upperIndexText, -0.5)\n}\n\nfunction showValue(paper, pos, sg, options) {\n  const text = paper.text(pos.x, pos.y, sg.data.fieldValue).attr({\n    font: options.font,\n    'font-size': options.fontsz\n  })\n  const box = text.getBBox()\n  let rect = paper.rect(\n    box.x - 1,\n    box.y - 1,\n    box.width + 2,\n    box.height + 2,\n    3,\n    3\n  )\n  rect = sg.selected\n    ? rect.attr(options.selectionStyle)\n    : rect.attr({ fill: '#fff', stroke: '#fff' })\n  const st = paper.set()\n  st.push(rect, text.toFront())\n  return st\n}\n\nfunction drawGroupDat(restruct, sgroup) {\n  SGroup.bracketPos(sgroup, restruct.molecule)\n  sgroup.areas = sgroup.bracketBox ? [sgroup.bracketBox] : []\n\n  if (sgroup.pp === null) sgroup.calculatePP(restruct.molecule)\n\n  return sgroup.data.attached\n    ? drawAttachedDat(restruct, sgroup)\n    : drawAbsoluteDat(restruct, sgroup)\n}\n\nfunction drawAbsoluteDat(restruct, sgroup) {\n  const render = restruct.render\n  const options = render.options\n  const paper = render.paper\n  const set = paper.set()\n\n  const ps = sgroup.pp.scaled(options.scale)\n  const name = showValue(paper, ps, sgroup, options)\n  const box = util.relBox(name.getBBox())\n\n  name.translateAbs(0.5 * box.width, -0.5 * box.height)\n  set.push(name)\n\n  const sbox = Box2Abs.fromRelBox(util.relBox(name.getBBox()))\n  sgroup.dataArea = sbox.transform(Scale.scaled2obj, render.options)\n\n  if (!restruct.sgroupData.has(sgroup.id)) {\n    restruct.sgroupData.set(sgroup.id, new ReDataSGroupData(sgroup))\n  }\n\n  return set\n}\n\nfunction drawAttachedDat(restruct, sgroup) {\n  const render = restruct.render\n  const options = render.options\n  const paper = render.paper\n  const set = paper.set()\n\n  SGroup.getAtoms(restruct, sgroup).forEach((aid) => {\n    const atom = restruct.atoms.get(aid)\n    const p = Scale.obj2scaled(atom.a.pp, options)\n    const bb = atom.visel.boundingBox\n\n    if (bb !== null) p.x = Math.max(p.x, bb.p1.x)\n\n    p.x += options.lineWidth // shift a bit to the right\n\n    const nameI = showValue(paper, p, sgroup, options)\n    const boxI = util.relBox(nameI.getBBox())\n\n    nameI.translateAbs(0.5 * boxI.width, -0.3 * boxI.height)\n    set.push(nameI)\n\n    let sboxI = Box2Abs.fromRelBox(util.relBox(nameI.getBBox()))\n    sboxI = sboxI.transform(Scale.scaled2obj, render.options)\n    sgroup.areas.push(sboxI)\n  })\n\n  return set\n}\n\nfunction getBracketParameters(\n  mol,\n  crossBonds,\n  atomSet,\n  bracketBox,\n  d,\n  render,\n  id\n) {\n  // eslint-disable-line max-params\n  function BracketParams(c, d, w, h) {\n    this.c = c\n    this.d = d\n    this.n = d.rotateSC(1, 0)\n    this.w = w\n    this.h = h\n  }\n  const brackets = []\n  let n = d.rotateSC(1, 0)\n\n  const crossBondsPerAtom = Object.values(crossBonds)\n  const crossBondsValues = crossBondsPerAtom.flat()\n  if (crossBondsValues.length < 2) {\n    ;(function () {\n      d = d || new Vec2(1, 0)\n      n = n || d.rotateSC(1, 0)\n      const bracketWidth = Math.min(0.25, bracketBox.sz().x * 0.3)\n      const cl = Vec2.lc2(\n        d,\n        bracketBox.p0.x,\n        n,\n        0.5 * (bracketBox.p0.y + bracketBox.p1.y)\n      )\n      const cr = Vec2.lc2(\n        d,\n        bracketBox.p1.x,\n        n,\n        0.5 * (bracketBox.p0.y + bracketBox.p1.y)\n      )\n      const bracketHeight = bracketBox.sz().y\n\n      brackets.push(\n        new BracketParams(cl, d.negated(), bracketWidth, bracketHeight),\n        new BracketParams(cr, d, bracketWidth, bracketHeight)\n      )\n    })()\n  } else if (crossBondsValues.length === 2 && crossBondsPerAtom.length === 2) {\n    ;(function () {\n      // eslint-disable-line max-statements\n      const b1 = mol.bonds.get(crossBondsValues[0])\n      const b2 = mol.bonds.get(crossBondsValues[1])\n      const cl0 = b1.getCenter(mol)\n      const cr0 = b2.getCenter(mol)\n      let tl = -1\n      let tr = -1\n      let tt = -1\n      let tb = -1\n      const cc = Vec2.centre(cl0, cr0)\n      const dr = Vec2.diff(cr0, cl0).normalized()\n      const dl = dr.negated()\n      const dt = dr.rotateSC(1, 0)\n      const db = dt.negated()\n\n      mol.sGroupForest.children.get(id).forEach((sgid) => {\n        let bba = render.ctab.sgroups.get(sgid).visel.boundingBox\n        bba = bba\n          .translate((render.options.offset || new Vec2()).negated())\n          .transform(Scale.scaled2obj, render.options)\n        tl = Math.max(tl, util.shiftRayBox(cl0, dl, bba))\n        tr = Math.max(tr, util.shiftRayBox(cr0, dr, bba))\n        tt = Math.max(tt, util.shiftRayBox(cc, dt, bba))\n        tb = Math.max(tb, util.shiftRayBox(cc, db, bba))\n      }, this)\n      tl = Math.max(tl + 0.2, 0)\n      tr = Math.max(tr + 0.2, 0)\n      tt = Math.max(Math.max(tt, tb) + 0.1, 0)\n      const bracketWidth = 0.25\n      const bracketHeight = 1.5 + tt\n      brackets.push(\n        new BracketParams(\n          cl0.addScaled(dl, tl),\n          dl,\n          bracketWidth,\n          bracketHeight\n        ),\n        new BracketParams(\n          cr0.addScaled(dr, tr),\n          dr,\n          bracketWidth,\n          bracketHeight\n        )\n      )\n    })()\n  } else {\n    ;(function () {\n      for (let i = 0; i < crossBondsValues.length; ++i) {\n        const b = mol.bonds.get(crossBondsValues[i])\n        const c = b.getCenter(mol)\n        const d = atomSet.has(b.begin) ? b.getDir(mol) : b.getDir(mol).negated()\n        brackets.push(new BracketParams(c, d, 0.2, 1.0))\n      }\n    })()\n  }\n  return brackets\n}\n\nfunction getHighlighPathInfo(sgroup, options) {\n  let bracketBox = sgroup.bracketBox.transform(Scale.obj2scaled, options)\n  const lineWidth = options.lineWidth\n  const vext = new Vec2(lineWidth * 4, lineWidth * 6)\n  bracketBox = bracketBox.extend(vext, vext)\n  const d = sgroup.bracketDir\n  const n = d.rotateSC(1, 0)\n  const a0 = Vec2.lc2(d, bracketBox.p0.x, n, bracketBox.p0.y)\n  const a1 = Vec2.lc2(d, bracketBox.p0.x, n, bracketBox.p1.y)\n  const b0 = Vec2.lc2(d, bracketBox.p1.x, n, bracketBox.p0.y)\n  const b1 = Vec2.lc2(d, bracketBox.p1.x, n, bracketBox.p1.y)\n  const size = options.contractedFunctionalGroupSize\n  let startX = (b0.x + a0.x) / 2 - size / 2\n  let startY = (a1.y + a0.y) / 2 - size / 2\n  if (sgroup.firstSgroupAtom) {\n    const shift = new Vec2(size / 2, size / 2, 0)\n    const hoverPp = Vec2.diff(sgroup.firstSgroupAtom.pp.scaled(40), shift)\n    startX = hoverPp.x\n    startY = hoverPp.y\n  }\n  return {\n    a0,\n    a1,\n    b0,\n    b1,\n    startX,\n    startY,\n    size\n  }\n}\n\nexport default ReSGroup\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, SimpleObjectMode, Vec2 } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\nconst tfx = util.tfx\ninterface MinDistanceWithReferencePoint {\n  minDist: number\n  refPoint: Vec2 | null\n}\ninterface StyledPath {\n  path: any\n  stylesApplied: boolean\n}\nclass ReSimpleObject extends ReObject {\n  private item: any\n\n  constructor(simpleObject: any) {\n    super('simpleObject')\n    this.item = simpleObject\n  }\n\n  static isSelectable(): boolean {\n    return true\n  }\n\n  calcDistance(p: Vec2, s: any): MinDistanceWithReferencePoint {\n    const point: Vec2 = new Vec2(p.x, p.y)\n\n    const distRef: MinDistanceWithReferencePoint =\n      this.getReferencePointDistance(p)\n    const item = this.item\n    const mode = item.mode\n    const pos = item.pos\n    let dist: number\n\n    switch (mode) {\n      case SimpleObjectMode.ellipse: {\n        const rad = Vec2.diff(pos[1], pos[0])\n        const rx = rad.x / 2\n        const ry = rad.y / 2\n        const center = Vec2.sum(pos[0], new Vec2(rx, ry))\n        const pointToCenter = Vec2.diff(point, center)\n        if (rx !== 0 && ry !== 0) {\n          dist = Math.abs(\n            1 -\n              (pointToCenter.x * pointToCenter.x) / (rx * rx) -\n              (pointToCenter.y * pointToCenter.y) / (ry * ry)\n          )\n        } else {\n          // in case rx or ry is equal to 0 we have a line as a trivial case of ellipse\n          // in such case distance need to be calculated as a distance between line and current point\n          dist = calculateDistanceToLine(pos, point)\n        }\n        break\n      }\n      case SimpleObjectMode.rectangle: {\n        const topX = Math.min(pos[0].x, pos[1].x)\n        const topY = Math.min(pos[0].y, pos[1].y)\n        const bottomX = Math.max(pos[0].x, pos[1].x)\n        const bottomY = Math.max(pos[0].y, pos[1].y)\n\n        const distances: Array<number> = []\n\n        if (point.x >= topX && point.x <= bottomX) {\n          if (point.y < topY) {\n            distances.push(topY - point.y)\n          } else if (point.y > bottomY) {\n            distances.push(point.y - bottomY)\n          } else {\n            distances.push(point.y - topY, bottomY - point.y)\n          }\n        }\n        if (point.x < topX && point.y < topY) {\n          distances.push(Vec2.dist(new Vec2(topX, topY), point))\n        }\n        if (point.x > bottomX && point.y > bottomY) {\n          distances.push(Vec2.dist(new Vec2(bottomX, bottomY), point))\n        }\n        if (point.x < topX && point.y > bottomY) {\n          distances.push(Vec2.dist(new Vec2(topX, bottomY), point))\n        }\n        if (point.x > bottomX && point.y < topY) {\n          distances.push(Vec2.dist(new Vec2(bottomX, topY), point))\n        }\n        if (point.y >= topY && point.y <= bottomY) {\n          if (point.x < topX) {\n            distances.push(topX - point.x)\n          } else if (point.x > bottomX) {\n            distances.push(point.x - bottomX)\n          } else {\n            distances.push(point.x - topX, bottomX - point.x)\n          }\n        }\n        dist = Math.min(...distances)\n        break\n      }\n      case SimpleObjectMode.line: {\n        dist = calculateDistanceToLine(pos, point)\n        break\n      }\n\n      default: {\n        throw new Error('Unsupported shape type')\n      }\n    }\n\n    const refPoint: Vec2 | null =\n      distRef.minDist <= 8 / s ? distRef.refPoint : null\n    // distance is a smallest between dist to figure and it's reference points\n    dist = Math.min(distRef.minDist, dist)\n    return { minDist: dist, refPoint }\n  }\n\n  getReferencePointDistance(p: Vec2): MinDistanceWithReferencePoint {\n    const dist: any = []\n    const refPoints = this.getReferencePoints()\n    refPoints.forEach((rp) => {\n      dist.push({ minDist: Math.abs(Vec2.dist(p, rp)), refPoint: rp })\n    })\n\n    const minDist: MinDistanceWithReferencePoint = dist.reduce(\n      (acc, current) =>\n        !acc ? current : acc.minDist < current.minDist ? acc : current,\n      null\n    )\n\n    return minDist\n  }\n\n  getReferencePoints(onlyOnObject = false): Array<Vec2> {\n    const refPoints: Array<Vec2> = []\n    switch (this.item.mode) {\n      case SimpleObjectMode.ellipse:\n      case SimpleObjectMode.rectangle: {\n        const p0: Vec2 = new Vec2(\n          Math.min(this.item.pos[0].x, this.item.pos[1].x),\n          Math.min(this.item.pos[0].y, this.item.pos[1].y)\n        )\n        const w = Math.abs(Vec2.diff(this.item.pos[0], this.item.pos[1]).x)\n        const h = Math.abs(Vec2.diff(this.item.pos[0], this.item.pos[1]).y)\n\n        refPoints.push(\n          new Vec2(p0.x + 0.5 * w, p0.y),\n          new Vec2(p0.x + w, p0.y + 0.5 * h),\n          new Vec2(p0.x + 0.5 * w, p0.y + h),\n          new Vec2(p0.x, p0.y + 0.5 * h)\n        )\n        if (!onlyOnObject || this.item.mode === SimpleObjectMode.rectangle) {\n          refPoints.push(\n            p0,\n            new Vec2(p0.x, p0.y + h),\n            new Vec2(p0.x + w, p0.y + h),\n            new Vec2(p0.x + w, p0.y)\n          )\n        }\n        break\n      }\n      case SimpleObjectMode.line: {\n        this.item.pos.forEach((i) => refPoints.push(new Vec2(i.x, i.y, 0)))\n        break\n      }\n\n      default: {\n        throw new Error('Unsupported shape type')\n      }\n    }\n    return refPoints\n  }\n\n  hoverPath(render: Render): Array<StyledPath> {\n    const point: Array<Vec2> = []\n\n    this.item.pos.forEach((p, index) => {\n      point[index] = Scale.obj2scaled(p, render.options)\n    })\n    const scaleFactor = render.options.scale\n\n    const path: Array<any> = []\n\n    // TODO: It seems that inheritance will be the better approach here\n    switch (this.item.mode) {\n      case SimpleObjectMode.ellipse: {\n        const rad = Vec2.diff(point[1], point[0])\n        const rx = rad.x / 2\n        const ry = rad.y / 2\n        path.push(\n          render.paper.ellipse(\n            tfx(point[0].x + rx),\n            tfx(point[0].y + ry),\n            tfx(Math.abs(rx) + scaleFactor / 8),\n            tfx(Math.abs(ry) + scaleFactor / 8)\n          )\n        )\n        if (\n          Math.abs(rx) - scaleFactor / 8 > 0 &&\n          Math.abs(ry) - scaleFactor / 8 > 0\n        ) {\n          path.push(\n            render.paper.ellipse(\n              tfx(point[0].x + rx),\n              tfx(point[0].y + ry),\n              tfx(Math.abs(rx) - scaleFactor / 8),\n              tfx(Math.abs(ry) - scaleFactor / 8)\n            )\n          )\n        }\n        break\n      }\n\n      case SimpleObjectMode.rectangle: {\n        path.push(\n          render.paper.rect(\n            tfx(Math.min(point[0].x, point[1].x) - scaleFactor / 8),\n            tfx(Math.min(point[0].y, point[1].y) - scaleFactor / 8),\n            tfx(\n              Math.max(point[0].x, point[1].x) -\n                Math.min(point[0].x, point[1].x) +\n                scaleFactor / 4\n            ),\n            tfx(\n              Math.max(point[0].y, point[1].y) -\n                Math.min(point[0].y, point[1].y) +\n                scaleFactor / 4\n            )\n          )\n        )\n\n        if (\n          Math.max(point[0].x, point[1].x) -\n            Math.min(point[0].x, point[1].x) -\n            scaleFactor / 4 >\n            0 &&\n          Math.max(point[0].y, point[1].y) -\n            Math.min(point[0].y, point[1].y) -\n            scaleFactor / 4 >\n            0\n        ) {\n          path.push(\n            render.paper.rect(\n              tfx(Math.min(point[0].x, point[1].x) + scaleFactor / 8),\n              tfx(Math.min(point[0].y, point[1].y) + scaleFactor / 8),\n              tfx(\n                Math.max(point[0].x, point[1].x) -\n                  Math.min(point[0].x, point[1].x) -\n                  scaleFactor / 4\n              ),\n              tfx(\n                Math.max(point[0].y, point[1].y) -\n                  Math.min(point[0].y, point[1].y) -\n                  scaleFactor / 4\n              )\n            )\n          )\n        }\n\n        break\n      }\n      case SimpleObjectMode.line: {\n        // TODO: reuse this code for polyline\n        const poly: Array<string | number> = []\n\n        const angle = Math.atan(\n          (point[1].y - point[0].y) / (point[1].x - point[0].x)\n        )\n\n        const p0 = { x: 0, y: 0 }\n        const p1 = { x: 0, y: 0 }\n\n        const k = point[0].x > point[1].x ? -1 : 1\n\n        p0.x = point[0].x - k * ((scaleFactor / 8) * Math.cos(angle))\n        p0.y = point[0].y - k * ((scaleFactor / 8) * Math.sin(angle))\n        p1.x = point[1].x + k * ((scaleFactor / 8) * Math.cos(angle))\n        p1.y = point[1].y + k * ((scaleFactor / 8) * Math.sin(angle))\n\n        poly.push(\n          'M',\n          p0.x + ((k * scaleFactor) / 8) * Math.sin(angle),\n          p0.y - ((k * scaleFactor) / 8) * Math.cos(angle)\n        )\n        poly.push(\n          'L',\n          p1.x + ((k * scaleFactor) / 8) * Math.sin(angle),\n          p1.y - ((k * scaleFactor) / 8) * Math.cos(angle)\n        )\n        poly.push(\n          'L',\n          p1.x - ((k * scaleFactor) / 8) * Math.sin(angle),\n          p1.y + ((k * scaleFactor) / 8) * Math.cos(angle)\n        )\n        poly.push(\n          'L',\n          p0.x - ((k * scaleFactor) / 8) * Math.sin(angle),\n          p0.y + ((k * scaleFactor) / 8) * Math.cos(angle)\n        )\n        poly.push(\n          'L',\n          p0.x + ((k * scaleFactor) / 8) * Math.sin(angle),\n          p0.y - ((k * scaleFactor) / 8) * Math.cos(angle)\n        )\n\n        path.push(render.paper.path(poly))\n        break\n      }\n      default: {\n        throw new Error('Unsupported shape type')\n      }\n    }\n\n    const enhPaths: Array<StyledPath> = path.map((p) => {\n      return { path: p, stylesApplied: false }\n    })\n\n    return enhPaths\n  }\n\n  drawHover(render: Render): Array<any> {\n    const paths: Array<any> = this.hoverPath(render).map((enhPath) => {\n      if (!enhPath.stylesApplied) {\n        return enhPath.path.attr(render.options.hoverStyle)\n      }\n      return enhPath.path\n    })\n\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, paths)\n    return paths\n  }\n\n  makeSelectionPlate(restruct: ReStruct, paper: any, styles: any): any {\n    const pos = this.item.pos.map((p) => {\n      return Scale.obj2scaled(p, restruct.render.options) || new Vec2()\n    })\n\n    const refPoints = this.getReferencePoints()\n    const scaleFactor = restruct.render.options.scale\n    const selectionSet = restruct.render.paper.set()\n    selectionSet.push(\n      generatePath(this.item.mode, paper, pos).attr(\n        styles.hoverStyleSimpleObject\n      )\n    )\n    refPoints.forEach((rp) => {\n      const scaledRP = Scale.obj2scaled(rp, restruct.render.options)\n      selectionSet.push(\n        restruct.render.paper\n          .circle(scaledRP.x, scaledRP.y, scaleFactor / 8)\n          .attr({ fill: 'black' })\n      )\n    })\n    return selectionSet\n  }\n\n  show(restruct: ReStruct, options: any): void {\n    const render = restruct.render\n    const pos = this.item.pos.map((p) => {\n      return Scale.obj2scaled(p, options) || new Vec2()\n    })\n\n    const path = generatePath(this.item.mode, render.paper, pos, options)\n\n    const offset = options.offset\n    if (offset != null) path.translateAbs(offset.x, offset.y)\n\n    this.visel.add(path, Box2Abs.fromRelBox(util.relBox(path.getBBox())))\n  }\n}\nfunction calculateDistanceToLine(pos: Array<Vec2>, point: Vec2): number {\n  let dist: number\n  if (\n    (point.x < Math.min(pos[0].x, pos[1].x) ||\n      point.x > Math.max(pos[0].x, pos[1].x)) &&\n    (point.y < Math.min(pos[0].y, pos[1].y) ||\n      point.y > Math.max(pos[0].y, pos[1].y))\n  ) {\n    dist = Math.min(Vec2.dist(pos[0], point), Vec2.dist(pos[1], point))\n  } else {\n    const a = Vec2.dist(pos[0], pos[1])\n    const b = Vec2.dist(pos[0], point)\n    const c = Vec2.dist(pos[1], point)\n    const per = (a + b + c) / 2\n    dist = (2 / a) * Math.sqrt(per * (per - a) * (per - b) * (per - c))\n  }\n  return dist\n}\n\nfunction generatePath(mode: SimpleObjectMode, paper, pos: Vec2, options?): any {\n  let path: any\n  switch (mode) {\n    case SimpleObjectMode.ellipse: {\n      path = draw.ellipse(paper, pos, options)\n      break\n    }\n    case SimpleObjectMode.rectangle: {\n      path = draw.rectangle(paper, pos, options)\n      break\n    }\n    case SimpleObjectMode.line: {\n      path = draw.line(paper, pos, options)\n      break\n    }\n    default: {\n      throw new Error('Unsupported shape type')\n    }\n  }\n\n  return path\n}\n\nexport default ReSimpleObject\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Vec2 } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\nimport util from '../util'\n\nconst tfx = util.tfx\n\nclass ReLoop extends ReObject {\n  constructor(loop) {\n    super('loop')\n    this.loop = loop\n    this.centre = new Vec2()\n    this.radius = new Vec2()\n  }\n\n  static isSelectable() {\n    return false\n  }\n\n  show(restruct, rlid, options) {\n    // eslint-disable-line max-statements\n    const render = restruct.render\n    const paper = render.paper\n    const molecule = restruct.molecule\n    const loop = this.loop\n    this.centre = new Vec2()\n    loop.hbs.forEach((hbid) => {\n      const hb = molecule.halfBonds.get(hbid)\n      const bond = restruct.bonds.get(hb.bid)\n      const apos = Scale.obj2scaled(restruct.atoms.get(hb.begin).a.pp, options)\n      if (bond.b.type !== Bond.PATTERN.TYPE.AROMATIC) loop.aromatic = false\n      this.centre.add_(apos) // eslint-disable-line no-underscore-dangle\n    })\n    loop.convex = true\n    for (let k = 0; k < this.loop.hbs.length; ++k) {\n      const hba = molecule.halfBonds.get(loop.hbs[k])\n      const hbb = molecule.halfBonds.get(loop.hbs[(k + 1) % loop.hbs.length])\n      const angle = Math.atan2(\n        Vec2.cross(hba.dir, hbb.dir),\n        Vec2.dot(hba.dir, hbb.dir)\n      )\n      if (angle > 0) loop.convex = false\n    }\n\n    this.centre = this.centre.scaled(1.0 / loop.hbs.length)\n    this.radius = -1\n    loop.hbs.forEach((hbid) => {\n      const hb = molecule.halfBonds.get(hbid)\n      const apos = Scale.obj2scaled(restruct.atoms.get(hb.begin).a.pp, options)\n      const bpos = Scale.obj2scaled(restruct.atoms.get(hb.end).a.pp, options)\n      const n = Vec2.diff(bpos, apos).rotateSC(1, 0).normalized()\n      const dist = Vec2.dot(Vec2.diff(apos, this.centre), n)\n      this.radius = this.radius < 0 ? dist : Math.min(this.radius, dist)\n    })\n    this.radius *= 0.7\n    if (!loop.aromatic) return\n    let path = null\n    if (loop.convex && options.aromaticCircle) {\n      path = paper.circle(this.centre.x, this.centre.y, this.radius).attr({\n        stroke: '#000',\n        'stroke-width': options.lineattr['stroke-width']\n      })\n    } else {\n      let pathStr = ''\n      for (let k = 0; k < loop.hbs.length; ++k) {\n        const hba = molecule.halfBonds.get(loop.hbs[k])\n        const hbb = molecule.halfBonds.get(loop.hbs[(k + 1) % loop.hbs.length])\n        const angle = Math.atan2(\n          Vec2.cross(hba.dir, hbb.dir),\n          Vec2.dot(hba.dir, hbb.dir)\n        )\n        const halfAngle = (Math.PI - angle) / 2\n        const dir = hbb.dir.rotate(halfAngle)\n        const pi = Scale.obj2scaled(restruct.atoms.get(hbb.begin).a.pp, options)\n        let sin = Math.sin(halfAngle)\n        const minSin = 0.1\n        if (Math.abs(sin) < minSin) sin = (sin * minSin) / Math.abs(sin)\n        const offset = options.bondSpace / sin\n        const qi = pi.addScaled(dir, -offset)\n        pathStr += k === 0 ? 'M' : 'L'\n        pathStr += tfx(qi.x) + ',' + tfx(qi.y)\n      }\n      pathStr += 'Z'\n      path = paper.path(pathStr).attr({\n        stroke: '#000',\n        'stroke-width': options.lineattr['stroke-width'],\n        'stroke-dasharray': '- '\n      })\n    }\n    restruct.addReObjectPath(LayerMap.data, this.visel, path, null, true)\n  }\n\n  isValid(struct, rlid) {\n    const halfBonds = struct.halfBonds\n    return this.loop.hbs.every(\n      (hbid) => halfBonds.has(hbid) && halfBonds.get(hbid).loop === rlid\n    )\n  }\n}\n\nexport default ReLoop\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  DraftInlineStyleType,\n  RawDraftContentBlock,\n  RawDraftContentState,\n  RawDraftInlineStyleRange\n} from 'draft-js'\nimport { Text, TextCommand, Vec2 } from 'domain/entities'\nimport { flatten, isEqual } from 'lodash/fp'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Scale } from 'domain/helpers'\nimport { RaphaelBaseElement } from 'raphael'\n\ninterface CustomRawDraftInlineStyleRange\n  extends Omit<RawDraftInlineStyleRange, 'style'> {\n  style:\n    | DraftInlineStyleType\n    | TextCommand.Subscript\n    | TextCommand.Superscript\n    | TextCommand.FontSize\n}\n\nconst SCALE = 40 // from ketcher-core\n\nclass ReText extends ReObject {\n  private item: Text\n  paths: Array<Array<RaphaelBaseElement>> = []\n\n  constructor(text: Text) {\n    super('text')\n    this.item = text\n  }\n\n  static isSelectable() {\n    return true\n  }\n\n  getReferencePoints(): Array<Vec2> {\n    if (!this.paths.length) return []\n\n    const { p0, p1 } = this.getRelBox(this.paths)\n\n    const p = this.item.position\n    const width = Math.abs(Vec2.diff(p0, p1).x) / SCALE\n    const height = Math.abs(Vec2.diff(p0, p1).y) / SCALE\n\n    const refPoints: Array<Vec2> = []\n\n    refPoints.push(\n      this.item.position,\n      new Vec2(p.x, p.y + height),\n      new Vec2(p.x + width, p.y + height),\n      new Vec2(p.x + width, p.y)\n    )\n\n    return refPoints\n  }\n\n  hoverPath(render: any): any {\n    const { p0, p1 } = this.getRelBox(this.paths)\n    const topLeft = p0.sub(render.options.offset)\n    const { x: width, y: height } = p1.sub(p0)\n\n    return render.paper.rect(topLeft.x, topLeft.y, width, height, 5)\n  }\n\n  getRelBox(paths: Array<Array<RaphaelBaseElement>>): { p0: Vec2; p1: Vec2 } {\n    const firstElOfFirstRow: RaphaelBaseElement = paths[0][0]\n    const leftEdge = firstElOfFirstRow.getBBox().x\n\n    const firstRow: Array<RaphaelBaseElement> = paths[0]\n    const topEdge: number = Math.min(\n      ...firstRow.map((path) => path.getBBox().y)\n    )\n\n    const widestRow: Array<RaphaelBaseElement> = paths.reduce(\n      (widestRow, nextRow) =>\n        this.getRowWidth(nextRow) > this.getRowWidth(widestRow)\n          ? nextRow\n          : widestRow,\n      paths[0]\n    )\n    const lastElOfWidestRow: RaphaelBaseElement =\n      widestRow[widestRow.length - 1]\n    const rightEdge: number =\n      lastElOfWidestRow.getBBox().x + lastElOfWidestRow.getBBox().width\n\n    const lastRow: Array<RaphaelBaseElement> = paths[paths.length - 1]\n    const bottomEdge: number = Math.max(\n      ...lastRow.map((path) => path.getBBox().y + path.getBBox().height)\n    )\n\n    return {\n      p0: new Vec2(leftEdge, topEdge),\n      p1: new Vec2(rightEdge, bottomEdge)\n    }\n  }\n\n  getRowWidth(row: Array<RaphaelBaseElement>): number {\n    return row.reduce((rowWidth, nextRow) => {\n      rowWidth += nextRow.getBBox().width\n      return rowWidth\n    }, 0)\n  }\n\n  drawHover(render: any): any {\n    if (!this.paths.length) return null\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  makeSelectionPlate(restruct: ReStruct, paper: any, options: any): any {\n    if (!this.paths.length || !paper) return null\n    return this.hoverPath(restruct.render).attr(options.selectionStyle)\n  }\n\n  show(restruct: ReStruct, _id: number, options: any): void {\n    const render = restruct.render\n    const paper = render.paper\n    const paperScale = Scale.obj2scaled(this.item.position!, options)\n\n    let shiftY = 0\n    this.paths = []\n    // TODO: create parser in ketcher-core package\n    const rawContentState: RawDraftContentState | null = this.item.content\n      ? (JSON.parse(this.item.content) as RawDraftContentState)\n      : null\n    if (!rawContentState) {\n      return\n    }\n\n    rawContentState.blocks.forEach((block: RawDraftContentBlock) => {\n      const ranges: Array<[number, number, Record<string, any>]> =\n        this.getRanges(block, options)\n      let shiftX = 0\n      const row: Array<RaphaelBaseElement> = []\n      ranges.forEach(([start, end, styles]) => {\n        block.text = block.text.replace(/[^\\S\\r\\n]/g, '\\u00a0')\n        const path = paper\n          .text(\n            paperScale.x,\n            paperScale.y,\n            block.text.substring(start, end + 1) || '\\u00a0'\n          )\n          .attr({\n            font: options.font,\n            'font-size': options.fontsz,\n            'text-anchor': 'start',\n            fill: '#000000',\n            ...styles\n          })\n        path.translateAbs(shiftX, shiftY + (styles.shiftY || 0))\n        row.push(path)\n        shiftX += path.getBBox().width\n      })\n\n      this.paths.push(row)\n\n      const { p0, p1 } = this.getRelBox([row])\n      shiftY += Math.abs(Vec2.diff(p0, p1).y)\n    })\n\n    this.item.setPos(this.getReferencePoints())\n\n    render.ctab.addReObjectPath(\n      LayerMap.data,\n      this.visel,\n      flatten(this.paths),\n      null,\n      true\n    )\n  }\n\n  getRanges(\n    block: RawDraftContentBlock,\n    options: any\n  ): Array<[number, number, Record<string, any>]> {\n    const ranges: Array<[number, number, Record<string, any>]> = []\n\n    let start = 0\n    let styles: Record<string, any> = this.getStyles(block, start, options)\n    for (let i = 1; i < block.text.length; i++) {\n      const nextStyles = this.getStyles(block, i, options)\n\n      if (!isEqual(styles, nextStyles)) {\n        ranges.push([start, i - 1, styles])\n        styles = nextStyles\n        start = i\n      }\n    }\n    ranges.push([start, block.text.length - 1, styles])\n\n    return ranges\n  }\n\n  getStyles(\n    block: RawDraftContentBlock,\n    index: number,\n    options: any\n  ): Record<string, string> {\n    const ranges = block.inlineStyleRanges.filter(\n      (inlineRange: CustomRawDraftInlineStyleRange) =>\n        inlineRange.offset <= index &&\n        index < inlineRange.offset + inlineRange.length\n    )\n\n    const customFontSize: number | null = ranges.reduce(\n      (acc: number | null, range: any) => {\n        if (range.style.includes(TextCommand.FontSize)) {\n          return range.style.match(/\\d+/)?.[0]\n        }\n        return acc\n      },\n      null\n    )\n\n    return ranges.reduce(\n      (styles: any, textRange: CustomRawDraftInlineStyleRange) => {\n        const fontsz = customFontSize || options.fontsz\n        const fontszsub = (customFontSize || options.fontszsub) * 0.8\n        switch (textRange.style) {\n          case TextCommand.Bold:\n            styles['font-weight'] = 'bold'\n            break\n\n          case TextCommand.Italic:\n            styles['font-style'] = 'italic'\n            break\n\n          case TextCommand.Subscript:\n            styles['font-size'] = fontszsub + 'px'\n            styles.shiftY = fontsz / 3\n\n            break\n\n          case TextCommand.Superscript:\n            styles['font-size'] = fontszsub + 'px'\n            styles.shiftY = -fontsz / 3\n            break\n\n          case `${TextCommand.FontSize}_${customFontSize}px`:\n            styles['font-size'] = customFontSize + 'px'\n            break\n\n          default:\n        }\n\n        return styles\n      },\n      {}\n    )\n  }\n}\n\nexport default ReText\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Box2Abs,\n  FunctionalGroup,\n  Pile,\n  Pool,\n  Struct,\n  Vec2\n} from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReAtom from './reatom'\nimport ReBond from './rebond'\nimport ReDataSGroupData from './redatasgroupdata'\nimport ReEnhancedFlag from './reenhancedFlag'\nimport ReFrag from './refrag'\nimport ReLoop from './reloop'\nimport ReRGroup from './rergroup'\nimport ReRxnArrow from './rerxnarrow'\nimport ReRxnPlus from './rerxnplus'\nimport ReSGroup from './resgroup'\nimport ReSimpleObject from './resimpleObject'\nimport ReText from './retext'\nimport { Render } from '../raphaelRender'\nimport Visel from './visel'\nimport util from '../util'\n\nclass ReStruct {\n  public static maps = {\n    atoms: ReAtom,\n    bonds: ReBond,\n    rxnPluses: ReRxnPlus,\n    rxnArrows: ReRxnArrow,\n    frags: ReFrag,\n    rgroups: ReRGroup,\n    sgroupData: ReDataSGroupData,\n    enhancedFlags: ReEnhancedFlag,\n    sgroups: ReSGroup,\n    reloops: ReLoop,\n    simpleObjects: ReSimpleObject,\n    texts: ReText\n  }\n\n  public render: Render\n  public molecule: Struct\n  public atoms: Map<number, ReAtom> = new Map()\n  public bonds: Map<number, ReBond> = new Map()\n  public reloops: Map<number, ReLoop> = new Map()\n  public rxnPluses: Map<number, ReRxnPlus> = new Map()\n  public rxnArrows: Map<number, ReRxnArrow> = new Map()\n  public frags: Pool = new Pool()\n  public rgroups: Pool = new Pool()\n  public sgroups: Map<number, ReSGroup> = new Map()\n  public sgroupData: Map<number, ReDataSGroupData> = new Map()\n  public enhancedFlags: Map<number, ReEnhancedFlag> = new Map()\n  private simpleObjects: Map<number, ReSimpleObject> = new Map()\n  public texts: Map<number, ReText> = new Map()\n  private initialized = false\n  private layers: Array<any> = []\n  public connectedComponents: Pool = new Pool()\n  private ccFragmentType: Pool = new Pool()\n  private structChanged = false\n\n  private atomsChanged: Map<number, ReAtom> = new Map()\n  private simpleObjectsChanged: Map<number, ReSimpleObject> = new Map()\n  private rxnArrowsChanged: Map<number, ReRxnArrow> = new Map()\n  private rxnPlusesChanged: Map<number, ReRxnPlus> = new Map()\n  private enhancedFlagsChanged: Map<number, ReEnhancedFlag> = new Map()\n  private bondsChanged: Map<number, ReEnhancedFlag> = new Map()\n  private textsChanged: Map<number, ReText> = new Map()\n  constructor(molecule, render: Render) {\n    // eslint-disable-line max-statements\n    this.render = render\n    this.molecule = molecule || new Struct()\n    this.initLayers()\n    this.clearMarks()\n    // TODO: eachItem ?\n\n    molecule.atoms.forEach((atom, aid) => {\n      this.atoms.set(aid, new ReAtom(atom))\n    })\n\n    molecule.bonds.forEach((bond, bid) => {\n      this.bonds.set(bid, new ReBond(bond))\n    })\n\n    molecule.loops.forEach((loop, lid) => {\n      this.reloops.set(lid, new ReLoop(loop))\n    })\n\n    molecule.rxnPluses.forEach((item, id) => {\n      this.rxnPluses.set(id, new ReRxnPlus(item))\n    })\n\n    molecule.rxnArrows.forEach((item, id) => {\n      this.rxnArrows.set(id, new ReRxnArrow(item))\n    })\n\n    molecule.simpleObjects.forEach((item, id) => {\n      this.simpleObjects.set(id, new ReSimpleObject(item))\n    })\n\n    molecule.texts.forEach((item, id) => {\n      this.texts.set(id, new ReText(item))\n    })\n\n    molecule.frags.forEach((item, id) => {\n      this.frags.set(id, new ReFrag(item))\n      if (item) this.enhancedFlags.set(id, new ReEnhancedFlag())\n    })\n\n    molecule.rgroups.forEach((item, id) => {\n      this.rgroups.set(id, new ReRGroup(item))\n    })\n\n    molecule.sgroups.forEach((item, id) => {\n      this.sgroups.set(id, new ReSGroup(item))\n      if (item.type === 'DAT' && !item.data.attached) {\n        this.sgroupData.set(id, new ReDataSGroupData(item))\n      } // [MK] sort of a hack, we use the SGroup id for the data field id\n      if (FunctionalGroup.isFunctionalGroup(item)) {\n        this.molecule.functionalGroups.set(id, new FunctionalGroup(item))\n      }\n    })\n  }\n\n  connectedComponentRemoveAtom(aid: number, reAtom?: ReAtom): void {\n    const atom = reAtom || this.atoms.get(aid)\n    if (!atom || atom.component < 0) return\n    const cc = this.connectedComponents.get(atom.component)\n\n    cc.delete(aid)\n    if (cc.size < 1) this.connectedComponents.delete(atom.component)\n\n    atom.component = -1\n  }\n\n  clearConnectedComponents(): void {\n    this.connectedComponents.clear()\n    this.atoms.forEach((atom) => {\n      atom.component = -1\n    })\n  }\n\n  getConnectedComponent(\n    aid: Array<number> | number,\n    adjacentComponents: Pile\n  ): Pile {\n    const list = Array.isArray(aid) ? Array.from(aid) : [aid]\n    const ids = new Pile()\n\n    while (list.length > 0) {\n      const aid = list.pop()!\n      ids.add(aid)\n      const atom = this.atoms.get(aid)\n      if (!atom) continue\n      if (atom.component >= 0) adjacentComponents.add(atom.component)\n\n      atom.a.neighbors.forEach((neighbor) => {\n        const halfBond = this.molecule.halfBonds.get(neighbor)\n        if (!halfBond) return\n        const neiId = halfBond.end\n        if (!ids.has(neiId)) list.push(neiId)\n      })\n    }\n\n    return ids\n  }\n\n  addConnectedComponent(idSet: Pile<number>): number {\n    const compId = this.connectedComponents.add(idSet)\n    const adjacentComponents = new Pile()\n    const aidSet = this.getConnectedComponent(\n      Array.from(idSet),\n      adjacentComponents\n    )\n\n    adjacentComponents.delete(compId)\n\n    let type = -1\n    aidSet.forEach((aid) => {\n      const atom = this.atoms.get(aid)\n      if (!atom) return\n      atom.component = compId\n      if (atom.a.rxnFragmentType !== -1) type = atom.a.rxnFragmentType\n    })\n\n    this.ccFragmentType.set(compId, type)\n    return compId\n  }\n\n  removeConnectedComponent(ccid: number): boolean {\n    this.connectedComponents.get(ccid).forEach((aid) => {\n      const atom = this.atoms.get(aid)\n      if (atom) atom.component = -1\n    })\n\n    return this.connectedComponents.delete(ccid)\n  }\n\n  assignConnectedComponents(): void {\n    this.atoms.forEach((atom, aid) => {\n      if (atom.component >= 0) return\n\n      const adjacentComponents = new Pile()\n      const idSet = this.getConnectedComponent(aid, adjacentComponents)\n      adjacentComponents.forEach((ccid) => {\n        this.removeConnectedComponent(ccid)\n      })\n\n      this.addConnectedComponent(idSet)\n    })\n  }\n\n  initLayers(): void {\n    for (const group in LayerMap) {\n      this.layers[LayerMap[group]] = this.render.paper\n        .rect(0, 0, 10, 10)\n        .attr({\n          class: group + 'Layer',\n          fill: '#000',\n          opacity: '0.0'\n        })\n        .toFront()\n    }\n  }\n\n  addReObjectPath(\n    group: LayerMap,\n    visel: Visel,\n    path,\n    pos: Vec2 | null = null,\n    visible = false\n  ): void {\n    // eslint-disable-line max-params\n    if (!path || !this.layers[group].node.parentNode) return\n\n    const paths = Array.isArray(path) ? path : [path]\n\n    paths.forEach((path) => {\n      const offset = this.render.options.offset\n      let bb = visible ? Box2Abs.fromRelBox(util.relBox(path.getBBox())) : null\n      const ext = pos && bb ? bb.translate(pos.negated()) : null\n      if (offset !== null) {\n        path.translateAbs(offset.x, offset.y)\n        bb = bb ? bb.translate(offset) : null\n      }\n      visel.add(path, bb, ext)\n      path.insertBefore(this.layers[LayerMap[group]])\n    })\n  }\n\n  clearMarks(): void {\n    Object.keys(ReStruct.maps).forEach((map) => {\n      this[map + 'Changed'] = new Map()\n    })\n\n    this.structChanged = false\n  }\n\n  markItemRemoved(): void {\n    this.structChanged = true\n  }\n\n  markBond(bid: number, mark: number): void {\n    this.markItem('bonds', bid, mark)\n  }\n\n  markAtom(aid: number, mark: number): void {\n    this.markItem('atoms', aid, mark)\n  }\n\n  markItem(map: string, id: number, mark: number): void {\n    const mapChanged = this[map + 'Changed']\n\n    const value = mapChanged.has(id) ? Math.max(mark, mapChanged.get(id)) : mark\n\n    mapChanged.set(id, value)\n\n    if (this[map].has(id)) this.clearVisel(this[map].get(id).visel)\n  }\n\n  clearVisel(visel: Visel): void {\n    visel.paths.forEach((path) => {\n      path.remove()\n    })\n    visel.clear()\n  }\n\n  eachItem(func) {\n    Object.keys(ReStruct.maps).forEach((map) => {\n      this[map].forEach(func)\n    })\n  }\n\n  getVBoxObj(selection?): Box2Abs | null {\n    selection = selection || {}\n\n    if (isSelectionEmpty(selection)) {\n      Object.keys(ReStruct.maps).forEach((map) => {\n        selection[map] = Array.from(this[map].keys())\n      })\n    }\n\n    let vbox: Box2Abs | null = null\n    Object.keys(ReStruct.maps).forEach((map) => {\n      if (!selection[map]) return\n\n      selection[map].forEach((id) => {\n        const box = this[map].get(id).getVBoxObj(this.render)\n        if (box) vbox = vbox ? Box2Abs.union(vbox, box) : box.clone()\n      })\n    })\n\n    vbox = vbox || new Box2Abs(0, 0, 0, 0)\n    return vbox\n  }\n\n  translate(d): void {\n    this.eachItem((item) => item.visel.translate(d))\n  }\n\n  scale(s: number): void {\n    // NOTE: bounding boxes are not valid after scaling\n    this.eachItem((item) => scaleVisel(item.visel, s))\n  }\n\n  clearVisels(): void {\n    this.eachItem((item) => this.clearVisel(item.visel))\n  }\n\n  update(force: boolean): boolean {\n    // eslint-disable-line max-statements\n    force = force || !this.initialized\n\n    // check items to update\n    Object.keys(ReStruct.maps).forEach((map) => {\n      const mapChanged = this[map + 'Changed']\n      if (force) {\n        this[map].forEach((_item, id) => mapChanged.set(id, 1))\n      } else {\n        // check if some of the items marked are already gone\n        mapChanged.forEach((_value, id) => {\n          if (!this[map].has(id)) mapChanged.delete(id)\n        })\n      }\n    })\n\n    this.atomsChanged.forEach((_value, aid) =>\n      this.connectedComponentRemoveAtom(aid)\n    )\n\n    // clean up empty fragments\n    // TODO: fragment removal should be triggered by the action responsible for the fragment contents removal and form an operation of its own\n    const emptyFrags = this.frags.filter(\n      (fid, frag) => !frag.calcBBox(this.render.ctab, fid, this.render)\n    )\n\n    emptyFrags.forEach((frag, fid) => {\n      this.clearVisel(frag.visel)\n      this.frags.delete(fid)\n      this.molecule.frags.delete(fid)\n    })\n\n    Object.keys(ReStruct.maps).forEach((map) => {\n      const mapChanged = this[map + 'Changed']\n\n      mapChanged.forEach((_value, id) => {\n        this.clearVisel(this[map].get(id).visel)\n        this.structChanged = this.structChanged || mapChanged.get(id) > 0\n      })\n    })\n\n    // TODO: when to update sgroup?\n    this.sgroups.forEach((sgroup) => {\n      this.clearVisel(sgroup.visel)\n      sgroup.hovering = null\n      sgroup.selectionPlate = null\n    })\n\n    // TODO [RB] need to implement update-on-demand for fragments and r-groups\n    this.frags.forEach((frag) => {\n      this.clearVisel(frag.visel)\n    })\n\n    this.rgroups.forEach((rgroup) => {\n      this.clearVisel(rgroup.visel)\n    })\n\n    if (force) {\n      // clear and recreate all half-bonds\n      this.clearConnectedComponents()\n      this.molecule.initHalfBonds()\n      this.molecule.initNeighbors()\n    }\n\n    // only update half-bonds adjacent to atoms that have moved\n    const atomsChangedArray = Array.from(this.atomsChanged.keys())\n    this.molecule.updateHalfBonds(atomsChangedArray)\n    this.molecule.sortNeighbors(atomsChangedArray)\n\n    this.assignConnectedComponents()\n    this.initialized = true\n\n    this.verifyLoops()\n    const updLoops = force || this.structChanged\n    if (updLoops) this.updateLoops()\n    this.showLabels()\n    this.showBonds()\n    if (updLoops) this.showLoops()\n    this.showReactionSymbols()\n    this.showSGroups()\n\n    this.showFragments()\n    this.showRGroups()\n    this.showEnhancedFlags()\n    this.showSimpleObjects()\n    this.showTexts()\n    this.clearMarks()\n\n    return true\n  }\n\n  updateLoops(): void {\n    this.reloops.forEach((reloop) => {\n      this.clearVisel(reloop.visel)\n    })\n    const ret = this.molecule.findLoops()\n    ret.bondsToMark.forEach((bid) => {\n      this.markBond(bid, 1)\n    })\n    ret.newLoops.forEach((loopId) => {\n      this.reloops.set(loopId, new ReLoop(this.molecule.loops.get(loopId)))\n    })\n  }\n\n  showLoops(): void {\n    const options = this.render.options\n    this.reloops.forEach((reloop, rlid) => {\n      reloop.show(this, rlid, options)\n    })\n  }\n\n  showSimpleObjects(): void {\n    const options = this.render.options\n\n    this.simpleObjectsChanged.forEach((_value, id) => {\n      const simpleObject = this.simpleObjects.get(id)\n      if (simpleObject) simpleObject.show(this, options)\n    })\n  }\n\n  showTexts() {\n    const options = this.render.options\n\n    this.textsChanged.forEach((_value, id) => {\n      const text = this.texts.get(id)\n      if (text) text.show(this, id, options)\n    })\n  }\n\n  showReactionSymbols(): void {\n    const options = this.render.options\n\n    this.rxnArrowsChanged.forEach((_value, id) => {\n      const arrow = this.rxnArrows.get(id)\n      if (arrow) arrow.show(this, id, options)\n    })\n\n    this.rxnPlusesChanged.forEach((_value, id) => {\n      const plus = this.rxnPluses.get(id)\n      if (plus) plus.show(this, id, options)\n    })\n  }\n\n  showSGroups(): void {\n    this.molecule.sGroupForest\n      .getSGroupsBFS()\n      .reverse()\n      .forEach((id) => {\n        const resgroup = this.sgroups.get(id)\n        if (!resgroup) return\n        resgroup.show(this)\n      })\n  }\n\n  showFragments(): void {\n    this.frags.forEach((frag, id) => {\n      const path = frag.draw(this.render, id)\n      if (path) {\n        this.addReObjectPath(LayerMap.data, frag.visel, path, null, true)\n      }\n      // TODO fragment selection & highlighting\n    })\n  }\n\n  showRGroups(): void {\n    const options = this.render.options\n    this.rgroups.forEach((rgroup, id) => {\n      rgroup.show(this, id, options)\n    })\n  }\n\n  loopRemove(loopId: number): void {\n    const reloop = this.reloops.get(loopId)\n    if (!reloop) {\n      return\n    }\n    this.clearVisel(reloop.visel)\n\n    const bondlist: Array<number> = []\n\n    reloop.loop.hbs.forEach((hbid) => {\n      const hb = this.molecule.halfBonds.get(hbid)\n      if (!hb) return\n      hb.loop = -1\n      this.markBond(hb.bid, 1)\n      this.markAtom(hb.begin, 1)\n      bondlist.push(hb.bid)\n    })\n\n    this.reloops.delete(loopId)\n    this.molecule.loops.delete(loopId)\n  }\n\n  verifyLoops(): void {\n    this.reloops.forEach((reloop, rlid) => {\n      if (!reloop.isValid(this.molecule, rlid)) this.loopRemove(rlid)\n    })\n  }\n\n  showLabels(): void {\n    // eslint-disable-line max-statements\n    const options = this.render.options\n\n    this.atomsChanged.forEach((_value, aid) => {\n      const atom = this.atoms.get(aid)\n      if (atom) atom.show(this, aid, options)\n    })\n  }\n\n  showEnhancedFlags(): void {\n    const options = this.render.options\n\n    this.enhancedFlagsChanged.forEach((_value, chid) => {\n      const flag = this.enhancedFlags.get(chid)\n      if (flag) flag.show(this, chid, options)\n    })\n  }\n\n  showBonds(): void {\n    // eslint-disable-line max-statements\n    const options = this.render.options\n\n    this.bondsChanged.forEach((_value, bid) => {\n      const bond = this.bonds.get(bid)\n      if (bond) {\n        bond.show(this, bid, options)\n      }\n    })\n  }\n\n  setSelection(selection?) {\n    const atoms: { selected: boolean; sgroup: number }[] = []\n\n    Object.keys(ReStruct.maps).forEach((map) => {\n      const [mapValues] = this[map].values() // hack to include ReSGroup, figure out better solution\n      if (ReStruct.maps[map].isSelectable() || mapValues instanceof ReSGroup) {\n        this[map].forEach((item, id) => {\n          if (item instanceof ReAtom) {\n            let sgroup\n            for (const sgId of item.a.sgs.values()) {\n              sgroup = sgId\n            }\n            atoms.push({\n              selected: item.selected,\n              sgroup: sgroup\n            })\n          }\n          if (\n            item instanceof ReSGroup &&\n            FunctionalGroup.isContractedFunctionalGroup(\n              item.item.id,\n              this.molecule.functionalGroups\n            )\n          ) {\n            const sGroupAtoms = atoms.filter(\n              (atom) => atom.sgroup === item.item.id\n            )\n            item.selected = sGroupAtoms.length > 0 && sGroupAtoms[0].selected\n          }\n\n          let selected = selection?.[map]\n            ? selection[map].indexOf(id) > -1\n            : item.selected\n\n          if (selection === null) {\n            selected = false\n          }\n\n          this.showItemSelection(item, selected)\n        })\n      }\n    })\n  }\n\n  showItemSelection(item, selected) {\n    const exists = isSelectionSvgObjectExists(item)\n    // TODO: simplify me, who sets `removed`?\n    item.selected = selected\n    if (item instanceof ReDataSGroupData) item.sgroup.selected = selected\n    if (selected) {\n      if (!exists) {\n        const render = this.render\n        const options = render.options\n        const paper = render.paper\n\n        item.selectionPlate = item.makeSelectionPlate(this, paper, options)\n        this.addReObjectPath(\n          LayerMap.selectionPlate,\n          item.visel,\n          item.selectionPlate\n        )\n      }\n      if (item.selectionPlate) item.selectionPlate.show() // TODO [RB] review\n    } else if (exists && item.selectionPlate) {\n      item.selectionPlate.hide() // TODO [RB] review\n    }\n  }\n}\n\nfunction isSelectionEmpty(selection) {\n  if (!selection) return true\n\n  const anySelection = Object.keys(ReStruct.maps).some(\n    (map) => selection[map] && selection[map].length > 0\n  )\n\n  return !anySelection\n}\n\nfunction scaleRPath(path, scaleFactor: number): void {\n  if (path.type === 'set') {\n    // TODO: rework scaling\n    for (let i = 0; i < path.length; ++i) scaleRPath(path[i], scaleFactor)\n  } else {\n    if (!(typeof path.attrs === 'undefined')) {\n      if ('font-size' in path.attrs) {\n        path.attr('font-size', path.attrs['font-size'] * scaleFactor)\n      } else if ('stroke-width' in path.attrs) {\n        path.attr('stroke-width', path.attrs['stroke-width'] * scaleFactor)\n      }\n    }\n    path.scale(scaleFactor, scaleFactor, 0, 0)\n  }\n}\n\nfunction scaleVisel(visel, s) {\n  for (let i = 0; i < visel.paths.length; ++i) scaleRPath(visel.paths[i], s)\n}\n\n/**\n * SelectionPlate could be an item then value would be in it\n * or it could be a set of items then removed value need to be check on at least one of items in set\n * @param item\n * @returns {boolean}\n */\nfunction isSelectionSvgObjectExists(item) {\n  return (\n    item &&\n    item.selectionPlate !== null &&\n    ((!item.selectionPlate?.items && !item.selectionPlate?.removed) ||\n      (Array.isArray(item.selectionPlate?.items) &&\n        !item.selectionPlate[0]?.removed))\n  )\n}\n\nexport default ReStruct\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from 'domain/entities'\nimport { inRange } from 'lodash'\n\nlet FRAC = Math.PI / 12 // '15º'\n\nfunction setFracAngle(angle) {\n  FRAC = (Math.PI / 180) * angle\n}\n\nfunction calcAngle(pos0, pos1) {\n  const v = Vec2.diff(pos1, pos0)\n  return Math.atan2(v.y, v.x)\n}\n\nfunction fracAngle(angle, angle2) {\n  if (angle2) angle = calcAngle(angle, angle2)\n  return Math.round(angle / FRAC) * FRAC\n}\n\nfunction calcNewAtomPos(pos0, pos1, ctrlKey) {\n  const v = new Vec2(1, 0).rotate(\n    ctrlKey ? calcAngle(pos0, pos1) : fracAngle(pos0, pos1)\n  )\n  v.add_(pos0) // eslint-disable-line no-underscore-dangle\n  return v\n}\n\nfunction degrees(angle) {\n  let degree = Math.round((angle / Math.PI) * 180)\n  if (degree > 180) degree -= 360\n  else if (degree <= -180) degree += 360\n  return degree\n}\n\nconst BONDS_MERGE_ANGLE = 10 // 'º'\nconst BONDS_MERGE_SCALE = 0.2\n\nfunction mergeBondsParams(struct1, bond1, struct2, bond2) {\n  const begin1 = struct1.atoms.get(bond1.begin)\n  const begin2 = struct2.atoms.get(bond2.begin)\n  const end1 = struct1.atoms.get(bond1.end)\n  const end2 = struct2.atoms.get(bond2.end)\n\n  const angle = calcAngle(begin1.pp, end1.pp) - calcAngle(begin2.pp, end2.pp)\n  const mergeAngle = Math.abs(degrees(angle) % 180)\n\n  const scale = Vec2.dist(begin1.pp, end1.pp) / Vec2.dist(begin2.pp, end2.pp)\n\n  const merged =\n    !inRange(mergeAngle, BONDS_MERGE_ANGLE, 180 - BONDS_MERGE_ANGLE) &&\n    inRange(scale, 1 - BONDS_MERGE_SCALE, 1 + BONDS_MERGE_SCALE)\n\n  return { merged, angle, scale, cross: Math.abs(degrees(angle)) > 90 }\n}\n\nexport default {\n  calcAngle,\n  fracAngle,\n  calcNewAtomPos,\n  degrees,\n  setFracAngle,\n  mergeBondsParams\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from 'domain/entities'\nimport utils from '../editor/shared/utils'\n\nfunction defaultOptions(opt) {\n  const scaleFactor = opt.scale || 100\n\n  if (opt.rotationStep) utils.setFracAngle(opt.rotationStep)\n\n  const labelFontSize = Math.ceil(1.9 * (scaleFactor / 6))\n  const subFontSize = Math.ceil(0.7 * labelFontSize)\n\n  const defaultOptions = {\n    'dearomatize-on-load': false,\n    ignoreChiralFlag: false,\n    // flags for debugging\n    showAtomIds: false,\n    showBondIds: false,\n    showHalfBondIds: false,\n    showLoopIds: false,\n    // rendering customization flags\n    // TODO: hide enhanced flags opts\n    showValenceWarnings: true,\n    autoScale: false, // scale structure to fit into the given view box, used in view mode\n    autoScaleMargin: 0,\n    maxBondLength: 0, // 0 stands for \"not specified\"\n    atomColoring: true,\n    hideImplicitHydrogen: false,\n    hideTerminalLabels: false,\n    // atoms\n    carbonExplicitly: false,\n    showCharge: true,\n    showHydrogenLabels: 'on',\n    showValence: true,\n    // bonds\n    aromaticCircle: true,\n\n    scale: scaleFactor,\n    zoom: 1.0,\n    offset: new Vec2(),\n\n    lineWidth: scaleFactor / 20,\n    bondSpace: opt.doubleBondWidth || scaleFactor / 7,\n    stereoBond: opt.stereoBondWidth || scaleFactor / 7,\n    subFontSize,\n    font: '30px Arial',\n    fontsz: labelFontSize,\n    fontszsub: subFontSize,\n    fontRLabel: labelFontSize * 1.2,\n    fontRLogic: labelFontSize * 0.7,\n\n    /* styles */\n    lineattr: {\n      stroke: '#000',\n      'stroke-width': opt.bondThickness || scaleFactor / 20,\n      'stroke-linecap': 'round',\n      'stroke-linejoin': 'round'\n    },\n    /* eslint-enable quote-props */\n    selectionStyle: {\n      fill: '#7f7',\n      stroke: 'none'\n    },\n    hoverStyle: {\n      stroke: '#0c0',\n      'stroke-width': (0.6 * scaleFactor) / 20\n    },\n    sgroupBracketStyle: {\n      stroke: 'darkgray',\n      'stroke-width': (0.5 * scaleFactor) / 20\n    },\n    lassoStyle: {\n      stroke: 'gray',\n      'stroke-width': '1px'\n    },\n    hoverStyleSimpleObject: {\n      stroke: '#0c0',\n      'stroke-width': scaleFactor / 4,\n      'stroke-linecap': 'round',\n      'stroke-opacity': 0.6\n    },\n    atomSelectionPlateRadius: labelFontSize * 1.2,\n    contractedFunctionalGroupSize: 50\n  }\n\n  return Object.assign({}, defaultOptions, opt)\n}\n\nexport default defaultOptions\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, Struct, Vec2 } from 'domain/entities'\n\nimport Raphael from './raphael-ext'\nimport { ReStruct } from './restruct'\nimport { Scale } from 'domain/helpers'\nimport defaultOptions from './options'\nimport draw from './draw'\n\nexport function Render(clientArea, opt) {\n  let renderWidth = opt.width || clientArea.clientWidth - 10\n  let renderHeight = opt.height || clientArea.clientHeight - 10\n  renderWidth = renderWidth > 0 ? renderWidth : 0\n  renderHeight = renderHeight > 0 ? renderHeight : 0\n\n  this.userOpts = opt\n  this.clientArea = clientArea\n  this.paper = new Raphael(clientArea, renderWidth, renderHeight)\n  this.sz = Vec2.ZERO\n  this.ctab = new ReStruct(new Struct(), this)\n  this.options = defaultOptions(this.userOpts)\n}\n\nRender.prototype.updateOptions = function (opts) {\n  try {\n    const passedOptions = JSON.parse(opts)\n    if (passedOptions && typeof passedOptions === 'object') {\n      this.options = { ...this.options, ...passedOptions }\n      return this.options\n    }\n  } catch (e) {\n    console.log('Not a valid settings object')\n  }\n  return false\n}\n\nRender.prototype.selectionPolygon = function (r) {\n  return draw.selectionPolygon(this.paper, r, this.options)\n}\n\nRender.prototype.selectionLine = function (p0, p1) {\n  return draw.selectionLine(this.paper, p0, p1, this.options)\n}\n\nRender.prototype.selectionRectangle = function (p0, p1) {\n  return draw.selectionRectangle(this.paper, p0, p1, this.options)\n}\n\nRender.prototype.view2obj = function (p, isRelative) {\n  let scroll = this.scrollPos()\n  if (!this.useOldZoom) {\n    p = p.scaled(1 / this.options.zoom)\n    scroll = scroll.scaled(1 / this.options.zoom)\n  }\n  p = isRelative ? p : p.add(scroll).sub(this.options.offset)\n  return Scale.scaled2obj(p, this.options)\n}\n\nRender.prototype.obj2view = function (v, isRelative) {\n  let p = Scale.obj2scaled(v, this.options)\n  p = isRelative\n    ? p\n    : p\n        .add(this.options.offset)\n        .sub(this.scrollPos().scaled(1 / this.options.zoom))\n  if (!this.useOldZoom) p = p.scaled(this.options.zoom)\n  return p\n}\n\nRender.prototype.scrollPos = function () {\n  return new Vec2(this.clientArea.scrollLeft, this.clientArea.scrollTop)\n}\n\nRender.prototype.page2obj = function (event) {\n  const clientArea = this.clientArea\n\n  const { top: offsetTop, left: offsetLeft } =\n    clientArea.getBoundingClientRect()\n\n  const pp = new Vec2(event.clientX - offsetLeft, event.clientY - offsetTop)\n  return this.view2obj(pp)\n}\n\nRender.prototype.setPaperSize = function (sz) {\n  this.sz = sz\n  this.paper.setSize(sz.x * this.options.zoom, sz.y * this.options.zoom)\n  this.setViewBox(this.options.zoom)\n}\n\nRender.prototype.setOffset = function (newoffset) {\n  const delta = new Vec2(\n    newoffset.x - this.options.offset.x,\n    newoffset.y - this.options.offset.y\n  )\n  this.clientArea.scrollLeft += delta.x\n  this.clientArea.scrollTop += delta.y\n  this.options.offset = newoffset\n}\n\nRender.prototype.setZoom = function (zoom) {\n  // when scaling the canvas down it may happen that the scaled canvas is smaller than the view window\n  // don't forget to call setScrollOffset after zooming (or use extendCanvas directly)\n  this.options.zoom = zoom\n  this.paper.setSize(this.sz.x * zoom, this.sz.y * zoom)\n  this.setViewBox(zoom)\n}\n\nfunction calcExtend(canvasSize, x0, y0, newXSize, newYSize) {\n  // eslint-disable-line max-params\n  let ex = x0 < 0 ? -x0 : 0\n  let ey = y0 < 0 ? -y0 : 0\n\n  if (canvasSize.x < newXSize) {\n    ex += newXSize - canvasSize.x\n  }\n  if (canvasSize.y < newYSize) {\n    ey += newYSize - canvasSize.y\n  }\n  return new Vec2(ex, ey)\n}\n\nRender.prototype.setScrollOffset = function (x, y) {\n  const clientArea = this.clientArea\n  const cx = clientArea.clientWidth\n  const cy = clientArea.clientHeight\n  const e = calcExtend(\n    this.sz.scaled(this.options.zoom),\n    x,\n    y,\n    cx + Math.abs(x),\n    cy + Math.abs(y)\n  ).scaled(1 / this.options.zoom)\n  if (e.x > 0 || e.y > 0) {\n    this.setPaperSize(this.sz.add(e))\n    const d = new Vec2(x < 0 ? -x : 0, y < 0 ? -y : 0).scaled(\n      1 / this.options.zoom\n    )\n    if (d.x > 0 || d.y > 0) {\n      this.ctab.translate(d)\n      this.setOffset(this.options.offset.add(d))\n    }\n  }\n  // clientArea.scrollLeft = x\n  // clientArea.scrollTop = y\n  clientArea.scrollLeft = x * this.options.scale\n  clientArea.scrollTop = y * this.options.scale\n  // TODO: store drag position in scaled systems\n  // scrollLeft = clientArea.scrollLeft;\n  // scrollTop = clientArea.scrollTop;\n  this.update(false)\n}\n\nRender.prototype.setScale = function (z) {\n  if (this.options.offset) {\n    this.options.offset = this.options.offset.scaled(1 / z).scaled(z)\n  }\n  this.userOpts.scale *= z\n  this.options = null\n  this.update(true)\n}\n\nRender.prototype.setViewBox = function (z) {\n  if (!this.useOldZoom) {\n    this.paper.canvas.setAttribute(\n      'viewBox',\n      '0 0 ' + this.sz.x + ' ' + this.sz.y\n    )\n  } else this.setScale(z)\n}\n\nRender.prototype.setMolecule = function (ctab) {\n  this.paper.clear()\n  this.ctab = new ReStruct(ctab, this)\n  this.options.offset = new Vec2()\n  this.update(false)\n}\n\nRender.prototype.update = function (force = false, viewSz = null) {\n  // eslint-disable-line max-statements\n  viewSz =\n    viewSz ||\n    new Vec2(\n      this.clientArea.clientWidth || 100,\n      this.clientArea.clientHeight || 100\n    )\n\n  const changes = this.ctab.update(force)\n  this.ctab.setSelection() // [MK] redraw the selection bits where necessary\n  if (changes) {\n    const scale = this.options.scale\n    const bb = this.ctab\n      .getVBoxObj()\n      .transform(Scale.obj2scaled, this.options)\n      .translate(this.options.offset || new Vec2())\n\n    if (this.options.downScale) {\n      this.ctab.molecule.rescale()\n    }\n\n    const isAutoScale = this.options.autoScale || this.options.downScale\n    if (!isAutoScale) {\n      const ext = Vec2.UNIT.scaled(scale)\n      const eb = bb.sz().length() > 0 ? bb.extend(ext, ext) : bb\n      const vb = new Box2Abs(\n        this.scrollPos(),\n        viewSz.scaled(1 / this.options.zoom).sub(Vec2.UNIT.scaled(20))\n      )\n      const cb = Box2Abs.union(vb, eb)\n      if (!this.oldCb) this.oldCb = new Box2Abs()\n\n      const sz = cb.sz().floor()\n      const delta = this.oldCb.p0.sub(cb.p0).ceil()\n      this.oldBb = bb\n      if (!this.sz || sz.x !== this.sz.x || sz.y !== this.sz.y) {\n        this.setPaperSize(sz)\n      }\n\n      this.options.offset = this.options.offset || new Vec2()\n      if (delta.x !== 0 || delta.y !== 0) {\n        this.setOffset(this.options.offset.add(delta))\n        this.ctab.translate(delta)\n      }\n    } else {\n      const sz1 = bb.sz()\n      const marg = this.options.autoScaleMargin\n      const mv = new Vec2(marg, marg)\n      const csz = viewSz\n      if (marg && (csz.x < 2 * marg + 1 || csz.y < 2 * marg + 1)) {\n        throw new Error('View box too small for the given margin')\n      }\n      let rescale =\n        this.options.rescaleAmount ||\n        Math.max(sz1.x / (csz.x - 2 * marg), sz1.y / (csz.y - 2 * marg))\n\n      const isForceDownscale = this.options.downScale && rescale < 1\n      const isBondsLengthFit = this.options.maxBondLength / rescale > 1\n      if (isBondsLengthFit || isForceDownscale) {\n        rescale = 1\n      }\n      const sz2 = sz1.add(mv.scaled(2 * rescale))\n      /* eslint-disable no-mixed-operators */\n      this.paper.setViewBox(\n        bb.pos().x - marg * rescale - (csz.x * rescale - sz2.x) / 2,\n        bb.pos().y - marg * rescale - (csz.y * rescale - sz2.y) / 2,\n        csz.x * rescale,\n        csz.y * rescale\n      )\n      /* eslint-enable no-mixed-operators */\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n// todo: rename file in another PR\nimport { ReStruct, StereLabelStyleType } from '../../render'\n\nimport { OperationType } from './OperationType'\n\ntype ValueOf<TObject extends object> = Readonly<TObject[keyof TObject]>\ntype OperationType = ValueOf<typeof OperationType>\n\nclass BaseOperation {\n  // eslint-disable-next-line no-use-before-define\n  private _inverted: BaseOperation | undefined\n  type: OperationType\n  priority: number\n  data: any\n\n  constructor(type: OperationType, priority = 0) {\n    this.type = type\n    this.priority = priority\n  }\n\n  execute(_restruct: ReStruct): void {\n    throw new Error('Operation.execute() is not implemented')\n  }\n\n  perform(restruct: ReStruct): BaseOperation {\n    this.execute(restruct)\n    if (!this._inverted) {\n      this._inverted = this.invert()\n      this._inverted._inverted = this\n    }\n    return this._inverted\n  }\n\n  invert(): BaseOperation {\n    throw new Error('Operation.invert() is not implemented')\n  }\n\n  isDummy(_restruct: ReStruct): boolean {\n    return false\n  }\n\n  protected static invalidateAtom(restruct: ReStruct, atomId: number, level?) {\n    const atom = restruct.atoms.get(atomId)\n    if (!atom) {\n      return\n    }\n\n    restruct.markAtom(atomId, level ? 1 : 0)\n\n    const halfBonds = restruct.molecule.halfBonds\n\n    atom.a.neighbors.forEach((halfBondId) => {\n      if (!halfBonds.has(halfBondId)) {\n        return\n      }\n\n      const halfBond = halfBonds.get(halfBondId)\n      if (!halfBond) {\n        return\n      }\n\n      restruct.markBond(halfBond.bid, 1)\n      restruct.markAtom(halfBond.end, 0)\n\n      if (level) {\n        BaseOperation.invalidateLoop(restruct, halfBond.bid)\n      }\n    })\n\n    const fragment = atom.a.fragment\n    const stereoLabelStyle = restruct.render.options.stereoLabelStyle\n\n    restruct.atoms.forEach((atom, atomId) => {\n      if (\n        stereoLabelStyle === StereLabelStyleType.IUPAC ||\n        stereoLabelStyle === StereLabelStyleType.Classic\n      ) {\n        if (atom.a.fragment === fragment) restruct.markAtom(atomId, 0)\n      }\n    })\n  }\n\n  protected static invalidateLoop(restruct: ReStruct, bondId: number) {\n    const bond = restruct.bonds.get(bondId)\n    if (!bond || !bond.b.hb1 || !bond.b.hb2) {\n      return\n    }\n\n    const halfBond1 = restruct.molecule.halfBonds.get(bond.b.hb1)\n    const halfBond2 = restruct.molecule.halfBonds.get(bond.b.hb2)\n\n    if (halfBond1 && halfBond1.loop >= 0) {\n      restruct.loopRemove(halfBond1.loop)\n    }\n\n    if (halfBond2 && halfBond2.loop >= 0) {\n      restruct.loopRemove(halfBond2.loop)\n    }\n  }\n\n  protected static invalidateBond(restruct: ReStruct, bondId: number) {\n    BaseOperation.invalidateLoop(restruct, bondId)\n\n    const bond = restruct.bonds.get(bondId)\n    if (!bond) {\n      return\n    }\n    BaseOperation.invalidateAtom(restruct, bond.b.begin, 0)\n    BaseOperation.invalidateAtom(restruct, bond.b.end, 0)\n  }\n\n  protected static invalidateItem(\n    restruct: ReStruct,\n    map,\n    id: number,\n    level?: any\n  ) {\n    if (map === 'atoms') {\n      BaseOperation.invalidateAtom(restruct, id, level)\n      return\n    }\n\n    if (map === 'bonds') {\n      BaseOperation.invalidateBond(restruct, id)\n\n      if (level > 0) {\n        BaseOperation.invalidateLoop(restruct, id)\n      }\n      return\n    }\n\n    restruct.markItem(map, id, level)\n  }\n\n  protected static invalidateEnhancedFlag(\n    restruct: ReStruct,\n    fragmentId: number\n  ) {\n    BaseOperation.invalidateItem(restruct, 'enhancedFlags', fragmentId, 1)\n  }\n}\n\nexport { BaseOperation }\nexport default BaseOperation\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport const OperationType = Object.freeze({\n  ATOM_ADD: 'Add atom',\n  ATOM_DELETE: 'Delete atom',\n  ATOM_ATTR: 'Set atom attribute',\n  ATOM_MOVE: 'Move atom',\n  CALC_IMPLICIT_H: 'Calculate implicit hydrogen',\n  BOND_ADD: 'Add bond',\n  BOND_DELETE: 'Delete bond',\n  BOND_ATTR: 'Set bond attribute',\n  BOND_MOVE: 'Move bond',\n  LOOP_MOVE: 'Move loop',\n  S_GROUP_ATOM_ADD: 'Add atom to s-group',\n  S_GROUP_ATOM_REMOVE: 'Remove atom from s-group',\n  S_GROUP_ATTR: 'Set s-group attribute',\n  S_GROUP_CREATE: 'Create s-group',\n  S_GROUP_DELETE: 'Delete s-group',\n  S_GROUP_ADD_TO_HIERACHY: 'Add s-group to hierarchy',\n  S_GROUP_REMOVE_FROM_HIERACHY: 'Delete s-group from hierarchy',\n  R_GROUP_ATTR: 'Set r-group attribute',\n  R_GROUP_FRAGMENT: 'R-group fragment',\n  UPDATE_IF_THEN: 'Update',\n  RESTORE_IF_THEN: 'Restore',\n  RXN_ARROW_ADD: 'Add rxn arrow',\n  RXN_ARROW_DELETE: 'Delete rxn arrow',\n  RXN_ARROW_MOVE: 'Move rxn arrow',\n  RXN_ARROW_RESIZE: 'Resize rxn arrow',\n  RXN_PLUS_ADD: 'Add rxn plus',\n  RXN_PLUS_DELETE: 'Delete rxn plus',\n  RXN_PLUS_MOVE: 'Move rxn plus',\n  S_GROUP_DATA_MOVE: 'Move s-group data',\n  CANVAS_LOAD: 'Load canvas',\n  ALIGN_DESCRIPTORS: 'Align descriptors',\n  SIMPLE_OBJECT_ADD: 'Add simple object',\n  SIMPLE_OBJECT_DELETE: 'Delete simple object',\n  SIMPLE_OBJECT_MOVE: 'Move simple object',\n  SIMPLE_OBJECT_RESIZE: 'Resize simple object',\n  RESTORE_DESCRIPTORS_POSITION: 'Restore descriptors position',\n  FRAGMENT_ADD: 'Add fragment',\n  FRAGMENT_DELETE: 'Delete fragment',\n  FRAGMENT_STEREO_FLAG: 'Add fragment stereo flag',\n  FRAGMENT_ADD_STEREO_ATOM: 'Add stereo atom to fragment',\n  FRAGMENT_DELETE_STEREO_ATOM: 'Delete stereo atom from fragment',\n  ENHANCED_FLAG_MOVE: 'Move enhanced flag',\n  TEXT_CREATE: 'Add text',\n  TEXT_UPDATE: 'Edit text',\n  TEXT_DELETE: 'Delete text',\n  TEXT_MOVE: 'Move text',\n  ADD_HIGHLIGHT: 'Highlight',\n  UPDATE_HIGHLIGHT: 'Update highlight',\n  REMOVE_HIGHLIGHT: 'Remove highlight'\n})\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\ntype Data = {\n  aid?: any\n  attribute?: any\n  value?: any\n}\n\nexport class AtomAttr extends BaseOperation {\n  data: Data | null\n  data2: Data | null\n\n  constructor(atomId?: any, attribute?: any, value?: any) {\n    super(OperationType.ATOM_ATTR, 1)\n    this.data = { aid: atomId, attribute, value }\n    this.data2 = null\n  }\n\n  execute(restruct: ReStruct) {\n    if (this.data) {\n      const { aid, attribute, value } = this.data\n\n      const atom = restruct.molecule.atoms.get(aid)!\n      if (!this.data2) {\n        this.data2 = {\n          aid,\n          attribute,\n          value: atom[attribute]\n        }\n      }\n\n      atom[attribute] = value\n      BaseOperation.invalidateAtom(restruct, aid)\n    }\n  }\n\n  invert() {\n    const inverted = new AtomAttr()\n    inverted.data = this.data2\n    inverted.data2 = this.data\n    return inverted\n  }\n\n  isDummy(restruct: ReStruct) {\n    return (\n      restruct.molecule.atoms.get(this.data?.aid)![this.data?.attribute] ===\n      this.data?.value\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\nimport { Scale } from 'domain/helpers'\n\nexport class AtomMove extends BaseOperation {\n  data: {\n    aid: any\n    d: any\n    noinvalidate: any\n  }\n\n  constructor(atomId?: any, d?: any, noinvalidate?: any) {\n    super(OperationType.ATOM_MOVE, 2)\n    this.data = { aid: atomId, d, noinvalidate }\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const { aid, d } = this.data\n    const atom = struct.atoms.get(aid)\n    if (!atom) return\n    atom!.pp.add_(d) // eslint-disable-line no-underscore-dangle\n    const reatom = restruct.atoms.get(aid)\n    if (reatom) {\n      const scaled = Scale.obj2scaled(d, restruct.render.options)\n      reatom.visel.translate(scaled)\n    }\n\n    this.data.d = d.negated()\n\n    if (!this.data.noinvalidate) {\n      BaseOperation.invalidateAtom(restruct, aid, 1)\n    }\n  }\n\n  invert() {\n    const inverted = new AtomMove()\n    inverted.data = this.data\n    return inverted\n  }\n\n  isDummy() {\n    const { d } = this.data\n    return d.x === 0 && d.y === 0\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Pile, Vec2 } from 'domain/entities'\nimport { ReAtom, ReStruct } from '../../../render'\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  aid: any\n  atom: any\n  pos: any\n}\n\nclass AtomAdd extends BaseOperation {\n  data: Data\n\n  constructor(atom?: any, pos?: any) {\n    super(OperationType.ATOM_ADD)\n    this.data = { atom, pos, aid: null }\n  }\n\n  execute(restruct: ReStruct) {\n    const { atom, pos } = this.data\n\n    const struct = restruct.molecule\n\n    const pp: { label: string } = { label: '' }\n    if (atom) {\n      Object.keys(atom).forEach((p) => {\n        pp[p] = atom[p]\n      })\n    }\n\n    pp.label = pp.label || 'C'\n    if (typeof this.data.aid !== 'number') {\n      this.data.aid = struct.atoms.add(new Atom(pp))\n    } else {\n      struct.atoms.set(this.data.aid, new Atom(pp))\n    }\n\n    const { aid } = this.data\n\n    // notifyAtomAdded\n    const atomData = new ReAtom(struct.atoms.get(aid)!)\n\n    atomData.component = restruct.connectedComponents.add(new Pile([aid]))\n    restruct.atoms.set(aid, atomData)\n    restruct.markAtom(aid, 1)\n\n    struct.atomSetPos(aid, new Vec2(pos))\n\n    const arrow = struct.rxnArrows.get(0)\n    if (arrow) {\n      const atom = struct.atoms.get(aid)!\n      atom.rxnFragmentType = struct.defineRxnFragmentTypeForAtomset(\n        new Pile([aid]),\n        arrow.pos[0].x\n      )\n    }\n  }\n\n  invert() {\n    const inverted = new AtomDelete()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass AtomDelete extends BaseOperation {\n  data: Data\n\n  constructor(atomId?: any) {\n    super(OperationType.ATOM_DELETE, 5)\n    this.data = { aid: atomId, atom: null, pos: null }\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid } = this.data\n\n    const struct = restruct.molecule\n    if (!this.data.atom) {\n      this.data.atom = struct.atoms.get(aid)\n      this.data.pos = this.data.atom.pp\n    }\n\n    // notifyAtomRemoved(aid);\n    const restructedAtom = restruct.atoms.get(aid)\n    if (!restructedAtom) {\n      return\n    }\n\n    const set = restruct.connectedComponents.get(restructedAtom.component)\n    set.delete(aid)\n    if (set.size === 0) {\n      restruct.connectedComponents.delete(restructedAtom.component)\n    }\n\n    restruct.clearVisel(restructedAtom.visel)\n    restruct.atoms.delete(aid)\n    restruct.markItemRemoved()\n    struct.atoms.delete(aid)\n  }\n\n  invert() {\n    const inverted = new AtomAdd()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { AtomAdd, AtomDelete }\nexport * from './AtomAttr'\nexport * from './AtomMove'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\ntype Data = {\n  bid: any\n  attribute: any\n  value: any\n}\n\nexport class BondAttr extends BaseOperation {\n  data: Data | null\n  data2: Data | null\n\n  constructor(bondId?: any, attribute?: any, value?: any) {\n    super(OperationType.BOND_ATTR, 2)\n    this.data = { bid: bondId, attribute, value }\n    this.data2 = null\n  }\n\n  execute(restruct: ReStruct) {\n    if (this.data) {\n      const { attribute, bid, value } = this.data\n      const bond = restruct.molecule.bonds.get(bid)!\n\n      if (!this.data2) {\n        this.data2 = {\n          bid: bid,\n          attribute: attribute,\n          value: bond[attribute]\n        }\n      }\n\n      bond[attribute] = value\n\n      BaseOperation.invalidateBond(restruct, bid)\n      if (attribute === 'type') {\n        BaseOperation.invalidateLoop(restruct, bid)\n      }\n    }\n  }\n\n  isDummy(restruct: ReStruct) {\n    if (this.data) {\n      const { attribute, bid, value } = this.data\n      const bond = restruct.molecule.bonds.get(bid)!\n      return bond[attribute] === value\n    }\n    return false\n  }\n\n  invert() {\n    const inverted = new BondAttr()\n    inverted.data = this.data2\n    inverted.data2 = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\nimport { Scale } from 'domain/helpers'\n\nexport class BondMove extends BaseOperation {\n  data: {\n    bid: any\n    d: any\n  }\n\n  constructor(bondId?: any, d?: any) {\n    super(OperationType.BOND_MOVE, 2)\n    this.data = { bid: bondId, d }\n  }\n\n  execute(restruct: ReStruct) {\n    const { bid, d } = this.data\n    const bond = restruct.bonds.get(bid)\n    if (!bond) return\n\n    const scaled = Scale.obj2scaled(d, restruct.render.options)\n    bond.visel.translate(scaled)\n    this.data.d = d.negated()\n  }\n\n  invert() {\n    const inverted = new BondMove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReBond, ReStruct } from '../../../render'\n\nimport { BaseOperation } from '../base'\nimport { Bond } from 'domain/entities'\nimport { OperationType } from '../OperationType'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  bond: any\n  begin: any\n  end: any\n  bid: any\n}\n\nclass BondAdd extends BaseOperation {\n  data: Data\n\n  constructor(begin?: any, end?: any, bond?: any) {\n    super(OperationType.BOND_ADD, 1)\n    this.data = { bond, begin, end, bid: null }\n  }\n\n  execute(restruct: ReStruct) {\n    const { begin, bond, end } = this.data\n    // eslint-disable-line max-statements\n    const struct = restruct.molecule\n\n    if (begin === end) {\n      throw new Error('Distinct atoms expected')\n    }\n\n    BaseOperation.invalidateAtom(restruct, begin, 1)\n    BaseOperation.invalidateAtom(restruct, end, 1)\n\n    const pp: {\n      type: number\n      begin: number\n      end: number\n    } = {\n      type: 0,\n      begin: 0,\n      end: 0\n    }\n\n    if (bond) {\n      Object.keys(bond).forEach((p) => {\n        pp[p] = bond[p]\n      })\n    }\n\n    pp.type = pp.type || Bond.PATTERN.TYPE.SINGLE\n    pp.begin = begin\n    pp.end = end\n\n    const newBond = new Bond(pp)\n    if (typeof this.data.bid === 'number') {\n      struct.bonds.set(this.data.bid, newBond)\n    } else {\n      this.data.bid = struct.bonds.add(newBond)\n    }\n\n    const { bid } = this.data\n    const structBond = struct.bonds.get(bid)!\n\n    struct.bondInitHalfBonds(bid)\n    struct.atomAddNeighbor(structBond.hb1)\n    struct.atomAddNeighbor(structBond.hb2)\n\n    // notifyBondAdded\n    restruct.bonds.set(bid, new ReBond(structBond))\n    restruct.markBond(bid, 1)\n  }\n\n  invert() {\n    const inverted = new BondDelete()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass BondDelete extends BaseOperation {\n  data: Data\n\n  constructor(bondId?: any) {\n    super(OperationType.BOND_DELETE, 3)\n    this.data = { bid: bondId, bond: null, begin: null, end: null }\n  }\n\n  execute(restruct: ReStruct) {\n    const { bid } = this.data\n\n    // eslint-disable-line max-statements\n    const struct = restruct.molecule\n    if (!this.data.bond) {\n      this.data.bond = struct.bonds.get(bid)\n      this.data.begin = this.data.bond.begin\n      this.data.end = this.data.bond.end\n    }\n\n    BaseOperation.invalidateBond(restruct, bid)\n\n    // notifyBondRemoved\n    const rebond = restruct.bonds.get(bid)\n    if (!rebond) return\n    ;[rebond.b.hb1, rebond.b.hb2].forEach((hbid) => {\n      if (hbid === undefined) return\n      const halfBond = restruct.molecule.halfBonds.get(hbid)\n      if (halfBond && halfBond.loop >= 0) {\n        restruct.loopRemove(halfBond.loop)\n      }\n    }, restruct)\n    restruct.clearVisel(rebond.visel)\n    restruct.bonds.delete(bid)\n    restruct.markItemRemoved()\n\n    const structBond = struct.bonds.get(bid)!\n    ;[structBond.hb1, structBond.hb2].forEach((hbid) => {\n      const halfBond = struct.halfBonds.get(hbid!)\n      if (!halfBond) {\n        return\n      }\n\n      const atom = struct.atoms.get(halfBond.begin)!\n      const pos = atom.neighbors.indexOf(hbid!)\n      const prev = (pos + atom.neighbors.length - 1) % atom.neighbors.length\n      const next = (pos + 1) % atom.neighbors.length\n      struct.setHbNext(atom.neighbors[prev], atom.neighbors[next])\n      atom.neighbors.splice(pos, 1)\n    })\n    struct.halfBonds.delete(structBond.hb1!)\n    struct.halfBonds.delete(structBond.hb2!)\n\n    struct.bonds.delete(bid)\n  }\n\n  invert() {\n    const inverted = new BondAdd()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { BondAdd, BondDelete }\nexport * from './BondAttr'\nexport * from './BondMove'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\nimport { Struct } from 'domain/entities'\n\nexport class CanvasLoad extends BaseOperation {\n  data: {\n    struct?: Struct\n  }\n\n  constructor(struct?: Struct) {\n    super(OperationType.CANVAS_LOAD)\n    this.data = { struct }\n  }\n\n  execute(restruct: ReStruct) {\n    const oldStruct = restruct.molecule\n    restruct.clearVisels() // TODO: What is it?\n    if (this.data.struct) {\n      restruct.render.setMolecule(this.data.struct)\n    }\n\n    this.data.struct = oldStruct\n  }\n\n  invert() {\n    const inverted = new CanvasLoad()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\nimport { Vec2 } from 'domain/entities'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\nclass AlignDescriptors extends BaseOperation {\n  history: any\n\n  constructor() {\n    super(OperationType.ALIGN_DESCRIPTORS)\n    this.history = {}\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const sgroups: any[] = Array.from(struct.sgroups.values()).reverse()\n\n    const structBox: any = struct.getCoordBoundingBoxObj()\n    let alignPoint = new Vec2(structBox.max.x, structBox.min.y).add(\n      new Vec2(2.0, -1.0)\n    )\n\n    sgroups.forEach((sgroup) => {\n      this.history[sgroup.id] = new Vec2(sgroup.pp)\n      alignPoint = alignPoint.add(new Vec2(0.0, 0.5))\n      sgroup.pp = alignPoint\n      struct.sgroups.set(sgroup.id, sgroup)\n      BaseOperation.invalidateItem(restruct, 'sgroupData', sgroup.id, 1)\n    })\n  }\n\n  invert() {\n    return new RestoreDescriptorsPosition(this.history)\n  }\n}\n\nclass RestoreDescriptorsPosition extends BaseOperation {\n  history: any\n\n  constructor(history: any) {\n    super(OperationType.RESTORE_DESCRIPTORS_POSITION)\n    this.history = history\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const sgroups: any[] = Array.from(struct.sgroups.values())\n\n    sgroups.forEach((sgroup) => {\n      sgroup.pp = this.history[sgroup.id]\n      struct.sgroups.set(sgroup.id, sgroup)\n      BaseOperation.invalidateItem(restruct, 'sgroupData', sgroup.id, 1)\n    })\n  }\n\n  invert() {\n    return new AlignDescriptors()\n  }\n}\n\nexport { AlignDescriptors, RestoreDescriptorsPosition }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Fragment, Vec2 } from 'domain/entities'\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\n\nexport class EnhancedFlagMove extends BaseOperation {\n  data: {\n    frid: any\n    p: any\n  }\n\n  constructor(fragmentId?: any, p?: any) {\n    super(OperationType.ENHANCED_FLAG_MOVE)\n    this.data = { frid: fragmentId, p }\n  }\n\n  execute(restruct: ReStruct) {\n    const { frid } = this.data\n    const { p } = this.data\n    const fragment = restruct.molecule.frags.get(frid)\n    if (!fragment) return\n\n    const currentPosition = fragment.stereoFlagPosition\n      ? new Vec2(fragment.stereoFlagPosition.x, fragment.stereoFlagPosition.y)\n      : Fragment.getDefaultStereoFlagPosition(restruct.molecule, frid)!\n\n    const newPosition = Vec2.sum(currentPosition, p)\n    fragment.stereoFlagPosition = newPosition\n\n    this.data.p = p.negated()\n    BaseOperation.invalidateItem(restruct, 'enhancedFlags', frid, 1)\n  }\n\n  invert() {\n    const inverted = new EnhancedFlagMove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\nclass UpdateIfThen extends BaseOperation {\n  rgid_new: any\n  rgid_old: any\n  ifThenHistory: any\n  skipRgids: any[]\n\n  constructor(rgNew: any, rgOld: any, skipRgids: any = []) {\n    super(OperationType.UPDATE_IF_THEN)\n    this.rgid_new = rgNew\n    this.rgid_old = rgOld\n    this.ifThenHistory = new Map()\n    this.skipRgids = skipRgids || []\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n\n    struct.rgroups.forEach((rg, rgid) => {\n      if (rg.ifthen === this.rgid_old && !this.skipRgids.includes(rgid)) {\n        rg.ifthen = this.rgid_new\n        this.ifThenHistory.set(rgid, this.rgid_old)\n        struct.rgroups.set(rgid, rg)\n      }\n    })\n  }\n\n  invert() {\n    return new RestoreIfThen(this.rgid_new, this.rgid_old, this.ifThenHistory)\n  }\n}\n\nclass RestoreIfThen extends BaseOperation {\n  rgid_new: any\n  rgid_old: any\n  ifThenHistory: any\n\n  constructor(rgNew: any, rgOld: any, history: any) {\n    super(OperationType.RESTORE_IF_THEN)\n    this.rgid_new = rgNew\n    this.rgid_old = rgOld\n    this.ifThenHistory = history || new Map()\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n\n    this.ifThenHistory.forEach((rg, rgid) => {\n      const rgValue = struct.rgroups.get(rgid)!\n      rgValue.ifthen = rg\n      struct.rgroups.set(rgid, rgValue)\n    })\n  }\n\n  invert() {\n    return new UpdateIfThen(this.rgid_old, this.rgid_new)\n  }\n}\n\nexport { UpdateIfThen, RestoreIfThen }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReEnhancedFlag, ReFrag, ReStruct } from '../../render'\n\nimport { BaseOperation } from './base'\nimport { Fragment } from 'domain/entities'\nimport { OperationType } from './OperationType'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\nclass FragmentAdd extends BaseOperation {\n  frid: any\n\n  constructor(fragmentId?: any) {\n    super(OperationType.FRAGMENT_ADD)\n    this.frid = typeof fragmentId === 'undefined' ? null : fragmentId\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const frag = new Fragment()\n\n    if (this.frid === null) {\n      this.frid = struct.frags.add(frag)\n    } else {\n      struct.frags.set(this.frid, frag)\n    }\n\n    restruct.frags.set(this.frid, new ReFrag(frag)) // TODO add restruct.notifyFragmentAdded\n    restruct.enhancedFlags.set(this.frid, new ReEnhancedFlag())\n  }\n\n  invert() {\n    return new FragmentDelete(this.frid)\n  }\n}\n\nclass FragmentDelete extends BaseOperation {\n  frid: any\n\n  constructor(fragmentId: any) {\n    super(OperationType.FRAGMENT_DELETE, 100)\n    this.frid = fragmentId\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    if (!struct.frags.get(this.frid)) {\n      return\n    }\n\n    BaseOperation.invalidateItem(restruct, 'frags', this.frid, 1)\n    restruct.frags.delete(this.frid)\n    struct.frags.delete(this.frid) // TODO add restruct.notifyFragmentRemoved\n\n    const enhancedFalg = restruct.enhancedFlags.get(this.frid)\n    if (!enhancedFalg) return\n    restruct.clearVisel(enhancedFalg.visel)\n    restruct.enhancedFlags.delete(this.frid)\n  }\n\n  invert() {\n    return new FragmentAdd(this.frid)\n  }\n}\n\nexport { FragmentAdd, FragmentDelete }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  frid: any\n  aid: any\n}\n\n// todo : merge add and delete stereo atom\nclass FragmentAddStereoAtom extends BaseOperation {\n  data: Data\n\n  constructor(fragmentId: any, atomId: any) {\n    super(OperationType.FRAGMENT_ADD_STEREO_ATOM, 100)\n    this.data = { frid: fragmentId, aid: atomId }\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid, frid } = this.data\n\n    const frag = restruct.molecule.frags.get(frid)\n    if (frag) {\n      frag.updateStereoAtom(restruct.molecule, aid, frid, true)\n\n      BaseOperation.invalidateEnhancedFlag(restruct, frid)\n    }\n  }\n\n  invert() {\n    return new FragmentDeleteStereoAtom(this.data.frid, this.data.aid)\n  }\n}\n\nclass FragmentDeleteStereoAtom extends BaseOperation {\n  data: Data\n\n  constructor(fragmentId: any, atomId: any) {\n    super(OperationType.FRAGMENT_DELETE_STEREO_ATOM, 90)\n    this.data = { frid: fragmentId, aid: atomId }\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid, frid } = this.data\n\n    const frag = restruct.molecule.frags.get(frid)\n    if (frag) {\n      frag.updateStereoAtom(restruct.molecule, aid, frid, false)\n\n      BaseOperation.invalidateEnhancedFlag(restruct, frid)\n    }\n  }\n\n  invert() {\n    const { aid, frid } = this.data\n    return new FragmentAddStereoAtom(frid, aid)\n  }\n}\n\nexport { FragmentAddStereoAtom, FragmentDeleteStereoAtom }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\n\nexport class FragmentStereoFlag extends BaseOperation {\n  frid: number\n\n  constructor(fragmentId: number) {\n    super(OperationType.FRAGMENT_STEREO_FLAG, 6)\n    this.frid = fragmentId\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n\n    const fragment = struct.frags.get(this.frid)!\n    fragment.updateStereoFlag(struct)\n\n    BaseOperation.invalidateEnhancedFlag(restruct, this.frid)\n  }\n\n  invert() {\n    const inverted = new FragmentStereoFlag(this.frid)\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\n\nexport class CalcImplicitH extends BaseOperation {\n  atomIds: Array<number>\n\n  constructor(aids: Array<number>) {\n    super(OperationType.CALC_IMPLICIT_H, 10)\n    this.atomIds = aids\n  }\n\n  execute(restruct: ReStruct) {\n    const aIds = this.atomIds\n\n    restruct.molecule.setImplicitHydrogen(aIds)\n  }\n\n  invert() {\n    return new CalcImplicitH(this.atomIds)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\nimport { Scale } from 'domain/helpers'\n\nexport class LoopMove extends BaseOperation {\n  data: {\n    id: any\n    d: any\n  }\n\n  constructor(id?: any, d?: any) {\n    super(OperationType.LOOP_MOVE)\n    this.data = { id, d }\n  }\n\n  execute(restruct: ReStruct) {\n    // not sure if there should be an action to move a loop in the first place\n    // but we have to somehow move the aromatic ring,\n    // which is associated with the loop, rather than with any of the bonds\n    const { id, d } = this.data\n    const reloop = restruct.reloops.get(id)\n\n    if (reloop && reloop.visel) {\n      const scaled = Scale.obj2scaled(d, restruct.render.options)\n      reloop.visel.translate(scaled)\n    }\n    this.data.d = d.negated()\n  }\n\n  invert() {\n    const inverted = new LoopMove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\ntype Data = {\n  rgid: any\n  attribute: any\n  value: any\n}\n\nexport class RGroupAttr extends BaseOperation {\n  data: Data | null\n  data2: Data | null\n\n  constructor(rgroupId?: any, attribute?: any, value?: any) {\n    super(OperationType.R_GROUP_ATTR)\n    this.data = { rgid: rgroupId, attribute, value }\n    this.data2 = null\n  }\n\n  execute(restruct: ReStruct) {\n    if (this.data) {\n      const { rgid, attribute, value } = this.data\n\n      const rgp = restruct.molecule.rgroups.get(rgid)!\n\n      if (!rgp) {\n        return\n      }\n\n      if (!this.data2) {\n        this.data2 = {\n          rgid,\n          attribute,\n          value: rgp[attribute]\n        }\n      }\n\n      rgp[attribute] = value\n\n      BaseOperation.invalidateItem(restruct, 'rgroups', rgid)\n    }\n  }\n\n  invert() {\n    const inverted = new RGroupAttr()\n    inverted.data = this.data2\n    inverted.data2 = this.data\n    return inverted\n  }\n\n  isDummy(restruct: ReStruct) {\n    if (this.data) {\n      const { rgid, attribute, value } = this.data\n      const rgroup = restruct.molecule.rgroups.get(rgid)!\n      return rgroup[attribute] === value\n    }\n    return false\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReRGroup, ReStruct } from '../../../render'\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { RGroup } from 'domain/entities'\n\nexport class RGroupFragment extends BaseOperation {\n  rgid_new: any\n  rg_new: any\n  rgid_old: any\n  rg_old: any\n  frid: any\n\n  constructor(rgroupId: any, fragmentId: any, rg?: any) {\n    super(OperationType.R_GROUP_FRAGMENT)\n    this.rgid_new = rgroupId\n    this.rg_new = rg\n    this.rgid_old = null\n    this.rg_old = null\n    this.frid = fragmentId\n  }\n\n  execute(restruct: ReStruct) {\n    // eslint-disable-line max-statements\n    const struct = restruct.molecule\n    this.rgid_old =\n      this.rgid_old || RGroup.findRGroupByFragment(struct.rgroups, this.frid)\n\n    this.rg_old = this.rgid_old ? struct.rgroups.get(this.rgid_old) : null\n\n    this.removeOld(struct, restruct)\n    this.setNew(struct, restruct)\n  }\n\n  private removeOld(struct: any, restruct: any) {\n    if (!this.rg_old) {\n      return\n    }\n\n    this.rg_old.frags.delete(this.frid)\n    restruct.clearVisel(restruct.rgroups.get(this.rgid_old).visel)\n\n    if (this.rg_old.frags.size === 0) {\n      restruct.rgroups.delete(this.rgid_old)\n      struct.rgroups.delete(this.rgid_old)\n      restruct.markItemRemoved()\n    } else {\n      restruct.markItem('rgroups', this.rgid_old, 1)\n    }\n  }\n\n  private setNew(struct: any, restruct: ReStruct) {\n    if (!this.rgid_new) {\n      return\n    }\n\n    let rgNew = struct.rgroups.get(this.rgid_new)\n    if (!rgNew) {\n      rgNew = this.rg_new || new RGroup()\n      struct.rgroups.set(this.rgid_new, rgNew)\n      restruct.rgroups.set(this.rgid_new, new ReRGroup(rgNew))\n    } else {\n      restruct.markItem('rgroups', this.rgid_new, 1)\n    }\n\n    rgNew.frags.add(this.frid)\n  }\n\n  invert() {\n    return new RGroupFragment(this.rgid_old, this.frid, this.rg_old)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport Base from '../base'\nimport { OperationType } from '../OperationType'\nimport { Scale } from 'domain/helpers'\n\ninterface RxnArrowMoveData {\n  id: number\n  d: any\n  noinvalidate: boolean\n}\n\nexport class RxnArrowMove extends Base {\n  data: RxnArrowMoveData\n\n  constructor(id?: any, d?: any, noinvalidate?: any) {\n    super(OperationType.RXN_ARROW_MOVE)\n    this.data = { id, d, noinvalidate }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const id = this.data.id\n    const d = this.data.d\n    const item = struct.rxnArrows.get(id)\n    item.pos.forEach((p) => p.add_(d))\n    restruct.rxnArrows\n      .get(id)\n      .visel.translate(Scale.obj2scaled(d, restruct.render.options))\n    this.data.d = d.negated()\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(restruct, 'rxnArrows', id, 1)\n    }\n  }\n\n  invert() {\n    const move = new RxnArrowMove(\n      this.data.id,\n      this.data.d,\n      this.data.noinvalidate\n    )\n    move.data = this.data\n    return move\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport Base from '../base'\nimport { OperationType } from '../OperationType'\nimport { Scale } from 'domain/helpers'\nimport { RxnArrow, Vec2 } from 'domain/entities'\nimport { tfx } from 'utilities'\ninterface RxnArrowResizeData {\n  id: number\n  d: any\n  current: Vec2\n  anchor: Vec2\n  noinvalidate: boolean\n}\nexport class RxnArrowResize extends Base {\n  data: RxnArrowResizeData\n\n  constructor(\n    id: number,\n    d: any,\n    current: Vec2,\n    anchor: any,\n    noinvalidate: boolean\n  ) {\n    super(OperationType.RXN_ARROW_RESIZE)\n    this.data = { id, d, current, anchor, noinvalidate }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const id = this.data.id\n    const d = this.data.d\n    const current = this.data.current\n    const item = struct.rxnArrows.get(id)\n    const anchor = this.data.anchor\n    if (anchor) {\n      const previousPos0 = item.pos[0].get_xy0()\n      const previousPos1 = item.pos[1].get_xy0()\n      let middlePoint\n      let reItem\n\n      if (RxnArrow.isElliptical(item)) {\n        reItem = restruct.rxnArrows.get(id)\n        ;[, , middlePoint] = reItem.getReferencePoints()\n      }\n\n      if (\n        tfx(anchor.x) === tfx(item.pos[1].x) &&\n        tfx(anchor.y) === tfx(item.pos[1].y)\n      ) {\n        item.pos[1].x = anchor.x = current.x\n        current.x = previousPos1.x\n        item.pos[1].y = anchor.y = current.y\n        current.y = previousPos1.y\n      }\n\n      if (\n        tfx(anchor.x) === tfx(item.pos[0].x) &&\n        tfx(anchor.y) === tfx(item.pos[0].y)\n      ) {\n        item.pos[0].x = anchor.x = current.x\n        current.x = previousPos0.x\n        item.pos[0].y = anchor.y = current.y\n        current.y = previousPos0.y\n      }\n      if (\n        tfx(anchor.x) === tfx(middlePoint?.x) &&\n        tfx(anchor.y) === tfx(middlePoint?.y)\n      ) {\n        const { angle } = reItem.getArrowParams(\n          item.pos[0].x,\n          item.pos[0].y,\n          item.pos[1].x,\n          item.pos[1].y\n        )\n        const angleInRadians = (angle * Math.PI) / 180\n        const cosAngle = Math.cos(angleInRadians)\n        const sinAngle = Math.sin(angleInRadians)\n\n        const diffX = current.x - anchor.x\n        const diffY = current.y - anchor.y\n\n        const diff = diffY * cosAngle - diffX * sinAngle\n        item.height -= diff\n\n        const [, , newMiddlePoint] = reItem.getReferencePoints()\n\n        anchor.y = newMiddlePoint.y\n        anchor.x = newMiddlePoint.x\n      }\n    } else {\n      item.pos[1].add_(d)\n    }\n\n    restruct.rxnArrows\n      .get(id)\n      .visel.translate(Scale.obj2scaled(d, restruct.render.options))\n    this.data.d = d.negated()\n\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(restruct, 'rxnArrows', id, 1)\n    }\n  }\n\n  invert(): Base {\n    return new RxnArrowResize(\n      this.data.id,\n      this.data.d,\n      this.data.current,\n      this.data.anchor,\n      this.data.noinvalidate\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../../base'\nimport { OperationType } from '../../OperationType'\nimport { ReStruct } from '../../../../render'\nimport { Scale } from 'domain/helpers'\n\nexport class RxnPlusMove extends BaseOperation {\n  data: {\n    id: any\n    d: any\n    noinvalidate: any\n  }\n\n  constructor(id?: any, d?: any, noinvalidate?: any) {\n    super(OperationType.RXN_PLUS_MOVE)\n    this.data = { id, d, noinvalidate }\n  }\n\n  execute(restruct: ReStruct) {\n    const { id, d, noinvalidate } = this.data\n\n    const struct = restruct.molecule\n    struct.rxnPluses.get(id)!.pp.add_(d) // eslint-disable-line no-underscore-dangle\n\n    const rxn = restruct.rxnPluses.get(id)!\n    const scaled = Scale.obj2scaled(d, restruct.render.options)\n    rxn.visel.translate(scaled)\n\n    this.data.d = d.negated()\n\n    if (!noinvalidate) {\n      BaseOperation.invalidateItem(restruct, 'rxnPluses', id, 1)\n    }\n  }\n\n  invert() {\n    const inverted = new RxnPlusMove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReRxnPlus, ReStruct } from '../../../../render'\nimport { RxnPlus, Vec2 } from 'domain/entities'\n\nimport { BaseOperation } from '../../base'\nimport { OperationType } from '../../OperationType'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  plid: any\n  pos: any\n}\n\nclass RxnPlusAdd extends BaseOperation {\n  data: Data\n\n  constructor(pos?: any) {\n    super(OperationType.RXN_PLUS_ADD)\n    this.data = { plid: null, pos }\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n\n    const newRxn = new RxnPlus()\n    if (typeof this.data.plid === 'number') {\n      struct.rxnPluses.set(this.data.plid, newRxn)\n    } else {\n      this.data.plid = struct.rxnPluses.add(newRxn)\n    }\n\n    const { pos, plid } = this.data\n\n    const structRxn = struct.rxnPluses.get(plid)\n    // notifyRxnPlusAdded\n    restruct.rxnPluses.set(plid, new ReRxnPlus(structRxn))\n\n    struct.rxnPlusSetPos(plid, new Vec2(pos))\n\n    BaseOperation.invalidateItem(restruct, 'rxnPluses', plid, 1)\n  }\n\n  invert() {\n    const inverted = new RxnPlusDelete()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass RxnPlusDelete extends BaseOperation {\n  data: Data\n\n  constructor(plid?: any) {\n    super(OperationType.RXN_PLUS_DELETE)\n    this.data = { plid, pos: null }\n  }\n\n  execute(restruct: ReStruct) {\n    const { plid } = this.data\n\n    const struct = restruct.molecule\n    if (!this.data.pos) {\n      this.data.pos = struct.rxnPluses.get(plid)!.pp\n    }\n\n    // notifyRxnPlusRemoved\n    restruct.markItemRemoved()\n    const rxn = restruct.rxnPluses.get(plid)\n    if (!rxn) return\n    restruct.clearVisel(rxn.visel)\n    restruct.rxnPluses.delete(plid)\n\n    struct.rxnPluses.delete(plid)\n  }\n\n  invert() {\n    const inverted = new RxnPlusAdd()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { RxnPlusAdd, RxnPlusDelete }\nexport * from './RxnPlusMove'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RxnArrow, RxnArrowMode, Vec2 } from 'domain/entities'\n\nimport Base from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReRxnArrow } from '../../../render'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype RxnArrowAddData = {\n  id?: number\n  pos: Array<Vec2>\n  mode: RxnArrowMode\n}\n\nclass RxnArrowAdd extends Base {\n  data: RxnArrowAddData\n\n  constructor(\n    pos: Array<Vec2> = [],\n    mode: RxnArrowMode = RxnArrowMode.OpenAngle,\n    id?: number\n  ) {\n    super(OperationType.RXN_ARROW_ADD)\n    this.data = { pos, mode, id }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const item = new RxnArrow({ mode: this.data.mode })\n\n    if (this.data.id == null) {\n      const index = struct.rxnArrows.add(item)\n      this.data.id = index\n    } else {\n      struct.rxnArrows.set(this.data.id!, item)\n    }\n\n    const itemId = this.data.id!\n\n    restruct.rxnArrows.set(itemId, new ReRxnArrow(item))\n\n    const positions = [...this.data.pos]\n\n    struct.rxnArrowSetPos(\n      itemId,\n      positions.map((p) => new Vec2(p))\n    )\n\n    Base.invalidateItem(restruct, 'rxnArrows', itemId, 1)\n  }\n\n  invert(): Base {\n    return new RxnArrowDelete(this.data.id!)\n  }\n}\n\ninterface RxnArrowDeleteData {\n  id: number\n  pos?: Array<Vec2>\n  mode?: RxnArrowMode\n}\n\nclass RxnArrowDelete extends Base {\n  data: RxnArrowDeleteData\n  performed: boolean\n\n  constructor(id: number) {\n    super(OperationType.RXN_ARROW_DELETE)\n    this.data = { id, pos: [], mode: RxnArrowMode.OpenAngle }\n    this.performed = false\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const item = struct.rxnArrows.get(this.data.id) as any\n    this.data.pos = item.pos\n    this.data.mode = item.mode\n    this.performed = true\n\n    restruct.markItemRemoved()\n    restruct.clearVisel(restruct.rxnArrows.get(this.data.id).visel)\n    restruct.rxnArrows.delete(this.data.id)\n\n    struct.rxnArrows.delete(this.data.id)\n  }\n\n  invert(): Base {\n    return new RxnArrowAdd(this.data.pos, this.data.mode, this.data.id)\n  }\n}\n\nexport { RxnArrowAdd, RxnArrowDelete }\nexport * from './RxnArrowMove'\nexport * from './RxnArrowResize'\nexport * from './plus'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { SimpleObject, SimpleObjectMode, Vec2 } from 'domain/entities'\n\nimport Base from './base'\nimport { OperationType } from './OperationType'\nimport { ReSimpleObject } from '../../render'\nimport { Scale } from 'domain/helpers'\nimport { tfx } from 'utilities'\n\ninterface SimpleObjectAddData {\n  id?: number\n  pos: Array<Vec2>\n  mode: SimpleObjectMode\n  toCircle: boolean\n}\nexport class SimpleObjectAdd extends Base {\n  data: SimpleObjectAddData\n\n  constructor(\n    pos: Array<Vec2> = [],\n    mode: SimpleObjectMode = SimpleObjectMode.line,\n    toCircle = false,\n    id?: number\n  ) {\n    super(OperationType.SIMPLE_OBJECT_ADD)\n    this.data = { pos, mode, toCircle, id }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const item = new SimpleObject({ mode: this.data.mode })\n\n    if (this.data.id == null) {\n      const index = struct.simpleObjects.add(item)\n      this.data.id = index\n    } else {\n      struct.simpleObjects.set(this.data.id!, item)\n    }\n\n    const itemId = this.data.id!\n\n    restruct.simpleObjects.set(itemId, new ReSimpleObject(item))\n\n    const positions = [...this.data.pos]\n    if (this.data.toCircle) {\n      positions[1] = makeCircleFromEllipse(positions[0], positions[1])\n    }\n    struct.simpleObjectSetPos(\n      itemId,\n      positions.map((p) => new Vec2(p))\n    )\n\n    Base.invalidateItem(restruct, 'simpleObjects', itemId, 1)\n  }\n\n  invert(): Base {\n    return new SimpleObjectDelete(this.data.id!)\n  }\n}\n\ninterface SimpleObjectDeleteData {\n  id: number\n  pos?: Array<Vec2>\n  mode?: SimpleObjectMode\n  toCircle?: boolean\n}\n\nexport class SimpleObjectDelete extends Base {\n  data: SimpleObjectDeleteData\n  performed: boolean\n\n  constructor(id: number) {\n    super(OperationType.SIMPLE_OBJECT_DELETE)\n    this.data = { id, pos: [], mode: SimpleObjectMode.line, toCircle: false }\n    this.performed = false\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const item = struct.simpleObjects.get(this.data.id) as any\n    // save to data current values. In future they could be used in invert for restoring simple object\n    this.data.pos = item.pos\n    this.data.mode = item.mode\n    this.data.toCircle = item.toCircle\n    this.performed = true\n\n    restruct.markItemRemoved()\n    restruct.clearVisel(restruct.simpleObjects.get(this.data.id).visel)\n    restruct.simpleObjects.delete(this.data.id)\n\n    struct.simpleObjects.delete(this.data.id)\n  }\n\n  invert(): Base {\n    return new SimpleObjectAdd(\n      this.data.pos,\n      this.data.mode,\n      this.data.toCircle,\n      this.data.id\n    )\n  }\n}\n\ninterface SimpleObjectMoveData {\n  id: number\n  d: any\n  noinvalidate: boolean\n}\n\nexport class SimpleObjectMove extends Base {\n  data: SimpleObjectMoveData\n\n  constructor(id: number, d: any, noinvalidate: boolean) {\n    super(OperationType.SIMPLE_OBJECT_MOVE)\n    this.data = { id, d, noinvalidate }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const id = this.data.id\n    const d = this.data.d\n    const item = struct.simpleObjects.get(id)\n    item.pos.forEach((p) => p.add_(d))\n    restruct.simpleObjects\n      .get(id)\n      .visel.translate(Scale.obj2scaled(d, restruct.render.options))\n    this.data.d = d.negated()\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(restruct, 'simpleObjects', id, 1)\n    }\n  }\n\n  invert(): Base {\n    const move = new SimpleObjectMove(\n      this.data.id,\n      this.data.d,\n      this.data.noinvalidate\n    )\n    // todo Need further investigation on why this is needed?\n    move.data = this.data\n    return move\n  }\n}\n\ninterface SimpleObjectResizeData {\n  id: number\n  d: any\n  current: Vec2\n  anchor: Vec2\n  noinvalidate: boolean\n  toCircle: boolean\n}\n\nfunction handleRectangleChangeWithAnchor(item, anchor, current) {\n  const previousPos0 = item.pos[0].get_xy0()\n  const previousPos1 = item.pos[1].get_xy0()\n\n  if (tfx(anchor.x) === tfx(item.pos[1].x)) {\n    item.pos[1].x = anchor.x = current.x\n    current.x = previousPos1.x\n  }\n  if (tfx(anchor.y) === tfx(item.pos[1].y)) {\n    item.pos[1].y = anchor.y = current.y\n    current.y = previousPos1.y\n  }\n  if (tfx(anchor.x) === tfx(item.pos[0].x)) {\n    item.pos[0].x = anchor.x = current.x\n    current.x = previousPos0.x\n  }\n  if (tfx(anchor.y) === tfx(item.pos[0].y)) {\n    item.pos[0].y = anchor.y = current.y\n    current.y = previousPos0.y\n  }\n}\n\nexport class SimpleObjectResize extends Base {\n  data: SimpleObjectResizeData\n\n  constructor(\n    id: number,\n    d: any,\n    current: Vec2,\n    anchor: any,\n    noinvalidate: boolean,\n    toCircle: boolean\n  ) {\n    super(OperationType.SIMPLE_OBJECT_RESIZE)\n    this.data = { id, d, current, anchor, noinvalidate, toCircle }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const id = this.data.id\n    const d = this.data.d\n    const current = this.data.current\n    const item = struct.simpleObjects.get(id)\n    const anchor = this.data.anchor\n    if (item.mode === SimpleObjectMode.ellipse) {\n      if (anchor) {\n        handleRectangleChangeWithAnchor(item, anchor, current)\n      } else if (this.data.toCircle) {\n        const previousPos1 = item.pos[1].get_xy0()\n        const circlePoint = makeCircleFromEllipse(item.pos[0], current)\n        item.pos[1].x = circlePoint.x\n        item.pos[1].y = circlePoint.y\n        this.data.current = previousPos1\n      } else {\n        const previousPos1 = item.pos[1].get_xy0()\n        item.pos[1].x = current.x\n        item.pos[1].y = current.y\n        this.data.current = previousPos1\n      }\n    } else if (item.mode === SimpleObjectMode.line && anchor) {\n      const previousPos0 = item.pos[0].get_xy0()\n      const previousPos1 = item.pos[1].get_xy0()\n\n      if (\n        tfx(anchor.x) === tfx(item.pos[1].x) &&\n        tfx(anchor.y) === tfx(item.pos[1].y)\n      ) {\n        item.pos[1].x = anchor.x = current.x\n        current.x = previousPos1.x\n        item.pos[1].y = anchor.y = current.y\n        current.y = previousPos1.y\n      }\n\n      if (\n        tfx(anchor.x) === tfx(item.pos[0].x) &&\n        tfx(anchor.y) === tfx(item.pos[0].y)\n      ) {\n        item.pos[0].x = anchor.x = current.x\n        current.x = previousPos0.x\n        item.pos[0].y = anchor.y = current.y\n        current.y = previousPos0.y\n      }\n    } else if (item.mode === SimpleObjectMode.rectangle && anchor) {\n      handleRectangleChangeWithAnchor(item, anchor, current)\n    } else item.pos[1].add_(d)\n\n    restruct.simpleObjects\n      .get(id)\n      .visel.translate(Scale.obj2scaled(d, restruct.render.options))\n    this.data.d = d.negated()\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(restruct, 'simpleObjects', id, 1)\n    }\n  }\n\n  invert(): Base {\n    return new SimpleObjectResize(\n      this.data.id,\n      this.data.d,\n      this.data.current,\n      this.data.anchor,\n      this.data.noinvalidate,\n      this.data.toCircle\n    )\n  }\n}\n\nexport function makeCircleFromEllipse(position0: Vec2, position1: Vec2): Vec2 {\n  const diff = Vec2.diff(position1, position0)\n  const min = Math.abs(diff.x) < Math.abs(diff.y) ? diff.x : diff.y\n  return new Vec2(\n    position0.x + (diff.x > 0 ? 1 : -1) * Math.abs(min),\n    position0.y + (diff.y > 0 ? 1 : -1) * Math.abs(min),\n    0\n  )\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\nimport { SGroup } from 'domain/entities'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  sgid: any\n  aid: any\n}\n\nclass SGroupAtomAdd extends BaseOperation {\n  data: Data\n\n  constructor(sgroupId?: any, aid?: any) {\n    super(OperationType.S_GROUP_ATOM_ADD, 3)\n    this.data = { sgid: sgroupId, aid }\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid, sgid } = this.data\n\n    const struct = restruct.molecule\n    const atom = struct.atoms.get(aid)!\n    const sgroup = struct.sgroups.get(sgid)!\n\n    if (sgroup.atoms.indexOf(aid) >= 0) {\n      throw new Error(\n        'The same atom cannot be added to an S-group more than once'\n      )\n    }\n\n    if (!atom) {\n      throw new Error('OpSGroupAtomAdd: Atom ' + aid + ' not found')\n    }\n\n    struct.atomAddToSGroup(sgid, aid)\n    BaseOperation.invalidateAtom(restruct, aid)\n  }\n\n  invert() {\n    const inverted = new SGroupAtomRemove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass SGroupAtomRemove extends BaseOperation {\n  data: Data\n\n  constructor(sgroupId?: any, aid?: any) {\n    super(OperationType.S_GROUP_ATOM_REMOVE, 4)\n    this.data = { sgid: sgroupId, aid }\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid, sgid } = this.data\n\n    const struct = restruct.molecule\n    const atom = struct.atoms.get(aid)!\n    const sgroup = struct.sgroups.get(sgid)!\n\n    if (!atom || !sgroup) {\n      return\n    }\n\n    SGroup.removeAtom(sgroup, aid)\n    atom.sgs.delete(sgid)\n    BaseOperation.invalidateAtom(restruct, aid)\n  }\n\n  invert() {\n    const inverted = new SGroupAtomAdd()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { SGroupAtomAdd, SGroupAtomRemove }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\nexport class SGroupAttr extends BaseOperation {\n  data: {\n    sgid: any\n    attr: any\n    value: any\n  }\n\n  constructor(sgroupId?: any, attribute?: any, value?: any) {\n    super(OperationType.S_GROUP_ATTR, 4)\n    this.data = {\n      sgid: sgroupId,\n      attr: attribute,\n      value\n    }\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const sgroupId = this.data.sgid!\n    const sgroup = struct.sgroups.get(sgroupId)!\n\n    if (!sgroup) {\n      return\n    }\n\n    const sgroupData = restruct.sgroupData.get(sgroupId)\n    if (sgroup.type === 'DAT' && sgroupData) {\n      // clean the stuff here, else it might be left behind if the sgroups is set to \"attached\"\n      restruct.clearVisel(sgroupData.visel)\n      restruct.sgroupData.delete(sgroupId)\n    }\n\n    this.data.value = sgroup.setAttr(this.data.attr, this.data.value)\n  }\n\n  invert() {\n    const inverted = new SGroupAttr()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\nexport class SGroupDataMove extends BaseOperation {\n  data: {\n    id: any\n    d: any\n  }\n\n  constructor(id?: any, d?: any) {\n    super(OperationType.S_GROUP_DATA_MOVE)\n    this.data = { id, d }\n  }\n\n  execute(restruct: ReStruct) {\n    const { d, id } = this.data\n    const { sgroups } = restruct.molecule\n\n    sgroups.get(id)!.pp?.add_(d) // eslint-disable-line no-underscore-dangle\n    this.data.d = d.negated()\n\n    // [MK] this currently does nothing since the DataSGroupData Visel only contains the highlighting/selection and SGroups are redrawn every time anyway\n    BaseOperation.invalidateItem(restruct, 'sgroupData', id, 1)\n  }\n\n  invert() {\n    const inverted = new SGroupDataMove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  sgid: any\n  parent?: any\n  children?: any\n}\n\nclass SGroupAddToHierarchy extends BaseOperation {\n  data: Data\n\n  constructor(sgroupId?: any, parent?: any, children?: any) {\n    super(OperationType.S_GROUP_ADD_TO_HIERACHY, 100)\n    this.data = { sgid: sgroupId, parent, children }\n  }\n\n  execute(restruct: ReStruct) {\n    const { sgid, parent, children } = this.data\n\n    const struct = restruct.molecule\n    const sgroup = struct.sgroups.get(sgid)!\n    const relations = struct.sGroupForest.insert(sgroup, parent, children)\n\n    this.data.parent = relations.parent\n    this.data.children = relations.children\n  }\n\n  invert() {\n    const inverted = new SGroupRemoveFromHierarchy()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass SGroupRemoveFromHierarchy extends BaseOperation {\n  data: Data\n\n  constructor(sgroupId?: any) {\n    super(OperationType.S_GROUP_REMOVE_FROM_HIERACHY, 110)\n    this.data = { sgid: sgroupId }\n  }\n\n  execute(restruct: any) {\n    const { sgid } = this.data\n    const struct = restruct.molecule\n\n    this.data.parent = struct.sGroupForest.parent.get(sgid)\n    this.data.children = struct.sGroupForest.children.get(sgid)\n    struct.sGroupForest.remove(sgid)\n  }\n\n  invert() {\n    const inverted = new SGroupAddToHierarchy()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { SGroupAddToHierarchy, SGroupRemoveFromHierarchy }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { FunctionalGroup, SGroup, Vec2 } from 'domain/entities'\nimport { ReSGroup, ReStruct } from '../../../render'\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  sgid: any\n  type?: any\n  pp?: any\n  expanded?: boolean\n  name?: string\n}\n\nclass SGroupCreate extends BaseOperation {\n  data: Data\n\n  constructor(\n    sgroupId?: any,\n    type?: any,\n    pp?: any,\n    expanded?: boolean,\n    name?: string\n  ) {\n    super(OperationType.S_GROUP_CREATE)\n    this.data = {\n      sgid: sgroupId,\n      type,\n      pp,\n      expanded,\n      name\n    }\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const sgroup = new SGroup(this.data.type)\n    const { sgid, pp, expanded, name } = this.data\n\n    sgroup.id = sgid\n    struct.sgroups.set(sgid, sgroup)\n\n    if (pp) {\n      struct.sgroups.get(sgid)!.pp = new Vec2(pp)\n    }\n\n    if (expanded) {\n      sgroup.data.expanded = expanded\n    }\n\n    if (name) {\n      sgroup.data.name = name\n    }\n\n    restruct.sgroups.set(sgid, new ReSGroup(struct.sgroups.get(sgid)))\n    if (FunctionalGroup.isFunctionalGroup(sgroup)) {\n      restruct.molecule.functionalGroups.add(new FunctionalGroup(sgroup))\n    }\n    this.data.sgid = sgid\n  }\n\n  invert() {\n    const inverted = new SGroupDelete()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass SGroupDelete extends BaseOperation {\n  data: Data\n\n  constructor(sgroupId?: any) {\n    super(OperationType.S_GROUP_DELETE, 95)\n    this.data = { sgid: sgroupId }\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const { sgid } = this.data\n    const sgroup = restruct.sgroups.get(sgid)\n    const sgroupData = restruct.sgroupData.get(sgid)\n    if (!sgroup) return\n    this.data.type = sgroup.item.type\n    this.data.pp = sgroup.item.pp\n\n    if (sgroup.item.type === 'DAT' && sgroupData) {\n      restruct.clearVisel(sgroupData.visel)\n      restruct.sgroupData.delete(sgid)\n    }\n\n    restruct.clearVisel(sgroup.visel)\n    if (sgroup.item.atoms.length !== 0) {\n      throw new Error('S-Group not empty!')\n    }\n\n    if (FunctionalGroup.isFunctionalGroup(sgroup.item)) {\n      let relatedFGroupId\n      this.data.name = sgroup.item.data.name\n      this.data.expanded = sgroup.item.expanded\n      restruct.molecule.functionalGroups.forEach((fg, fgid) => {\n        if (fg.relatedSGroupId === sgid) {\n          relatedFGroupId = fgid\n        }\n      })\n      restruct.molecule.functionalGroups.delete(relatedFGroupId)\n    }\n\n    restruct.sgroups.delete(sgid)\n    struct.sgroups.delete(sgid)\n  }\n\n  invert() {\n    const inverted = new SGroupCreate()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { SGroupCreate, SGroupDelete }\nexport * from './sgroupAtom'\nexport * from './SGroupAttr'\nexport * from './SGroupDataMove'\nexport * from './sgroupHierarchy'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReStruct, ReText } from '../../../render'\nimport { Text, Vec2 } from 'domain/entities'\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\n\ninterface TextCreateData {\n  id?: number\n  content: string\n  pos: Array<Vec2>\n  position: Vec2\n}\n\nexport class TextCreate extends BaseOperation {\n  data: TextCreateData\n\n  constructor(content: string, position: Vec2, pos: Array<Vec2>, id?: number) {\n    super(OperationType.TEXT_CREATE)\n    this.data = { content: content, position, pos, id }\n  }\n\n  execute(restruct: ReStruct): void {\n    const item = new Text(this.data)\n\n    if (this.data.id == null) {\n      const index = restruct.molecule.texts.add(item)\n      this.data.id = index\n    } else {\n      restruct.molecule.texts.set(this.data.id!, item)\n    }\n\n    const itemId = this.data.id!\n\n    restruct.texts.set(itemId, new ReText(item))\n\n    restruct.molecule.textSetPosition(itemId, new Vec2(this.data.position))\n    BaseOperation.invalidateItem(restruct, 'texts', itemId, 1)\n  }\n\n  invert(): BaseOperation {\n    return new TextDelete(this.data.id!)\n  }\n}\n\ninterface TextDeleteData {\n  id: number\n  content?: string\n  position?: Vec2\n  pos?: Array<Vec2> | []\n}\n\nexport class TextDelete extends BaseOperation {\n  data: TextDeleteData\n\n  constructor(id: number) {\n    super(OperationType.TEXT_DELETE)\n    this.data = { id }\n  }\n\n  execute(restruct: ReStruct): void {\n    const struct = restruct.molecule\n    const item = struct.texts.get(this.data.id)!\n    if (!item) return\n\n    this.data.content = item.content!\n    this.data.position = item.position\n\n    restruct.markItemRemoved()\n\n    restruct.clearVisel(restruct.texts.get(this.data.id)!.visel)\n    restruct.texts.delete(this.data.id)\n\n    struct.texts.delete(this.data.id)\n  }\n\n  invert(): BaseOperation {\n    return new TextCreate(\n      this.data.content!,\n      this.data.position!,\n      this.data.pos!,\n      this.data.id\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\ninterface TextUpdateData {\n  id: number\n  content: string\n  previousContent?: string\n}\n\nexport class TextUpdate extends BaseOperation {\n  data: TextUpdateData\n\n  constructor(id: number, content: string) {\n    super(OperationType.TEXT_UPDATE)\n    this.data = { id, content: content }\n  }\n\n  execute(restruct: ReStruct) {\n    const { id, content } = this.data\n    const text = restruct.molecule.texts.get(id)\n\n    if (text) {\n      this.data.previousContent = text.content!\n      text.content = content\n    }\n\n    BaseOperation.invalidateItem(restruct, 'texts', id, 1)\n  }\n\n  invert() {\n    const inverted = new TextUpdate(this.data.id, this.data.previousContent!)\n\n    inverted.data.previousContent = this.data.content\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\nimport { Scale } from 'domain/helpers'\n\ninterface TextMoveData {\n  id: any\n  d: any\n  noinvalidate: boolean\n}\n\nexport class TextMove extends BaseOperation {\n  data: TextMoveData\n\n  constructor(id: any, d: any, noinvalidate: boolean) {\n    super(OperationType.TEXT_MOVE)\n    this.data = { id, d, noinvalidate }\n  }\n\n  execute(restruct: ReStruct): void {\n    const struct = restruct.molecule\n    const id = this.data.id\n    const difference = this.data.d\n    const item = struct.texts.get(id)\n\n    item?.position?.add_(difference)\n    restruct.texts\n      .get(id)\n      ?.visel.translate(Scale.obj2scaled(difference, restruct.render.options))\n\n    this.data.d = difference.negated()\n\n    if (!this.data.noinvalidate) {\n      BaseOperation.invalidateItem(restruct, 'texts', id, 1)\n    }\n  }\n\n  invert(): BaseOperation {\n    const move = new TextMove(this.data.id, this.data.d, this.data.noinvalidate)\n\n    move.data = this.data\n\n    return move\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../operations/base'\nimport { ReStruct } from '../../render'\n//\n// Undo/redo actions\n//\nexport class Action {\n  operations: BaseOperation[]\n\n  constructor(operations = []) {\n    this.operations = operations\n  }\n\n  addOp(operation: BaseOperation, restruct?: ReStruct): BaseOperation {\n    if (!restruct || !operation.isDummy(restruct)) {\n      this.operations.push(operation)\n    }\n\n    return operation\n  }\n\n  mergeWith(action) {\n    this.operations = this.operations.concat(action.operations)\n    return this\n  }\n\n  // Perform action and return inverted one\n  perform(restruct: ReStruct) {\n    const action = new Action()\n    const sortedOperations = [...this.operations].sort(\n      (a, b) => a.priority - b.priority\n    )\n    sortedOperations.forEach((operation) => {\n      const invertedOperation = operation.perform(restruct)\n      action.addOp(invertedOperation)\n    })\n\n    return action\n  }\n\n  isDummy(restruct?: ReStruct) {\n    return (\n      this.operations.find(\n        // TODO [RB] the condition is always true for op.* operations\n        (operation) => (restruct ? !operation.isDummy(restruct) : true)\n      ) === undefined\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Action } from './action'\nimport { Bond } from 'domain/entities'\nimport { BondAttr } from '../operations'\nimport { MolSerializer } from 'domain/serializers'\n\n/**\n * @param restruct { ReStruct }\n * @param events { Array<PipelineSubscription> }\n * @param bid { number }\n * @param template {{\n * \t\tmolecule: Struct,\n * \t\tbid: number\n *  }}\n * @param simpleFusing { Function }\n * @returns { Promise }\n */\nexport function fromAromaticTemplateOnBond(\n  restruct,\n  template,\n  bid,\n  events,\n  simpleFusing\n) {\n  const tmpl = template.molecule\n  const struct = restruct.molecule\n\n  const frid = struct.getBondFragment(bid)\n  const beforeMerge = getFragmentWithBondMap(struct, frid)\n  let afterMerge: any = null\n  let pasteItems: any = null\n\n  let action = new Action()\n\n  if (true) {\n    action = simpleFusing(restruct, template, bid)\n    return Promise.resolve(action)\n  }\n\n  const molSerialzer = new MolSerializer()\n\n  return Promise.all([\n    events.aromatizeStruct\n      .dispatch(beforeMerge.frag)\n      .then((res) => molSerialzer.deserialize(res.struct)),\n    events.aromatizeStruct\n      .dispatch(tmpl)\n      .then((res) => molSerialzer.deserialize(res.struct))\n  ])\n    .then(([astruct, atmpl]) => {\n      // aromatize restruct fragment\n      const aromatizeAction = fromAromatize(\n        restruct,\n        astruct,\n        beforeMerge.bondMap\n      )\n      // merge template with fragment\n      const aromTemplate = { bid: template.bid, molecule: atmpl }\n      const templateFusingAction = simpleFusing(restruct, aromTemplate, bid)\n      pasteItems = templateFusingAction[1]\n\n      action = templateFusingAction[0].mergeWith(aromatizeAction)\n\n      afterMerge = getFragmentWithBondMap(restruct.molecule, frid)\n\n      return events.dearomatizeStruct\n        .dispatch(afterMerge.frag)\n        .then((res) => molSerialzer.deserialize(res.struct))\n    })\n    .then((destruct) => {\n      destruct.bonds.forEach((bond) => {\n        if (bond.type === Bond.PATTERN.TYPE.AROMATIC) {\n          throw Error('Bad dearomatize')\n        }\n      })\n\n      // dearomatize restruct fragment\n      const dearomatizeAction = fromDearomatize(\n        restruct,\n        destruct,\n        afterMerge.bondMap\n      )\n      action = dearomatizeAction.mergeWith(action)\n\n      return [action, pasteItems]\n    })\n    .catch((err) => {\n      console.info(err.message)\n      action.perform(restruct) // revert actions if error\n\n      return simpleFusing(restruct, template, bid)\n    })\n}\n\nfunction fromAromatize(restruct, astruct, bondMap) {\n  const action = new Action()\n\n  astruct.bonds.forEach((bond, bid) => {\n    if (bond.type !== Bond.PATTERN.TYPE.AROMATIC) return\n    action.addOp(\n      new BondAttr(\n        bondMap.get(bid),\n        'type',\n        Bond.PATTERN.TYPE.AROMATIC\n      ).perform(restruct)\n    )\n  })\n\n  return action\n}\n\n/**\n * @param restruct { ReStruct }\n * @param dastruct { ReStruct }\n * @param bondMap { Map<number, number> }\n * @returns { Action }\n */\nfunction fromDearomatize(restruct, dastruct, bondMap) {\n  const action = new Action()\n\n  dastruct.bonds.forEach((bond, bid) => {\n    action.addOp(\n      new BondAttr(bondMap.get(bid), 'type', bond.type).perform(restruct)\n    )\n  })\n\n  return action\n}\n\n/* UTILS */\n\n// function canBeAromatized(struct) {\n//   // TODO correct this checking && move to chem.Struct ??\n//   if (struct.loops.size === 0) struct.prepareLoopStructure()\n//\n//   const hasAromLoop = struct.loops.find((_id, loop) => loop.aromatic)\n//   if (struct.loops.size === 0 || hasAromLoop) return false\n//\n//   const correctDblBonds = struct.loops.find(\n//     (_id, loop) => loop.dblBonds === loop.hbs.length / 2\n//   )\n//\n//   return correctDblBonds !== undefined\n// }\n\n/**\n * @param struct { Struct }\n * @param frid { number }\n * @returns {{\n * \t\tfrag: Struct,\n * \t\tbondMap: Map<number, number>\n *  }}\n */\nfunction getFragmentWithBondMap(struct, frid) {\n  const atomSet = struct.getFragmentIds(frid)\n  const atomsInStruct = Array.from(atomSet)\n\n  const frag = struct.clone(atomSet)\n  const bondMap = new Map()\n  frag.bonds.forEach((bond, bid) => {\n    bondMap.set(\n      bid,\n      struct.findBondId(atomsInStruct[bond.begin], atomsInStruct[bond.end])\n    )\n  })\n\n  return { frag, bondMap }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Fragment, Vec2 } from 'domain/entities'\n\nconst SELECTION_DISTANCE_COEFFICIENT = 0.4\nconst SELECTION_WITHIN_TEXT = 0\n\nconst findMaps = {\n  atoms: findClosestAtom,\n  bonds: findClosestBond,\n  enhancedFlags: findClosestEnhancedFlag,\n  sgroupData: findClosestDataSGroupData,\n  sgroups: findClosestSGroup,\n  rxnArrows: findClosestRxnArrow,\n  rxnPluses: findClosestRxnPlus,\n  frags: findClosestFrag,\n  rgroups: findClosestRGroup,\n  simpleObjects: findClosestSimpleObject,\n  texts: findClosestText\n}\n\nfunction findClosestText(restruct, cursorPosition) {\n  let minDist = null\n  let ret = null\n\n  restruct.texts.forEach((text, id) => {\n    const referencePoints = text.getReferencePoints(restruct)\n    const topX = referencePoints[0].x\n    const topY = referencePoints[0].y\n    const bottomX = referencePoints[2].x\n    const bottomY = referencePoints[2].y\n\n    const distances = []\n\n    if (cursorPosition.x >= topX && cursorPosition.x <= bottomX) {\n      if (cursorPosition.y < topY) {\n        distances.push(topY - cursorPosition.y)\n      } else if (cursorPosition.y > bottomY) {\n        distances.push(cursorPosition.y - bottomY)\n      } else {\n        distances.push(cursorPosition.y - topY, bottomY - cursorPosition.y)\n      }\n    }\n\n    if (cursorPosition.x < topX && cursorPosition.y < topY) {\n      distances.push(Vec2.dist(new Vec2(topX, topY), cursorPosition))\n    }\n\n    if (cursorPosition.x > bottomX && cursorPosition.y > bottomY) {\n      distances.push(Vec2.dist(new Vec2(bottomX, bottomY), cursorPosition))\n    }\n\n    if (cursorPosition.x < topX && cursorPosition.y > bottomY) {\n      distances.push(Vec2.dist(new Vec2(topX, bottomY), cursorPosition))\n    }\n\n    if (cursorPosition.x > bottomX && cursorPosition.y < topY) {\n      distances.push(Vec2.dist(new Vec2(bottomX, topY), cursorPosition))\n    }\n\n    if (cursorPosition.y >= topY && cursorPosition.y <= bottomY) {\n      if (cursorPosition.x < topX) {\n        distances.push(topX - cursorPosition.x)\n      } else if (cursorPosition.x > bottomX) {\n        distances.push(cursorPosition.x - bottomX)\n      } else {\n        distances.push(SELECTION_WITHIN_TEXT)\n      }\n    }\n\n    const dist = Math.min(...distances)\n\n    if (dist < SELECTION_DISTANCE_COEFFICIENT && (!ret || dist < minDist)) {\n      minDist = dist\n      ret = { id, dist: minDist }\n    }\n  })\n  return ret\n}\n\nfunction findClosestSimpleObject(restruct, pos) {\n  let minDist = null\n  let refPoint = null\n  let ret = null\n\n  restruct.simpleObjects.forEach((simpleObject, id) => {\n    const dist = simpleObject.calcDistance(pos, restruct.render.options.scale)\n\n    if (dist.minDist < 0.3 && (!ret || dist.minDist < minDist)) {\n      minDist = dist.minDist\n      refPoint = dist.refPoint\n\n      ret = { id, dist: minDist, ref: refPoint }\n    }\n  })\n  return ret\n}\n\nfunction findClosestAtom(restruct, pos, skip, minDist) {\n  let closestAtom = null\n  const maxMinDist = SELECTION_DISTANCE_COEFFICIENT\n  const skipId = skip && skip.map === 'atoms' ? skip.id : null\n\n  minDist = minDist || maxMinDist\n  minDist = Math.min(minDist, maxMinDist)\n\n  restruct.atoms.forEach((atom, aid) => {\n    if (aid === skipId) return\n\n    const dist = Vec2.dist(pos, atom.a.pp)\n\n    if (dist < minDist) {\n      closestAtom = aid\n      minDist = dist\n    }\n  })\n\n  if (closestAtom !== null) {\n    return {\n      id: closestAtom,\n      dist: minDist\n    }\n  }\n\n  return null\n}\n\nfunction findClosestBond(restruct, pos, skip, minDist, scale) {\n  // eslint-disable-line max-params\n  let closestBond = null\n  let closestBondCenter = null\n  const maxMinDist = 0.8 * SELECTION_DISTANCE_COEFFICIENT\n  const skipId = skip && skip.map === 'bonds' ? skip.id : null\n\n  minDist = minDist || maxMinDist\n  minDist = Math.min(minDist, maxMinDist)\n\n  let minCDist = minDist\n\n  restruct.bonds.forEach((bond, bid) => {\n    if (bid === skipId) return\n\n    const p1 = restruct.atoms.get(bond.b.begin).a.pp\n    const p2 = restruct.atoms.get(bond.b.end).a.pp\n\n    const mid = Vec2.lc2(p1, 0.5, p2, 0.5)\n    const cdist = Vec2.dist(pos, mid)\n\n    if (cdist < minCDist) {\n      minCDist = cdist\n      closestBondCenter = bid\n    }\n  })\n\n  restruct.bonds.forEach((bond, bid) => {\n    if (bid === skipId) return\n\n    const hb = restruct.molecule.halfBonds.get(bond.b.hb1)\n    const dir = hb.dir\n    const norm = hb.norm\n\n    const p1 = restruct.atoms.get(bond.b.begin).a.pp\n    const p2 = restruct.atoms.get(bond.b.end).a.pp\n\n    const inStripe = Vec2.dot(pos.sub(p1), dir) * Vec2.dot(pos.sub(p2), dir) < 0\n\n    if (inStripe) {\n      const dist = Math.abs(Vec2.dot(pos.sub(p1), norm))\n\n      if (dist < minDist) {\n        closestBond = bid\n        minDist = dist\n      }\n    }\n  })\n\n  if (closestBondCenter !== null) {\n    return {\n      id: closestBondCenter,\n      dist: minCDist\n    }\n  }\n\n  if (\n    closestBond !== null &&\n    minDist > SELECTION_DISTANCE_COEFFICIENT * scale\n  ) {\n    return {\n      id: closestBond,\n      dist: minDist\n    }\n  }\n\n  return null\n}\n\nfunction findClosestEnhancedFlag(restruct, pos, skip, _minDist, options) {\n  let minDist\n  let ret = null\n  restruct.enhancedFlags.forEach((item, id) => {\n    const fragment = restruct.molecule.frags.get(id)\n    if (!fragment || !fragment.enhancedStereoFlag || !options.showStereoFlags)\n      return\n\n    const p = fragment.stereoFlagPosition\n      ? new Vec2(fragment.stereoFlagPosition.x, fragment.stereoFlagPosition.y)\n      : Fragment.getDefaultStereoFlagPosition(restruct.molecule, id)\n    if (!p || Math.abs(pos.x - p.x) >= 1.0) return\n\n    const dist = Math.abs(pos.y - p.y)\n\n    if (dist < 0.3 && (!ret || dist < minDist)) {\n      minDist = dist\n      ret = { id, dist: minDist }\n    }\n  })\n  return ret\n}\n\nfunction findClosestDataSGroupData(restruct, pos) {\n  let minDist = null\n  let ret = null\n\n  restruct.sgroupData.forEach((item, id) => {\n    if (item.sgroup.type !== 'DAT') throw new Error('Data group expected')\n\n    if (item.sgroup.data.fieldName !== 'MRV_IMPLICIT_H') {\n      const box = item.sgroup.dataArea\n      const inBox =\n        box.p0.y < pos.y &&\n        box.p1.y > pos.y &&\n        box.p0.x < pos.x &&\n        box.p1.x > pos.x\n      const xDist = Math.min(\n        Math.abs(box.p0.x - pos.x),\n        Math.abs(box.p1.x - pos.x)\n      )\n\n      if (inBox && (ret === null || xDist < minDist)) {\n        ret = { id, dist: xDist }\n        minDist = xDist\n      }\n    }\n  })\n\n  return ret\n}\n\nfunction findClosestFrag(restruct, pos, skip, minDist, scale) {\n  minDist = Math.min(\n    minDist || SELECTION_DISTANCE_COEFFICIENT,\n    SELECTION_DISTANCE_COEFFICIENT\n  )\n\n  const struct = restruct.molecule\n\n  const closestAtom = findClosestAtom(restruct, pos, skip, minDist)\n\n  if (closestAtom) {\n    return {\n      id: struct.atoms.get(closestAtom.id).fragment,\n      dist: closestAtom.dist\n    }\n  }\n\n  const closestBond = findClosestBond(restruct, pos, skip, minDist, scale)\n\n  if (closestBond) {\n    const atomId = struct.bonds.get(closestBond.id).begin\n    return {\n      id: struct.atoms.get(atomId).fragment,\n      dist: closestBond.dist\n    }\n  }\n\n  return null\n}\n\nfunction findClosestRGroup(restruct, pos, skip, minDist) {\n  minDist = Math.min(\n    minDist || SELECTION_DISTANCE_COEFFICIENT,\n    SELECTION_DISTANCE_COEFFICIENT\n  )\n\n  let ret = null\n\n  restruct.rgroups.forEach((rgroup, rgid) => {\n    if (\n      rgid !== skip &&\n      rgroup.labelBox &&\n      rgroup.labelBox.contains(pos, 0.5)\n    ) {\n      const dist = Vec2.dist(rgroup.labelBox.centre(), pos)\n\n      if (!ret || dist < minDist) {\n        minDist = dist\n        ret = { id: rgid, dist: minDist }\n      }\n    }\n  })\n\n  return ret\n}\n\nfunction findClosestRxnArrow(restruct, pos) {\n  let minDist = null\n  let refPoint = null\n  let ret = null\n\n  restruct.rxnArrows.forEach((rxnArrow, id) => {\n    const dist = rxnArrow.calcDistance(pos, restruct.render.options.scale)\n\n    if (dist.minDist < 0.3 && (!ret || dist.minDist < minDist)) {\n      minDist = dist.minDist\n      refPoint = dist.refPoint\n\n      ret = { id, dist: minDist, ref: refPoint }\n    }\n  })\n  return ret\n}\n\nfunction findClosestRxnPlus(restruct, pos) {\n  let minDist = null\n  let ret = null\n\n  restruct.rxnPluses.forEach((plus, id) => {\n    const p = plus.item.pp\n    const dist = Math.max(Math.abs(pos.x - p.x), Math.abs(pos.y - p.y))\n\n    if (dist < 0.3 && (!ret || dist < minDist)) {\n      minDist = dist\n      ret = { id, dist: minDist }\n    }\n  })\n\n  return ret\n}\n\nfunction findClosestSGroup(restruct, pos) {\n  let ret = null\n  let minDist = SELECTION_DISTANCE_COEFFICIENT\n\n  restruct.molecule.sgroups.forEach((sg, sgid) => {\n    if (sg.functionalGroup && !sg.expanded) {\n      const firstAtomPp = sg.firstSgroupAtom.pp\n      const d = sg.bracketDir\n      const n = d.rotateSC(1, 0)\n      const pg = new Vec2(Vec2.dot(pos, d), Vec2.dot(pos, n))\n      const shift = new Vec2(0.625, 0.625)\n      const box = {\n        p0: Vec2.diff(firstAtomPp, shift),\n        p1: Vec2.sum(firstAtomPp, shift)\n      }\n\n      const inBox =\n        box.p0.y < pg.y && box.p1.y > pg.y && box.p0.x < pg.x && box.p1.x > pg.x\n      const xDist = Math.min(\n        Math.abs(box.p0.x - pg.x),\n        Math.abs(box.p1.x - pg.x)\n      )\n\n      if (inBox && (ret === null || xDist < minDist)) {\n        ret = sgid\n        minDist = xDist\n      }\n    } else {\n      const d = sg.bracketDir\n      const n = d.rotateSC(1, 0)\n      const pg = new Vec2(Vec2.dot(pos, d), Vec2.dot(pos, n))\n\n      sg.areas.forEach((box) => {\n        const inBox =\n          box.p0.y < pg.y &&\n          box.p1.y > pg.y &&\n          box.p0.x < pg.x &&\n          box.p1.x > pg.x\n        const xDist = Math.min(\n          Math.abs(box.p0.x - pg.x),\n          Math.abs(box.p1.x - pg.x)\n        )\n\n        if (inBox && (ret === null || xDist < minDist)) {\n          ret = sgid\n          minDist = xDist\n        }\n      })\n    }\n  })\n\n  if (ret !== null) {\n    return {\n      id: ret,\n      dist: minDist\n    }\n  }\n\n  return null\n}\n\nfunction findClosestItem(restruct, pos, maps, skip, scale) {\n  // eslint-disable-line max-params\n  maps = maps || Object.keys(findMaps)\n\n  return maps.reduce((res, mp) => {\n    const minDist = res ? res.dist : null\n    const item = findMaps[mp](restruct, pos, skip, minDist, scale)\n\n    if (item !== null && (res === null || item.dist < res.dist)) {\n      const { id, dist, ...other } = item\n      return {\n        map: mp,\n        id: id,\n        dist: dist,\n        ...other\n      }\n    }\n\n    return res\n  }, null)\n}\n\n/**\n * @param restruct { ReStruct }\n * @param selected { object }\n * @param maps { Array<string> }\n * @param scale { number }\n * @return {{\n * \t\tatoms: Map<number, number>?\n * \t\tbonds: Map<number, number>?\n * }}\n */\nfunction findCloseMerge(restruct, selected, maps = ['atoms', 'bonds'], scale) {\n  const pos = {\n    atoms: new Map(), // aid -> position\n    bonds: new Map() // bid -> position\n  }\n\n  const struct = restruct.molecule\n\n  selected.atoms.forEach((aid) => {\n    pos.atoms.set(aid, struct.atoms.get(aid).pp)\n  })\n\n  selected.bonds.forEach((bid) => {\n    const bond = struct.bonds.get(bid)\n    pos.bonds.set(\n      bid,\n      Vec2.lc2(\n        struct.atoms.get(bond.begin).pp,\n        0.5,\n        struct.atoms.get(bond.end).pp,\n        0.5\n      )\n    )\n  })\n\n  const result = {}\n  maps.forEach((mp) => {\n    result[mp] = Array.from(pos[mp].keys()).reduce((res, srcId) => {\n      const skip = { map: mp, id: srcId }\n      const item = findMaps[mp](restruct, pos[mp].get(srcId), skip, null, scale)\n\n      if (item && !selected[mp].includes(item.id)) res.set(srcId, item.id)\n\n      return res\n    }, new Map())\n  })\n\n  return result\n}\n\nexport default {\n  atom: findClosestAtom, // used in Actions\n  item: findClosestItem,\n  merge: findCloseMerge\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Vec2 } from 'domain/entities'\n\nimport closest from '../shared/closest'\nimport { difference } from 'lodash'\n\nexport function atomGetAttr(restruct, aid, name) {\n  return restruct.molecule.atoms.get(aid)[name]\n}\n\nexport function atomGetDegree(restruct, aid) {\n  return restruct.atoms.get(aid).a.neighbors.length\n}\n\nexport function atomGetSGroups(restruct, aid) {\n  return Array.from(restruct.atoms.get(aid).a.sgs)\n}\n\nexport function atomGetPos(restruct, id) {\n  return restruct.molecule.atoms.get(id).pp\n}\n\nexport function findStereoAtoms(struct, aids) {\n  return aids.filter((aid) => struct.atoms.get(aid).stereoLabel !== null)\n}\n\nexport function structSelection(struct) {\n  return [\n    'atoms',\n    'bonds',\n    'frags',\n    'sgroups',\n    'rgroups',\n    'rxnArrows',\n    'rxnPluses',\n    'simpleObjects',\n    'texts'\n  ].reduce((res, key) => {\n    res[key] = Array.from(struct[key].keys())\n    return res\n  }, {})\n}\n\n// Get new atom id/label and pos for bond being added to existing atom\nexport function atomForNewBond(restruct, id, bond?) {\n  // eslint-disable-line max-statements\n  const neighbours: Array<{ id: number; v: Vec2 }> = []\n  const pos = atomGetPos(restruct, id)\n  const atomNeighbours = restruct.molecule.atomGetNeighbors(id)\n\n  const prevBondId = restruct.molecule.findBondId(\n    id,\n    atomNeighbours.length ? atomNeighbours[0]?.aid : undefined\n  )\n  const prevBond = restruct.molecule.bonds.get(prevBondId)\n  const prevBondType = prevBond ? prevBond.type : bond ? bond.type : 1\n\n  restruct.molecule.atomGetNeighbors(id).forEach((nei) => {\n    const neiPos = atomGetPos(restruct, nei.aid)\n\n    if (Vec2.dist(pos, neiPos) < 0.1) return\n\n    neighbours.push({ id: nei.aid, v: Vec2.diff(neiPos, pos) })\n  })\n\n  neighbours.sort(\n    (nei1, nei2) =>\n      Math.atan2(nei1.v.y, nei1.v.x) - Math.atan2(nei2.v.y, nei2.v.x)\n  )\n\n  let i\n  let maxI = 0\n  let angle\n  let maxAngle = 0\n\n  // TODO: impove layout: tree, ...\n\n  for (i = 0; i < neighbours.length; i++) {\n    angle = Vec2.angle(\n      neighbours[i].v,\n      neighbours[(i + 1) % neighbours.length].v\n    )\n\n    if (angle < 0) angle += 2 * Math.PI\n\n    if (angle > maxAngle) {\n      maxI = i\n      maxAngle = angle\n    }\n  }\n\n  let v = new Vec2(1, 0)\n\n  if (neighbours.length > 0) {\n    if (neighbours.length === 1) {\n      maxAngle = -((4 * Math.PI) / 3)\n\n      // zig-zag\n      const nei = restruct.molecule.atomGetNeighbors(id)[0]\n      if (atomGetDegree(restruct, nei.aid) > 1) {\n        const neiNeighbours: Array<any> = []\n        const neiPos = atomGetPos(restruct, nei.aid)\n        const neiV = Vec2.diff(pos, neiPos)\n        const neiAngle = Math.atan2(neiV.y, neiV.x)\n\n        restruct.molecule.atomGetNeighbors(nei.aid).forEach((neiNei) => {\n          const neiNeiPos = atomGetPos(restruct, neiNei.aid)\n\n          if (neiNei.bid === nei.bid || Vec2.dist(neiPos, neiNeiPos) < 0.1) {\n            return\n          }\n\n          const vDiff = Vec2.diff(neiNeiPos, neiPos)\n          let ang = Math.atan2(vDiff.y, vDiff.x) - neiAngle\n\n          if (ang < 0) ang += 2 * Math.PI\n\n          neiNeighbours.push(ang)\n        })\n        neiNeighbours.sort((nei1, nei2) => nei1 - nei2)\n\n        if (\n          neiNeighbours[0] <= Math.PI * 1.01 &&\n          neiNeighbours[neiNeighbours.length - 1] <= 1.01 * Math.PI\n        ) {\n          maxAngle *= -1\n        }\n      }\n    }\n\n    const shallBe180DegToPrevBond =\n      (neighbours.length === 1 &&\n        prevBondType === bond?.type &&\n        (bond?.type === Bond.PATTERN.TYPE.DOUBLE ||\n          bond?.type === Bond.PATTERN.TYPE.TRIPLE)) ||\n      (prevBondType === Bond.PATTERN.TYPE.SINGLE &&\n        bond?.type === Bond.PATTERN.TYPE.TRIPLE) ||\n      (prevBondType === Bond.PATTERN.TYPE.TRIPLE &&\n        bond?.type === Bond.PATTERN.TYPE.SINGLE)\n\n    if (shallBe180DegToPrevBond) {\n      const prevBondAngle = restruct.molecule.bonds.get(prevBondId).angle\n      if (prevBondAngle > -90 && prevBondAngle < 90 && neighbours[0].v.x > 0) {\n        angle = (prevBondAngle * Math.PI) / 180 + Math.PI\n      } else {\n        angle = (prevBondAngle * Math.PI) / 180\n      }\n    } else {\n      angle =\n        maxAngle / 2 + Math.atan2(neighbours[maxI].v.y, neighbours[maxI].v.x)\n    }\n\n    v = v.rotate(angle)\n  }\n\n  v.add_(pos) // eslint-disable-line no-underscore-dangle\n\n  let a: any = closest.atom(restruct, v, null, 0.1)\n  a = a === null ? { label: 'C' } : a.id\n\n  return { atom: a, pos: v }\n}\n\nexport function getRelSgroupsBySelection(restruct, selectedAtoms) {\n  return restruct.molecule.sgroups.filter(\n    (_sgid, sg) =>\n      !sg.data.attached &&\n      !sg.data.absolute &&\n      difference(sg.atoms, selectedAtoms).length === 0\n  )\n}\n\nexport function isAttachmentBond({ begin, end }: Bond, selection): boolean {\n  if (!selection.atoms) {\n    return false\n  }\n  const isBondStartsInSelectionAndEndsOutside =\n    selection.atoms.includes(begin) && !selection.atoms.includes(end)\n  const isBondEndsInSelectionAndStartsOutside =\n    selection.atoms.includes(end) && !selection.atoms.includes(begin)\n  return (\n    isBondStartsInSelectionAndEndsOutside ||\n    isBondEndsInSelectionAndStartsOutside\n  )\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RGroupAttr, RGroupFragment, UpdateIfThen } from '../operations'\n\nimport { Action } from './action'\n\nexport function fromRGroupAttrs(restruct, id, attrs) {\n  const action = new Action()\n\n  Object.keys(attrs).forEach((key) => {\n    action.addOp(new RGroupAttr(id, key, attrs[key]))\n  })\n\n  return action.perform(restruct)\n}\n\nexport function fromRGroupFragment(restruct, rgidNew, frid) {\n  const action = new Action()\n  action.addOp(new RGroupFragment(rgidNew, frid))\n\n  return action.perform(restruct)\n}\n\nexport function fromUpdateIfThen(\n  restruct,\n  rgidNew,\n  rgidOld,\n  skipRgids: Array<number> = []\n) {\n  const action = new Action()\n  if (!restruct.molecule.rgroups.get(rgidOld)) {\n    action.addOp(new UpdateIfThen(rgidNew, rgidOld, skipRgids))\n  }\n\n  return action.perform(restruct)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomAttr,\n  SGroupAddToHierarchy,\n  SGroupAtomAdd,\n  SGroupAtomRemove,\n  SGroupAttr,\n  SGroupCreate,\n  SGroupDelete,\n  SGroupRemoveFromHierarchy\n} from '../operations'\nimport { Pile, SGroup } from 'domain/entities'\nimport { atomGetAttr, atomGetDegree, atomGetSGroups } from './utils'\n\nimport { Action } from './action'\nimport { SgContexts } from '..'\nimport { uniq } from 'lodash/fp'\nimport { fromAtomsAttrs } from './atom'\n\nexport function fromSeveralSgroupAddition(restruct, type, atoms, attrs) {\n  const descriptors = attrs.fieldValue\n\n  if (typeof descriptors === 'string' || type !== 'DAT') {\n    return fromSgroupAddition(\n      restruct,\n      type,\n      atoms,\n      attrs,\n      restruct.molecule.sgroups.newId()\n    )\n  }\n\n  return descriptors.reduce((acc, fValue) => {\n    const localAttrs = Object.assign({}, attrs)\n    localAttrs.fieldValue = fValue\n\n    return acc.mergeWith(\n      fromSgroupAddition(\n        restruct,\n        type,\n        atoms,\n        localAttrs,\n        restruct.molecule.sgroups.newId()\n      )\n    )\n  }, new Action())\n}\n\nexport function fromSgroupAttrs(restruct, id, attrs) {\n  const action = new Action()\n\n  Object.keys(attrs).forEach((key) => {\n    action.addOp(new SGroupAttr(id, key, attrs[key]))\n  })\n\n  return action.perform(restruct)\n}\n\nexport function setExpandSGroup(restruct, sgid, attrs) {\n  const action = new Action()\n\n  Object.keys(attrs).forEach((key) => {\n    action.addOp(new SGroupAttr(sgid, key, attrs[key]))\n  })\n\n  const sgroup = restruct.molecule.sgroups.get(sgid)\n  if (sgroup.firstSgroupAtom) delete sgroup.firstSgroupAtom\n  const atoms = SGroup.getAtoms(restruct, sgroup)\n\n  atoms.forEach((aid) => {\n    action.mergeWith(\n      fromAtomsAttrs(restruct, aid, restruct.atoms.get(aid).a, false)\n    )\n  })\n\n  return action.perform(restruct)\n}\n\nexport function sGroupAttributeAction(id, attrs) {\n  const action = new Action()\n\n  Object.keys(attrs).forEach((key) => {\n    action.addOp(new SGroupAttr(id, key, attrs[key]))\n  })\n\n  return action\n}\n\nexport function fromSgroupDeletion(restruct, id) {\n  let action = new Action()\n  const struct = restruct.molecule\n\n  const sG = restruct.sgroups.get(id).item\n\n  if (sG.type === 'SRU') {\n    struct.sGroupsRecalcCrossBonds()\n\n    sG.neiAtoms.forEach((aid) => {\n      if (atomGetAttr(restruct, aid, 'label') === '*') {\n        action.addOp(new AtomAttr(aid, 'label', 'C'))\n      }\n    })\n  }\n\n  const sg = struct.sgroups.get(id)\n  const atoms = SGroup.getAtoms(struct, sg)\n  const attrs = sg.getAttrs()\n\n  action.addOp(new SGroupRemoveFromHierarchy(id))\n\n  atoms.forEach((atom) => {\n    action.addOp(new SGroupAtomRemove(id, atom))\n  })\n\n  action.addOp(new SGroupDelete(id))\n\n  action = action.perform(restruct)\n\n  action.mergeWith(sGroupAttributeAction(id, attrs))\n\n  return action\n}\n\nexport function fromSgroupAddition(\n  restruct,\n  type,\n  atoms,\n  attrs,\n  sgid,\n  pp?,\n  expanded?,\n  name?\n) {\n  // eslint-disable-line\n  let action = new Action()\n\n  // TODO: shoud the id be generated when OpSGroupCreate is executed?\n  //      if yes, how to pass it to the following operations?\n  sgid = sgid - 0 === sgid ? sgid : restruct.molecule.sgroups.newId()\n\n  if (type === 'SUP') {\n    action.addOp(new SGroupCreate(sgid, type, pp, expanded, name))\n  } else {\n    action.addOp(new SGroupCreate(sgid, type, pp))\n  }\n\n  atoms.forEach((atom) => {\n    action.addOp(new SGroupAtomAdd(sgid, atom))\n  })\n\n  action.addOp(\n    type !== 'DAT'\n      ? new SGroupAddToHierarchy(sgid)\n      : new SGroupAddToHierarchy(sgid, -1, [])\n  )\n\n  action = action.perform(restruct)\n\n  if (type === 'SRU') {\n    restruct.molecule.sGroupsRecalcCrossBonds()\n    let asteriskAction = new Action()\n\n    restruct.sgroups.get(sgid).item.neiAtoms.forEach((aid) => {\n      const plainCarbon = restruct.atoms.get(aid).a.isPlainCarbon()\n\n      if (atomGetDegree(restruct, aid) === 1 && plainCarbon) {\n        asteriskAction.addOp(new AtomAttr(aid, 'label', '*'))\n      }\n    })\n\n    asteriskAction = asteriskAction.perform(restruct)\n    asteriskAction.mergeWith(action)\n    action = asteriskAction\n  }\n\n  return fromSgroupAttrs(restruct, sgid, attrs).mergeWith(action)\n}\n\nexport function fromSgroupAction(\n  context,\n  restruct,\n  newSg,\n  sourceAtoms,\n  selection\n) {\n  if (context === SgContexts.Bond) {\n    return fromBondAction(restruct, newSg, sourceAtoms, selection)\n  }\n\n  const atomsFromBonds = getAtomsFromBonds(restruct.molecule, selection.bonds)\n  const newSourceAtoms = uniq(sourceAtoms.concat(atomsFromBonds))\n\n  if (context === SgContexts.Fragment) {\n    return fromGroupAction(\n      restruct,\n      newSg,\n      newSourceAtoms,\n      Array.from(restruct.atoms.keys())\n    )\n  }\n\n  if (context === SgContexts.Multifragment) {\n    return fromMultiFragmentAction(restruct, newSg, newSourceAtoms)\n  }\n\n  if (context === SgContexts.Group) {\n    return fromGroupAction(restruct, newSg, newSourceAtoms, newSourceAtoms)\n  }\n\n  if (context === SgContexts.Atom) {\n    return fromAtomAction(restruct, newSg, newSourceAtoms)\n  }\n\n  return {\n    action: fromSeveralSgroupAddition(\n      restruct,\n      newSg.type,\n      sourceAtoms,\n      newSg.attrs\n    )\n  }\n}\n\nfunction fromAtomAction(restruct, newSg, sourceAtoms) {\n  return sourceAtoms.reduce(\n    (acc, atom) => {\n      acc.action = acc.action.mergeWith(\n        fromSeveralSgroupAddition(restruct, newSg.type, [atom], newSg.attrs)\n      )\n      return acc\n    },\n    {\n      action: new Action(),\n      selection: {\n        atoms: sourceAtoms,\n        bonds: []\n      }\n    }\n  )\n}\n\nfunction fromGroupAction(restruct, newSg, sourceAtoms, targetAtoms) {\n  const allFragments = new Pile(\n    sourceAtoms.map((aid) => restruct.atoms.get(aid).a.fragment)\n  )\n\n  return Array.from(allFragments).reduce(\n    (acc, fragId) => {\n      const atoms = targetAtoms.reduce((res, aid) => {\n        const atom = restruct.atoms.get(aid).a\n        if (fragId === atom.fragment) res.push(aid)\n\n        return res\n      }, [])\n\n      const bonds = getAtomsBondIds(restruct.molecule, atoms)\n\n      acc.action = acc.action.mergeWith(\n        fromSeveralSgroupAddition(restruct, newSg.type, atoms, newSg.attrs)\n      )\n\n      acc.selection.atoms = acc.selection.atoms.concat(atoms)\n      acc.selection.bonds = acc.selection.bonds.concat(bonds)\n\n      return acc\n    },\n    {\n      action: new Action(),\n      selection: {\n        atoms: [],\n        bonds: []\n      }\n    }\n  )\n}\n\nfunction fromBondAction(restruct, newSg, sourceAtoms, currSelection) {\n  const struct = restruct.molecule\n  let bonds = getAtomsBondIds(struct, sourceAtoms)\n\n  if (currSelection.bonds) bonds = uniq(bonds.concat(currSelection.bonds))\n\n  return bonds.reduce(\n    (acc: any, bondid) => {\n      const bond = struct.bonds.get(bondid)\n\n      acc.action = acc.action.mergeWith(\n        fromSeveralSgroupAddition(\n          restruct,\n          newSg.type,\n          [bond.begin, bond.end],\n          newSg.attrs\n        )\n      )\n\n      acc.selection.bonds.push(bondid)\n\n      return acc\n    },\n    {\n      action: new Action(),\n      selection: {\n        atoms: sourceAtoms,\n        bonds: []\n      }\n    }\n  )\n}\n\nfunction fromMultiFragmentAction(restruct, newSg, atoms) {\n  const bonds = getAtomsBondIds(restruct.molecule, atoms)\n  return {\n    action: fromSeveralSgroupAddition(restruct, newSg.type, atoms, newSg.attrs),\n    selection: {\n      atoms,\n      bonds\n    }\n  }\n}\n\n// Add action operation to remove atom from s-group if needed\nexport function removeAtomFromSgroupIfNeeded(action, restruct, id) {\n  const sgroups = atomGetSGroups(restruct, id)\n\n  if (sgroups.length > 0) {\n    sgroups.forEach((sid) => {\n      action.addOp(new SGroupAtomRemove(sid, id))\n    })\n\n    return true\n  }\n\n  return false\n}\n\n// Add action operations to remove whole s-group if needed\nexport function removeSgroupIfNeeded(action, restruct, atoms) {\n  const struct = restruct.molecule\n  const sgCounts = new Map()\n\n  atoms.forEach((id) => {\n    const sgroups = atomGetSGroups(restruct, id)\n\n    sgroups.forEach((sid) => {\n      sgCounts.set(sid, sgCounts.has(sid) ? sgCounts.get(sid) + 1 : 1)\n    })\n  })\n\n  sgCounts.forEach((count, sid) => {\n    const sG = restruct.sgroups.get(sid).item\n    const sgAtoms = SGroup.getAtoms(restruct.molecule, sG)\n\n    if (sgAtoms.length === count) {\n      // delete whole s-group\n      const sgroup = struct.sgroups.get(sid)\n      action.mergeWith(sGroupAttributeAction(sid, sgroup.getAttrs()))\n      action.addOp(new SGroupRemoveFromHierarchy(sid))\n      action.addOp(new SGroupDelete(sid))\n    }\n  })\n}\n\nfunction getAtomsBondIds(struct, atoms) {\n  const atomSet = new Pile(atoms)\n\n  return Array.from(struct.bonds.keys()).filter((bid) => {\n    const bond = struct.bonds.get(bid)\n    return atomSet.has(bond.begin) && atomSet.has(bond.end)\n  })\n}\n\nfunction getAtomsFromBonds(struct, bonds) {\n  bonds = bonds || []\n  return bonds.reduce((acc, bondid) => {\n    const bond = struct.bonds.get(bondid)\n    acc = acc.concat([bond.begin, bond.end])\n    return acc\n  }, [])\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  Bond,\n  Neighbor,\n  StereoLabel,\n  Struct,\n  Vec2\n} from 'domain/entities'\nimport {\n  AtomAdd,\n  AtomAttr,\n  BondAdd,\n  BondAttr,\n  BondDelete,\n  CalcImplicitH,\n  FragmentAdd,\n  FragmentStereoFlag\n} from '../operations'\nimport { atomForNewBond, atomGetAttr } from './utils'\nimport {\n  fromAtomMerge,\n  fromStereoAtomAttrs,\n  mergeFragmentsIfNeeded,\n  mergeSgroups\n} from './atom'\n\nimport { Action } from './action'\nimport { ReStruct } from '../../render'\nimport { StereoValidator } from 'domain/helpers'\nimport utils from '../shared/utils'\n\nexport function fromBondAddition(\n  restruct: ReStruct,\n  bond: any,\n  begin: any,\n  end: any,\n  pos?: Vec2,\n  pos2?: Vec2\n): [Action, number, number, number] {\n  // eslint-disable-line\n  if (end === undefined) {\n    const atom = atomForNewBond(restruct, begin, bond)\n    end = atom.atom\n    pos = atom.pos\n  }\n  const action = new Action()\n  const struct = restruct.molecule\n  let mergeFragments = false\n\n  let frid = null\n\n  if (!(typeof begin === 'number')) {\n    if (typeof end === 'number') frid = atomGetAttr(restruct, end, 'fragment')\n  } else {\n    frid = atomGetAttr(restruct, begin, 'fragment')\n    if (typeof end === 'number') mergeFragments = true\n  }\n\n  if (frid == null) {\n    frid = (action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd)\n      .frid\n  }\n\n  if (!(typeof begin === 'number')) {\n    begin.fragment = frid\n    begin = (action.addOp(new AtomAdd(begin, pos).perform(restruct)) as AtomAdd)\n      .data.aid\n    if (typeof end === 'number') mergeSgroups(action, restruct, [begin], end)\n    pos = pos2\n  } else if (atomGetAttr(restruct, begin, 'label') === '*') {\n    action.addOp(new AtomAttr(begin, 'label', 'C').perform(restruct))\n  }\n\n  if (!(typeof end === 'number')) {\n    end.fragment = frid\n    // TODO: <op>.data.aid here is a hack, need a better way to access the id of a created atom\n    end = (action.addOp(new AtomAdd(end, pos).perform(restruct)) as AtomAdd)\n      .data.aid\n    if (typeof begin === 'number') mergeSgroups(action, restruct, [end], begin)\n  } else if (atomGetAttr(restruct, end, 'label') === '*') {\n    action.addOp(new AtomAttr(end, 'label', 'C').perform(restruct))\n  }\n\n  const bid = (\n    action.addOp(new BondAdd(begin, end, bond).perform(restruct)) as BondAdd\n  ).data.bid\n\n  const bnd = struct.bonds.get(bid)\n\n  if (bnd) {\n    action.addOp(new CalcImplicitH([bnd.begin, bnd.end]).perform(restruct))\n    action.mergeWith(fromBondStereoUpdate(restruct, bnd))\n  }\n\n  action.operations.reverse()\n\n  if (mergeFragments) mergeFragmentsIfNeeded(action, restruct, begin, end)\n\n  if (struct.frags.get(frid || 0)?.stereoAtoms && !bond.stereo) {\n    action.addOp(new FragmentStereoFlag(frid || 0).perform(restruct))\n  }\n\n  return [action, begin, end, bid]\n}\n\nexport function fromBondsAttrs(\n  restruct: ReStruct,\n  ids: Array<number> | number,\n  attrs: Bond,\n  reset?: boolean\n): Action {\n  const struct = restruct.molecule\n  const action = new Action()\n  const bids = Array.isArray(ids) ? ids : [ids]\n\n  bids.forEach((bid) => {\n    Object.keys(Bond.attrlist).forEach((key) => {\n      if (!(key in attrs) && !reset) return\n\n      const value = key in attrs ? attrs[key] : Bond.attrGetDefault(key)\n\n      action.addOp(new BondAttr(bid, key, value).perform(restruct))\n      if (key === 'stereo' && key in attrs) {\n        const bond = struct.bonds.get(bid)\n        if (bond) {\n          action.addOp(\n            new CalcImplicitH([bond.begin, bond.end]).perform(restruct)\n          )\n          action.mergeWith(fromBondStereoUpdate(restruct, bond))\n        }\n      }\n    })\n  })\n\n  return action\n}\n\nexport function fromBondsMerge(\n  restruct: ReStruct,\n  mergeMap: Map<number, number>\n): Action {\n  const struct = restruct.molecule\n\n  const atomPairs = new Map()\n  let action = new Action()\n\n  mergeMap.forEach((dstId, srcId) => {\n    const bond = struct.bonds.get(srcId)\n    const bondCI = struct.bonds.get(dstId)\n    if (!bond || !bondCI) return\n    const params = utils.mergeBondsParams(struct, bond, struct, bondCI)\n    if (!params.merged) return\n    atomPairs.set(bond.begin, !params.cross ? bondCI.begin : bondCI.end)\n    atomPairs.set(bond.end, !params.cross ? bondCI.end : bondCI.begin)\n  })\n\n  atomPairs.forEach((dst, src) => {\n    action = fromAtomMerge(restruct, src, dst).mergeWith(action)\n  })\n\n  return action\n}\n\nfunction fromBondFlipping(restruct: ReStruct, id: number): Action {\n  const bond = restruct.molecule.bonds.get(id)\n\n  const action = new Action()\n  action.addOp(new BondDelete(id).perform(restruct))\n\n  // TODO: find better way to avoid problem with bond.begin = 0\n  if (Number.isInteger(bond?.end) && Number.isInteger(bond?.begin)) {\n    action.addOp(new BondAdd(bond?.end, bond?.begin, bond).perform(restruct))\n  }\n\n  // todo: swap atoms stereoLabels and stereoAtoms in fragment\n\n  return action\n}\n\nexport function fromBondStereoUpdate(\n  restruct: ReStruct,\n  bond: Bond,\n  withReverse?: boolean\n): Action {\n  const action = new Action()\n  const struct = restruct.molecule\n\n  const beginFrId = struct.atoms.get(bond?.begin)?.fragment\n  const endFrId = struct.atoms.get(bond?.end)?.fragment\n\n  const fragmentStereoBonds: Array<Bond> = []\n\n  struct.bonds.forEach((bond) => {\n    if (struct.atoms.get(bond.begin)?.fragment === beginFrId) {\n      fragmentStereoBonds.push(bond)\n    }\n\n    if (\n      beginFrId !== endFrId &&\n      struct.atoms.get(bond.begin)?.fragment === endFrId\n    ) {\n      fragmentStereoBonds.push(bond)\n    }\n  })\n\n  const stereoAtomsMap = getStereoAtomsMap(struct, fragmentStereoBonds, bond)\n\n  stereoAtomsMap.forEach((stereoProp, aId) => {\n    if (struct.atoms.get(aId)?.stereoLabel !== stereoProp.stereoLabel) {\n      action.mergeWith(\n        fromStereoAtomAttrs(restruct, aId, stereoProp, withReverse)\n      )\n    }\n  })\n\n  return action\n}\n\nexport function getStereoAtomsMap(\n  struct: Struct,\n  bonds: Array<Bond>,\n  bond?: Bond\n) {\n  const stereoAtomsMap = new Map()\n  const correctAtomIds: Array<number> = []\n\n  bonds.forEach((bond: Bond | undefined) => {\n    if (bond) {\n      const beginNeighs: Array<Neighbor> | undefined = struct.atomGetNeighbors(\n        bond.begin\n      )\n      const endNeighs: Array<Neighbor> | undefined = struct.atomGetNeighbors(\n        bond.end\n      )\n\n      if (\n        StereoValidator.isCorrectStereoCenter(\n          bond,\n          beginNeighs,\n          endNeighs,\n          struct\n        )\n      ) {\n        const stereoLabel = struct.atoms.get(bond.begin)?.stereoLabel\n        if (\n          stereoLabel == null ||\n          stereoAtomsMap.get(bond.begin)?.stereoLabel == null\n        ) {\n          stereoAtomsMap.set(bond.begin, {\n            stereoParity: getStereoParity(bond.stereo),\n            stereoLabel: stereoLabel || `${StereoLabel.Abs}`\n          })\n        }\n        correctAtomIds.push(bond.begin)\n      } else {\n        if (!correctAtomIds.includes(bond.begin)) {\n          stereoAtomsMap.set(bond.begin, {\n            stereoParity: Atom.PATTERN.STEREO_PARITY.NONE,\n            stereoLabel: null\n          })\n        }\n        if (!correctAtomIds.includes(bond.end)) {\n          stereoAtomsMap.set(bond.end, {\n            stereoParity: Atom.PATTERN.STEREO_PARITY.NONE,\n            stereoLabel: null\n          })\n        }\n      }\n    }\n  })\n\n  // in case the stereo band is flipped, changed or removed\n  // TODO the duplication of the code below should be fixed, mayby by function\n  if (bond) {\n    if (!correctAtomIds.includes(bond.begin)) {\n      stereoAtomsMap.set(bond.begin, {\n        stereoParity: Atom.PATTERN.STEREO_PARITY.NONE,\n        stereoLabel: null\n      })\n    }\n    if (!correctAtomIds.includes(bond.end)) {\n      stereoAtomsMap.set(bond.end, {\n        stereoParity: Atom.PATTERN.STEREO_PARITY.NONE,\n        stereoLabel: null\n      })\n    }\n  }\n\n  return stereoAtomsMap\n}\n\nfunction getStereoParity(stereo: number): number | null {\n  let newAtomParity: number | null = null\n  switch (stereo) {\n    case Bond.PATTERN.STEREO.UP:\n      newAtomParity = Atom.PATTERN.STEREO_PARITY.ODD\n      break\n    case Bond.PATTERN.STEREO.EITHER:\n      newAtomParity = Atom.PATTERN.STEREO_PARITY.EITHER\n      break\n    case Bond.PATTERN.STEREO.DOWN:\n      newAtomParity = Atom.PATTERN.STEREO_PARITY.EVEN\n      break\n  }\n  return newAtomParity\n}\n\nexport function bondChangingAction(\n  restruct: ReStruct,\n  itemID: number,\n  bond: Bond,\n  bondProps: any\n): Action {\n  const action = new Action()\n  let newItemId = itemID\n  if (\n    ((bondProps.stereo !== Bond.PATTERN.STEREO.NONE && //\n      bondProps.type === Bond.PATTERN.TYPE.SINGLE) ||\n      bond.type === Bond.PATTERN.TYPE.DATIVE) &&\n    bond.type === bondProps.type &&\n    bond.stereo === bondProps.stereo\n  ) {\n    action.mergeWith(fromBondFlipping(restruct, itemID))\n    newItemId = (action.operations[1] as BondAdd).data.bid\n  }\n  // if bondTool is stereo and equal to bond for change\n\n  const loop = plainBondTypes.includes(bondProps.type) ? plainBondTypes : null\n  if (\n    bondProps.stereo === Bond.PATTERN.STEREO.NONE &&\n    bondProps.type === Bond.PATTERN.TYPE.SINGLE &&\n    bond.stereo === Bond.PATTERN.STEREO.NONE &&\n    loop\n  ) {\n    // if `Single bond` tool is chosen and bond for change in `plainBondTypes`\n    bondProps.type = loop[(loop.indexOf(bond.type) + 1) % loop.length]\n  }\n\n  return fromBondsAttrs(restruct, newItemId, bondProps).mergeWith(action)\n}\n\nconst plainBondTypes = [\n  Bond.PATTERN.TYPE.SINGLE,\n  Bond.PATTERN.TYPE.DOUBLE,\n  Bond.PATTERN.TYPE.TRIPLE\n]\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Bond, RGroup } from 'domain/entities'\nimport {\n  AtomAdd,\n  AtomAttr,\n  AtomDelete,\n  BondAdd,\n  BondAttr,\n  BondDelete,\n  CalcImplicitH,\n  FragmentAdd,\n  FragmentAddStereoAtom,\n  FragmentDelete,\n  FragmentDeleteStereoAtom,\n  SGroupAtomAdd\n} from '../operations'\nimport { atomGetAttr, atomGetDegree, atomGetSGroups } from './utils'\nimport { fromRGroupFragment, fromUpdateIfThen } from './rgroup'\nimport { removeAtomFromSgroupIfNeeded, removeSgroupIfNeeded } from './sgroup'\n\nimport { Action } from './action'\nimport { fromBondStereoUpdate } from './bond'\nimport { without } from 'lodash/fp'\n\nexport function fromAtomAddition(restruct, pos, atom) {\n  atom = Object.assign({}, atom)\n  const action = new Action()\n  atom.fragment = (\n    action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd\n  ).frid\n\n  const aid = (\n    action.addOp(new AtomAdd(atom, pos).perform(restruct)) as AtomAdd\n  ).data.aid\n  action.addOp(new CalcImplicitH([aid]).perform(restruct))\n\n  return action\n}\n\n/**\n * @param restruct { ReStruct }\n * @param ids { Array<number>|number }\n * @param attrs { object }\n * @param reset { boolean? }\n */\nexport function fromAtomsAttrs(restruct, ids, attrs, reset) {\n  const action = new Action()\n  const aids = Array.isArray(ids) ? ids : [ids]\n\n  aids.forEach((aid) => {\n    Object.keys(Atom.attrlist).forEach((key) => {\n      if (key === 'attpnt' && !(key in attrs)) return\n      if (!(key in attrs) && !reset) return\n\n      const value = key in attrs ? attrs[key] : Atom.attrGetDefault(key)\n\n      switch (key) {\n        case 'stereoLabel':\n          if (key in attrs && value) {\n            action.addOp(new AtomAttr(aid, key, value).perform(restruct))\n          }\n          break\n        case 'stereoParity':\n          if (key in attrs && value) {\n            action.addOp(new AtomAttr(aid, key, value).perform(restruct))\n          }\n          break\n        default:\n          action.addOp(new AtomAttr(aid, key, value).perform(restruct))\n          break\n      }\n    })\n\n    if (\n      !reset &&\n      'label' in attrs &&\n      attrs.label !== null &&\n      attrs.label !== 'L#' &&\n      !('atomList' in attrs)\n    ) {\n      action.addOp(new AtomAttr(aid, 'atomList', null).perform(restruct))\n    }\n\n    action.addOp(new CalcImplicitH([aid]).perform(restruct))\n\n    const atomNeighbors = restruct.molecule.atomGetNeighbors(aid)\n    const bond = restruct.molecule.bonds.get(atomNeighbors[0]?.bid)\n    if (bond) {\n      action.mergeWith(fromBondStereoUpdate(restruct, bond))\n    }\n  })\n\n  return action\n}\n\nexport function fromStereoAtomAttrs(restruct, aid, attrs, withReverse) {\n  const action = new Action()\n  const atom = restruct.molecule.atoms.get(aid)\n  if (atom) {\n    const frid = atom.fragment\n\n    if ('stereoParity' in attrs) {\n      action.addOp(\n        new AtomAttr(aid, 'stereoParity', attrs.stereoParity).perform(restruct)\n      )\n    }\n    if ('stereoLabel' in attrs) {\n      action.addOp(\n        new AtomAttr(aid, 'stereoLabel', attrs.stereoLabel).perform(restruct)\n      )\n      if (attrs.stereoLabel === null) {\n        action.addOp(new FragmentDeleteStereoAtom(frid, aid).perform(restruct))\n      } else {\n        action.addOp(new FragmentAddStereoAtom(frid, aid).perform(restruct))\n      }\n    }\n    if (withReverse) action.operations.reverse()\n  }\n\n  return action\n}\n\nexport function fromAtomsFragmentAttr(restruct, aids, newfrid) {\n  const action = new Action()\n\n  aids.forEach((aid) => {\n    const atom = restruct.molecule.atoms.get(aid)\n    const oldfrid = atom.fragment\n    action.addOp(new AtomAttr(aid, 'fragment', newfrid))\n\n    if (atom.stereoLabel !== null) {\n      action.addOp(new FragmentAddStereoAtom(newfrid, aid))\n      action.addOp(new FragmentDeleteStereoAtom(oldfrid, aid))\n    }\n  })\n\n  return action.perform(restruct)\n}\n\n/**\n * @param restruct { ReStruct }\n * @param srcId { number }\n * @param dstId { number }\n * @return { Action }\n */\nexport function fromAtomMerge(restruct, srcId, dstId) {\n  if (srcId === dstId) return new Action()\n\n  const fragAction = new Action()\n  mergeFragmentsIfNeeded(fragAction, restruct, srcId, dstId)\n\n  const action = new Action()\n\n  const atomNeighbors = restruct.molecule.atomGetNeighbors(srcId)\n  atomNeighbors.forEach((nei) => {\n    const bond = restruct.molecule.bonds.get(nei.bid)\n\n    if (dstId === bond.begin || dstId === bond.end) {\n      // src & dst have one nei\n      action.addOp(new BondDelete(nei.bid))\n      return\n    }\n\n    const begin = bond.begin === nei.aid ? nei.aid : dstId\n    const end = bond.begin === nei.aid ? dstId : nei.aid\n\n    const mergeBondId = restruct.molecule.findBondId(begin, end)\n\n    if (mergeBondId === null) {\n      action.addOp(new BondAdd(begin, end, bond))\n    } else {\n      // replace old bond with new bond\n      const attrs = Bond.getAttrHash(bond)\n      Object.keys(attrs).forEach((key) => {\n        action.addOp(new BondAttr(mergeBondId, key, attrs[key]))\n      })\n    }\n\n    action.addOp(new BondDelete(nei.bid))\n  })\n\n  const attrs = Atom.getAttrHash(restruct.molecule.atoms.get(srcId))\n\n  if (atomGetDegree(restruct, srcId) === 1 && attrs.label === '*') {\n    attrs.label = 'C'\n  }\n\n  Object.keys(attrs).forEach((key) => {\n    if (key !== 'stereoLabel' && key !== 'stereoParity') {\n      action.addOp(new AtomAttr(dstId, key, attrs[key]))\n    }\n  })\n\n  const sgChanged = removeAtomFromSgroupIfNeeded(action, restruct, srcId)\n\n  if (sgChanged) removeSgroupIfNeeded(action, restruct, [srcId])\n\n  action.addOp(new AtomDelete(srcId))\n  const dstAtomNeighbors = restruct.molecule.atomGetNeighbors(dstId)\n  const bond = restruct.molecule.bonds.get(\n    dstAtomNeighbors[0]?.bid || atomNeighbors[0]?.bid\n  )\n\n  return action\n    .perform(restruct)\n    .mergeWith(fragAction)\n    .mergeWith(fromBondStereoUpdate(restruct, bond))\n}\n\nexport function mergeFragmentsIfNeeded(action, restruct, srcId, dstId) {\n  const frid = atomGetAttr(restruct, srcId, 'fragment')\n  const frid2 = atomGetAttr(restruct, dstId, 'fragment')\n  if (frid2 === frid || typeof frid2 !== 'number') {\n    return\n  }\n\n  const struct = restruct.molecule\n\n  const rgid = RGroup.findRGroupByFragment(struct.rgroups, frid2)\n  if (!(typeof rgid === 'undefined')) {\n    action\n      .mergeWith(fromRGroupFragment(restruct, null, frid2))\n      .mergeWith(fromUpdateIfThen(restruct, 0, rgid))\n  }\n\n  const fridAtoms = struct.getFragmentIds(frid)\n\n  const atomsToNewFrag: Array<any> = []\n  struct.atoms.forEach((atom, aid) => {\n    if (atom.fragment === frid2) atomsToNewFrag.push(aid)\n  })\n  const moveAtomsAction = fromAtomsFragmentAttr(restruct, atomsToNewFrag, frid)\n\n  mergeSgroups(action, restruct, fridAtoms, dstId)\n  action.addOp(new FragmentDelete(frid2).perform(restruct))\n  action.mergeWith(moveAtomsAction)\n}\n\nexport function mergeSgroups(action, restruct, srcAtoms, dstAtom) {\n  const sgroups = atomGetSGroups(restruct, dstAtom)\n\n  sgroups.forEach((sid) => {\n    const sgroup = restruct.molecule.sgroups.get(sid)\n    const notExpandedContexts = ['Atom', 'Bond', 'Group']\n    if (\n      sgroup.type === 'DAT' &&\n      notExpandedContexts.includes(sgroup.data.context)\n    ) {\n      return\n    }\n    const atomsToSgroup: any = without(sgroup.atoms, srcAtoms)\n    atomsToSgroup.forEach((aid) =>\n      action.addOp(new SGroupAtomAdd(sid, aid).perform(restruct))\n    )\n  })\n}\n\nexport function checkAtomValence(restruct, atomId) {\n  const action = new Action()\n\n  if (!restruct.atoms.has(atomId)) return action\n\n  action.addOp(new CalcImplicitH([atomId]))\n\n  return action.perform(restruct)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { AlignDescriptors, CanvasLoad } from '../operations'\n\nimport { Action } from './action'\n\nexport function fromNewCanvas(restruct, struct) {\n  const action = new Action()\n\n  action.addOp(new CanvasLoad(struct))\n  return action.perform(restruct)\n}\n\nexport function fromDescriptorsAlign(restruct) {\n  const action = new Action()\n  action.addOp(new AlignDescriptors())\n  return action.perform(restruct)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { AtomAdd, FragmentAdd } from '../operations'\n\nimport { Action } from './action'\nimport { Vec2 } from 'domain/entities'\nimport { atomGetAttr } from './utils'\nimport { fromBondAddition } from './bond'\n\nexport function fromChain(restruct, p0, v, nSect, atomId) {\n  // eslint-disable-line max-params\n  const dx = Math.cos(Math.PI / 6)\n  const dy = Math.sin(Math.PI / 6)\n\n  let action = new Action()\n\n  const frid =\n    atomId !== null\n      ? atomGetAttr(restruct, atomId, 'fragment')\n      : (action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd).frid\n\n  const chainItems: any = {\n    atoms: [],\n    bonds: []\n  }\n\n  let id0 =\n    atomId !== null\n      ? atomId\n      : (\n          action.addOp(\n            new AtomAdd({ label: 'C', fragment: frid }, p0).perform(restruct)\n          ) as AtomAdd\n        ).data.aid\n\n  chainItems.atoms.push(id0)\n  action.operations.reverse()\n\n  for (let i = 0; i < nSect; i++) {\n    const pos = new Vec2(dx * (i + 1), i & 1 ? 0 : dy).rotate(v).add(p0)\n\n    const ret = fromBondAddition(restruct, {}, id0, {}, pos)\n    action = ret[0].mergeWith(action)\n    id0 = ret[2]\n    chainItems.bonds.push(ret[3])\n    chainItems.atoms.push(id0)\n  }\n\n  return [action, chainItems]\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Action } from './action'\nimport { checkAtomValence, fromAtomMerge } from './atom'\nimport { fromBondsMerge } from './bond'\nimport utils from '../shared/utils'\n\nexport function fromItemsFuse(restruct, items) {\n  let action = new Action()\n\n  if (!items) return action\n\n  const usedAtoms = new Set()\n\n  const connectedAtomIds = getAllConnectedAtomsIds(\n    restruct,\n    mergeMapOfItemsToSet(items.atoms),\n    mergeMapOfItemsToSet(items.bonds)\n  )\n\n  // merge single atoms\n  items.atoms.forEach((dst, src) => {\n    if (usedAtoms.has(dst) || usedAtoms.has(src)) return\n\n    action = fromAtomMerge(restruct, src, dst).mergeWith(action)\n    usedAtoms.add(dst).add(src)\n  })\n\n  // merge bonds\n  action = fromBondsMerge(restruct, items.bonds).mergeWith(action)\n\n  action = valenceCheck(restruct, connectedAtomIds).mergeWith(action)\n\n  return action\n}\n\nexport function getItemsToFuse(editor, items) {\n  const struct = editor.render.ctab.molecule\n\n  const mergeItems = items || {\n    atoms: Array.from(struct.atoms.keys()),\n    bonds: Array.from(struct.bonds.keys())\n  }\n\n  return closestToMerge(\n    struct,\n    editor.findMerge(mergeItems, ['atoms', 'bonds'])\n  )\n}\n\nexport function getHoverToFuse(items) {\n  if (!items) return null\n\n  const hoverItems = {\n    atoms: Array.from(items.atoms.values()),\n    bonds: Array.from(items.bonds.values()),\n    ...(items.functionalGroups && {\n      functionalGroups: Array.from(items.functionalGroups.values())\n    })\n  }\n\n  return { map: 'merge', id: +Date.now(), items: hoverItems }\n}\n\nexport function mergeMapOfItemsToSet(items: Map<number, number>): Set<number> {\n  const itemsSet = new Set<number>()\n  items.forEach((value, key) => {\n    itemsSet.add(value).add(key)\n  })\n  return itemsSet\n}\n\n/**\n * @param struct\n * @param closestMap {{\n * \t\tatoms: Map<number, number>,\n * \t\tbonds: Map<number, number>\n * }}\n * @return {{\n * \t\tatoms: Map<number, number>,\n * \t\tbonds: Map<number, number>\n * }}\n */\nfunction closestToMerge(struct, closestMap) {\n  const mergeMap = {\n    atoms: new Map(closestMap.atoms),\n    bonds: new Map(closestMap.bonds)\n  }\n\n  closestMap.bonds.forEach((dstId, srcId) => {\n    const bond = struct.bonds.get(srcId)\n    const bondCI = struct.bonds.get(dstId)\n\n    if (utils.mergeBondsParams(struct, bond, struct, bondCI).merged) {\n      mergeMap.atoms.delete(bond.begin)\n      mergeMap.atoms.delete(bond.end)\n    } else {\n      mergeMap.bonds.delete(srcId)\n    }\n  })\n\n  if (mergeMap.atoms.size === 0 && mergeMap.bonds.size === 0) return null\n\n  return mergeMap\n}\n\nfunction getAllConnectedAtomsIds(restruct, atomsIds, bondsIds) {\n  const initialAtoms = new Set(atomsIds)\n  const connectedAtoms = new Set()\n\n  for (const bondId of bondsIds) {\n    const bond = restruct.bonds.get(bondId)\n    if (bond) {\n      const { begin, end } = bond.b\n      initialAtoms.add(begin).add(end)\n    }\n  }\n\n  for (const initialAtom of initialAtoms) {\n    if (connectedAtoms.has(initialAtom)) continue\n    const relevantConnectedComponent = [\n      ...restruct.connectedComponents.values()\n    ].find((component) => component.has(initialAtom))\n    if (relevantConnectedComponent)\n      relevantConnectedComponent.forEach((id) => connectedAtoms.add(id))\n  }\n\n  return connectedAtoms\n}\n\nfunction valenceCheck(restruct, atomIds) {\n  let action = new Action()\n\n  if (!atomIds) return action\n  const usedAtoms = new Set()\n\n  // merge single atoms\n  atomIds.forEach((atomId) => {\n    if (usedAtoms.has(atomId)) return\n\n    action = checkAtomValence(restruct, atomId).mergeWith(action)\n    usedAtoms.add(atomId)\n  })\n\n  return action\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomMove,\n  BondMove,\n  EnhancedFlagMove,\n  FragmentAdd,\n  FragmentDelete,\n  FragmentDeleteStereoAtom,\n  FragmentStereoFlag,\n  LoopMove,\n  RxnArrowMove,\n  RxnPlusMove,\n  SGroupDataMove,\n  SimpleObjectMove,\n  TextMove\n} from '../operations'\nimport { Pile, RGroup, Vec2 } from 'domain/entities'\nimport { fromRGroupFragment, fromUpdateIfThen } from './rgroup'\n\nimport { Action } from './action'\nimport { fromAtomsFragmentAttr } from './atom'\nimport { getRelSgroupsBySelection } from './utils'\n\nexport function fromMultipleMove(restruct, lists, d) {\n  d = new Vec2(d)\n\n  const action = new Action()\n  const struct = restruct.molecule\n  const loops = new Pile()\n  const atomsToInvalidate = new Pile()\n\n  if (lists.atoms) {\n    const atomSet = new Pile(lists.atoms)\n    const bondlist: Array<number> = []\n\n    restruct.bonds.forEach((bond, bid) => {\n      if (atomSet.has(bond.b.begin) && atomSet.has(bond.b.end)) {\n        bondlist.push(bid)\n        // add all adjacent loops\n        // those that are not completely inside the structure will get redrawn anyway\n        ;['hb1', 'hb2'].forEach((hb) => {\n          const loop = struct.halfBonds.get(bond.b[hb]).loop\n          if (loop >= 0) loops.add(loop)\n        })\n        return\n      }\n\n      if (atomSet.has(bond.b.begin)) {\n        atomsToInvalidate.add(bond.b.begin)\n        return\n      }\n\n      if (atomSet.has(bond.b.end)) atomsToInvalidate.add(bond.b.end)\n    })\n\n    bondlist.forEach((bond) => {\n      action.addOp(new BondMove(bond, d))\n    })\n\n    loops.forEach((loopId) => {\n      if (restruct.reloops.get(loopId) && restruct.reloops.get(loopId).visel) {\n        // hack\n        action.addOp(new LoopMove(loopId, d))\n      }\n    })\n\n    lists.atoms.forEach((aid) => {\n      action.addOp(new AtomMove(aid, d, !atomsToInvalidate.has(aid)))\n    })\n\n    if (lists.sgroupData && lists.sgroupData.length === 0) {\n      const sgroups = getRelSgroupsBySelection(restruct, lists.atoms)\n      sgroups.forEach((sg) => {\n        action.addOp(new SGroupDataMove(sg.id, d))\n      })\n    }\n  }\n\n  if (lists.rxnArrows) {\n    lists.rxnArrows.forEach((rxnArrow) => {\n      action.addOp(new RxnArrowMove(rxnArrow, d, true))\n    })\n  }\n\n  if (lists.rxnPluses) {\n    lists.rxnPluses.forEach((rxnPulse) => {\n      action.addOp(new RxnPlusMove(rxnPulse, d, true))\n    })\n  }\n\n  if (lists.simpleObjects) {\n    lists.simpleObjects.forEach((simpleObject) => {\n      action.addOp(new SimpleObjectMove(simpleObject, d, true))\n    })\n  }\n\n  if (lists.sgroupData) {\n    lists.sgroupData.forEach((sgData) => {\n      action.addOp(new SGroupDataMove(sgData, d))\n    })\n  }\n\n  if (lists.enhancedFlags) {\n    lists.enhancedFlags.forEach((fid) => {\n      action.addOp(new EnhancedFlagMove(fid, d))\n    })\n  }\n\n  if (lists.texts) {\n    lists.texts.forEach((text) => {\n      action.addOp(new TextMove(text, d, true))\n    })\n  }\n\n  return action.perform(restruct)\n}\n\nexport function fromStereoFlagUpdate(restruct, frid, flag = null) {\n  const action = new Action()\n\n  if (!flag) {\n    const struct = restruct.molecule\n    const frag = restruct.molecule.frags.get(frid)\n    frag.stereoAtoms.forEach((aid) => {\n      if (struct.atoms.get(aid).stereoLabel === null) {\n        action.addOp(new FragmentDeleteStereoAtom(frid, aid))\n      }\n    })\n  }\n\n  action.addOp(new FragmentStereoFlag(frid))\n  return action.perform(restruct)\n}\n\n/**\n * @param restruct { ReStruct }\n * @param aid { number }\n * @param frid { number }\n * @param newfrid { number }\n * @returns { Action }\n */\nfunction processAtom(restruct, aid, frid, newfrid) {\n  const queue = [aid]\n  const usedIds = new Pile(queue)\n\n  while (queue.length > 0) {\n    const id = queue.shift()\n\n    restruct.molecule.atomGetNeighbors(id).forEach((nei) => {\n      if (\n        restruct.molecule.atoms.get(nei.aid).fragment === frid &&\n        !usedIds.has(nei.aid)\n      ) {\n        usedIds.add(nei.aid)\n        queue.push(nei.aid)\n      }\n    })\n  }\n\n  return fromAtomsFragmentAttr(restruct, usedIds, newfrid)\n}\n\n/**\n * @param restruct { ReStruct }\n * @param frid { number }\n * @param rgForRemove\n * @return { Action }\n */\n// TODO [RB] the thing is too tricky :) need something else in future\nexport function fromFragmentSplit(\n  restruct,\n  frid,\n  rgForRemove: Array<number> = []\n) {\n  const action = new Action()\n  const rgid = RGroup.findRGroupByFragment(restruct.molecule.rgroups, frid)\n\n  restruct.molecule.atoms.forEach((atom, aid) => {\n    if (atom.fragment === frid) {\n      const newfrid = (\n        action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd\n      ).frid\n\n      action.mergeWith(processAtom(restruct, aid, frid, newfrid))\n\n      if (rgid) action.mergeWith(fromRGroupFragment(restruct, rgid, newfrid))\n    }\n  })\n\n  if (frid !== -1) {\n    action.mergeWith(fromRGroupFragment(restruct, 0, frid))\n    action.addOp(new FragmentDelete(frid).perform(restruct))\n    action.mergeWith(fromUpdateIfThen(restruct, 0, rgid, rgForRemove))\n  }\n\n  action.operations.reverse()\n  return action\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomDelete,\n  BondDelete,\n  CalcImplicitH,\n  RxnArrowDelete,\n  RxnPlusDelete,\n  SimpleObjectDelete,\n  TextDelete\n} from '../operations'\nimport { RGroup } from 'domain/entities'\nimport { removeAtomFromSgroupIfNeeded, removeSgroupIfNeeded } from './sgroup'\n\nimport { Action } from './action'\nimport assert from 'assert'\nimport { atomGetDegree } from './utils'\nimport { fromBondStereoUpdate } from '../actions/bond'\nimport { fromFragmentSplit } from './fragment'\n\nexport function fromOneAtomDeletion(restruct, atomId: number) {\n  return fromFragmentDeletion(restruct, { atoms: [atomId] })\n}\n\nfunction fromBondDeletion(restruct, bid: number, skipAtoms: Array<any> = []) {\n  let action = new Action()\n  const bond: any = restruct.molecule.bonds.get(bid)\n  const atomsToRemove: Array<any> = []\n\n  action.addOp(new BondDelete(bid))\n\n  if (\n    !skipAtoms.includes(bond.begin) &&\n    atomGetDegree(restruct, bond.begin) === 0\n  ) {\n    if (removeAtomFromSgroupIfNeeded(action, restruct, bond.begin)) {\n      atomsToRemove.push(bond.begin)\n    }\n\n    action.addOp(new AtomDelete(bond.begin))\n  }\n\n  if (\n    !skipAtoms.includes(bond.end) &&\n    atomGetDegree(restruct, bond.end) === 0\n  ) {\n    if (removeAtomFromSgroupIfNeeded(action, restruct, bond.end)) {\n      atomsToRemove.push(bond.end)\n    }\n\n    action.addOp(new AtomDelete(bond.end))\n  }\n\n  removeSgroupIfNeeded(action, restruct, atomsToRemove)\n  action = action.perform(restruct)\n  action.addOp(new CalcImplicitH([bond.begin, bond.end]).perform(restruct))\n  action.mergeWith(fromBondStereoUpdate(restruct, bond, false))\n\n  action.operations.reverse()\n\n  return action\n}\n\nexport function fromOneBondDeletion(restruct, id) {\n  const frid = restruct.molecule.getBondFragment(id)\n  let action = fromBondDeletion(restruct, id)\n\n  action = fromFragmentSplit(restruct, frid).mergeWith(action)\n\n  return action\n}\n\nexport function fromFragmentDeletion(restruct, selection) {\n  assert(!!selection != null)\n\n  let action = new Action()\n  const atomsToRemove: Array<number> = []\n  const frids: Array<number> = []\n\n  selection = {\n    // TODO: refactor me\n    atoms: selection.atoms || [],\n    bonds: selection.bonds || [],\n    rxnPluses: selection.rxnPluses || [],\n    rxnArrows: selection.rxnArrows || [],\n    sgroupData: selection.sgroupData || [],\n    simpleObjects: selection.simpleObjects || [],\n    texts: selection.texts || []\n  }\n\n  selection.atoms.forEach((aid) => {\n    restruct.molecule.atomGetNeighbors(aid).forEach((nei) => {\n      if (selection.bonds.indexOf(nei.bid) === -1) {\n        selection.bonds = selection.bonds.concat([nei.bid])\n      }\n    })\n  })\n\n  const actionRemoveBonds = new Action()\n  selection.bonds.forEach((bid) => {\n    const frid = restruct.molecule.getBondFragment(bid)\n    if (frids.indexOf(frid) < 0) frids.push(frid)\n\n    actionRemoveBonds.mergeWith(\n      fromBondDeletion(restruct, bid, selection.atoms)\n    )\n  })\n\n  selection.atoms.forEach((aid) => {\n    const frid3 = restruct.molecule.atoms.get(aid).fragment\n    if (frids.indexOf(frid3) < 0) frids.push(frid3)\n\n    if (removeAtomFromSgroupIfNeeded(action, restruct, aid)) {\n      atomsToRemove.push(aid)\n    }\n\n    action.addOp(new AtomDelete(aid))\n  })\n\n  removeSgroupIfNeeded(action, restruct, atomsToRemove)\n\n  selection.rxnArrows.forEach((id) => {\n    action.addOp(new RxnArrowDelete(id))\n  })\n\n  selection.rxnPluses.forEach((id) => {\n    action.addOp(new RxnPlusDelete(id))\n  })\n\n  selection.simpleObjects.forEach((id) => {\n    action.addOp(new SimpleObjectDelete(id))\n  })\n\n  selection.texts.forEach((id) => {\n    action.addOp(new TextDelete(id))\n  })\n\n  action = action.perform(restruct)\n  action.mergeWith(actionRemoveBonds)\n\n  const rgForRemove: Array<number> = frids.map(\n    (frid) => RGroup.findRGroupByFragment(restruct.molecule.rgroups, frid)!\n  )\n\n  while (frids.length > 0) {\n    action = fromFragmentSplit(restruct, frids.pop(), rgForRemove).mergeWith(\n      action\n    )\n  }\n\n  return action\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomAdd,\n  BondAdd,\n  FragmentAdd,\n  FragmentAddStereoAtom,\n  RGroupFragment,\n  RxnArrowAdd,\n  RxnPlusAdd,\n  SimpleObjectAdd,\n  TextCreate,\n  CalcImplicitH\n} from '../operations'\nimport { fromRGroupAttrs, fromUpdateIfThen } from './rgroup'\n\nimport { Action } from './action'\nimport { Vec2 } from 'domain/entities'\nimport { fromSgroupAddition } from './sgroup'\n\nexport function fromPaste(restruct, pstruct, point, angle = 0) {\n  const xy0 = getStructCenter(pstruct)\n  const offset = Vec2.diff(point, xy0)\n\n  const action = new Action()\n\n  const aidMap = new Map()\n  const fridMap = new Map()\n\n  const pasteItems: any = {\n    // only atoms and bonds now\n    atoms: [],\n    bonds: []\n  }\n\n  pstruct.atoms.forEach((atom, aid) => {\n    if (!fridMap.has(atom.fragment)) {\n      fridMap.set(\n        atom.fragment,\n        (action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd).frid\n      )\n    }\n\n    const tmpAtom = Object.assign(atom.clone(), {\n      fragment: fridMap.get(atom.fragment)\n    })\n    const operation = new AtomAdd(\n      tmpAtom,\n      Vec2.diff(atom.pp, xy0).rotate(angle).add(point)\n    ).perform(restruct) as AtomAdd\n    action.addOp(operation)\n    aidMap.set(aid, operation.data.aid)\n\n    pasteItems.atoms.push(operation.data.aid)\n  })\n\n  pstruct.frags.forEach((frag, frid) => {\n    if (!frag) return\n    frag.stereoAtoms.forEach((aid) =>\n      action.addOp(\n        new FragmentAddStereoAtom(fridMap.get(frid), aidMap.get(aid)).perform(\n          restruct\n        )\n      )\n    )\n  })\n\n  pstruct.bonds.forEach((bond) => {\n    const operation = new BondAdd(\n      aidMap.get(bond.begin),\n      aidMap.get(bond.end),\n      bond\n    ).perform(restruct) as BondAdd\n    action.addOp(operation)\n\n    pasteItems.bonds.push(operation.data.bid)\n  })\n\n  pasteItems.atoms.forEach((aid) => {\n    action.addOp(new CalcImplicitH([aid]).perform(restruct))\n  })\n\n  pstruct.sgroups.forEach((sg) => {\n    const newsgid = restruct.molecule.sgroups.newId()\n    const sgAtoms = sg.atoms.map((aid) => aidMap.get(aid))\n    const sgAction = fromSgroupAddition(\n      restruct,\n      sg.type,\n      sgAtoms,\n      sg.data,\n      newsgid,\n      sg.pp ? sg.pp.add(offset) : null,\n      sg.type === 'SUP' ? sg.data.expanded : null,\n      sg.data.name\n    )\n    sgAction.operations.reverse().forEach((oper) => {\n      action.addOp(oper)\n    })\n  })\n\n  pstruct.rxnArrows.forEach((rxnArrow) => {\n    action.addOp(\n      new RxnArrowAdd(\n        rxnArrow.pos.map((p) => p.add(offset)),\n        rxnArrow.mode\n      ).perform(restruct)\n    )\n  })\n\n  pstruct.rxnPluses.forEach((plus) => {\n    action.addOp(new RxnPlusAdd(plus.pp.add(offset)).perform(restruct))\n  })\n\n  pstruct.simpleObjects.forEach((simpleObject) => {\n    action.addOp(\n      new SimpleObjectAdd(\n        simpleObject.pos.map((p) => p.add(offset)),\n        simpleObject.mode\n      ).perform(restruct)\n    )\n  })\n\n  pstruct.texts.forEach((text) => {\n    action.addOp(\n      new TextCreate(\n        text.content,\n        text.position.add(offset),\n        text.pos.map((p) => p.add(offset))\n      ).perform(restruct)\n    )\n  })\n\n  pstruct.rgroups.forEach((rg, rgid) => {\n    rg.frags.forEach((__frag, frid) => {\n      action.addOp(\n        new RGroupFragment(rgid, fridMap.get(frid)).perform(restruct)\n      )\n    })\n    const ifThen = pstruct.rgroups.get(rgid).ifthen\n    const newRgId = pstruct.rgroups.get(ifThen) ? ifThen : 0\n    action\n      .mergeWith(fromRGroupAttrs(restruct, rgid, rg.getAttrs()))\n      .mergeWith(fromUpdateIfThen(restruct, newRgId, rg.ifthen))\n  })\n\n  action.operations.reverse()\n  return [action, pasteItems]\n}\n\nfunction getStructCenter(struct) {\n  // TODO: Review, function may not work sometimes\n  const onlyOneStructsSgroupId = struct.sgroups.keys().next().value\n  if (\n    struct.sgroups.size === 1 &&\n    !struct.sgroups.get(onlyOneStructsSgroupId).data.expanded\n  ) {\n    return struct.atoms.get(0).pp\n  }\n  if (struct.atoms.size > 0) {\n    let xmin = 1e50\n    let ymin = xmin\n    let xmax = -xmin\n    let ymax = -ymin\n\n    struct.atoms.forEach((atom) => {\n      xmin = Math.min(xmin, atom.pp.x)\n      ymin = Math.min(ymin, atom.pp.y)\n      xmax = Math.max(xmax, atom.pp.x)\n      ymax = Math.max(ymax, atom.pp.y)\n    })\n    return new Vec2((xmin + xmax) / 2, (ymin + ymax) / 2) // TODO: check\n  }\n  if (struct.rxnArrows.size > 0) return struct.rxnArrows.get(0).center()\n  if (struct.rxnPluses.size > 0) return struct.rxnPluses.get(0).pp\n  if (struct.simpleObjects.size > 0) return struct.simpleObjects.get(0).center()\n  if (struct.texts.size > 0) return struct.texts.get(0).position\n\n  return null\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  RxnArrowAdd,\n  RxnArrowDelete,\n  RxnArrowResize,\n  RxnPlusAdd,\n  RxnPlusDelete\n} from '../operations'\n\nimport { Action } from './action'\n\nexport function fromArrowAddition(restruct, pos, mode) {\n  const action = new Action()\n  action.addOp(new RxnArrowAdd(pos, mode))\n  return action.perform(restruct)\n}\n\nexport function fromArrowResizing(restruct, id, d, current, anchor) {\n  const action = new Action()\n  action.addOp(new RxnArrowResize(id, d, current, anchor, false))\n  return action.perform(restruct)\n}\n\nexport function fromArrowDeletion(restruct, id) {\n  const action = new Action()\n  action.addOp(new RxnArrowDelete(id))\n  return action.perform(restruct)\n}\n\nexport function fromPlusAddition(restruct, pos) {\n  const action = new Action()\n  action.addOp(new RxnPlusAdd(pos).perform(restruct))\n  return action\n}\n\nexport function fromPlusDeletion(restruct, id) {\n  const action = new Action()\n  action.addOp(new RxnPlusDelete(id))\n  return action.perform(restruct)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomMove,\n  BondAttr,\n  EnhancedFlagMove,\n  RxnArrowMove,\n  RxnPlusMove,\n  SGroupDataMove\n} from '../operations'\nimport { Bond, Fragment, Pile, Vec2 } from 'domain/entities'\nimport {\n  getRelSgroupsBySelection,\n  structSelection,\n  isAttachmentBond\n} from './utils'\n\nimport { Action } from './action'\nimport utils from '../shared/utils'\n\nexport function fromFlip(restruct, selection, dir, center) {\n  // eslint-disable-line max-statements\n  const struct = restruct.molecule\n\n  const action = new Action()\n\n  if (!selection) {\n    selection = structSelection(struct)\n  }\n\n  if (!selection.atoms) {\n    return action.perform(restruct)\n  }\n\n  const fids = selection.atoms.reduce((acc, aid) => {\n    const atom = struct.atoms.get(aid)\n\n    if (!acc[atom.fragment]) {\n      acc[atom.fragment] = []\n    }\n\n    acc[atom.fragment].push(aid)\n    return acc\n  }, {})\n\n  const fidsNumberKeys = Object.keys(fids).map((frag) => parseInt(frag, 10))\n\n  const isFragFound = fidsNumberKeys.find((frag) => {\n    const allFragmentsOfStructure = struct.getFragmentIds(frag)\n    const selectedFragmentsOfStructure = new Pile(fids[frag])\n    const res = allFragmentsOfStructure.equals(selectedFragmentsOfStructure)\n    return !res\n  })\n\n  if (typeof isFragFound === 'number') {\n    return flipPartOfStructure({\n      fids,\n      struct,\n      restruct,\n      dir,\n      action,\n      selection\n    })\n  }\n\n  return flipStandaloneStructure({\n    fids,\n    struct,\n    restruct,\n    center,\n    dir,\n    action,\n    selection\n  })\n}\n\nfunction getRotationPoint(struct, selection) {\n  const { bonds } = struct\n  const isSelectedAtom = (atomId) => selection.atoms.includes(atomId)\n  const getAttachmentBond = () => {\n    for (const [bondId, bond] of bonds.entries()) {\n      if (isAttachmentBond(bond, selection)) {\n        return [bondId, bond]\n      }\n    }\n    return [null, null]\n  }\n  const getRotationPointAtomId = (attachmentBondId, attachmentBond) => {\n    if (selection.bonds.includes(attachmentBondId)) {\n      return [attachmentBond.begin, attachmentBond.end].find(\n        (atomId) => !isSelectedAtom(atomId)\n      )\n    }\n    return [attachmentBond.begin, attachmentBond.end].find(isSelectedAtom)\n  }\n\n  const [attachmentBondId, attachmentBond] = getAttachmentBond()\n  const rotationPointAtomId = getRotationPointAtomId(\n    attachmentBondId,\n    attachmentBond\n  )\n  return struct.atoms.get(rotationPointAtomId).pp\n}\n\nfunction flipBonds(selection, struct, action) {\n  if (selection.bonds) {\n    selection.bonds.forEach((bid) => {\n      const bond = struct.bonds.get(bid)\n\n      if (bond.type !== Bond.PATTERN.TYPE.SINGLE) {\n        return\n      }\n\n      if (bond.stereo === Bond.PATTERN.STEREO.UP) {\n        action.addOp(new BondAttr(bid, 'stereo', Bond.PATTERN.STEREO.DOWN))\n        return\n      }\n\n      if (bond.stereo === Bond.PATTERN.STEREO.DOWN) {\n        action.addOp(new BondAttr(bid, 'stereo', Bond.PATTERN.STEREO.UP))\n      }\n    })\n  }\n}\n\nfunction flipPartOfStructure({\n  fids,\n  struct,\n  restruct,\n  dir,\n  action,\n  selection\n}) {\n  const rotationPoint = getRotationPoint(struct, selection)\n\n  Object.keys(fids).forEach((frag) => {\n    const fragment = new Pile(fids[frag])\n\n    fragment.forEach((aid) => {\n      const atom = struct.atoms.get(aid)\n      const d = flipItemByCenter(atom, rotationPoint, dir)\n      action.addOp(new AtomMove(aid, d))\n    })\n\n    const sgroups = getRelSgroupsBySelection(restruct, Array.from(fragment))\n    sgroups.forEach((sg) => {\n      const d = flipItemByCenter(sg, rotationPoint, dir)\n      action.addOp(new SGroupDataMove(sg.id, d))\n    })\n  })\n\n  flipBonds(selection, struct, action)\n\n  return action.perform(restruct)\n}\n\nfunction flipStandaloneStructure({\n  fids,\n  struct,\n  restruct,\n  center,\n  dir,\n  action,\n  selection\n}) {\n  Object.keys(fids).forEach((frag) => {\n    const fragment = new Pile(fids[frag])\n\n    const bbox = struct.getCoordBoundingBox(fragment)\n    const calcCenter =\n      center ||\n      new Vec2((bbox.max.x + bbox.min.x) / 2, (bbox.max.y + bbox.min.y) / 2)\n\n    fragment.forEach((aid) => {\n      const atom = struct.atoms.get(aid)\n      const d = flipItemByCenter(atom, calcCenter, dir)\n      action.addOp(new AtomMove(aid, d))\n    })\n\n    const sgroups = getRelSgroupsBySelection(restruct, Array.from(fragment))\n    sgroups.forEach((sg) => {\n      const d = flipItemByCenter(sg, calcCenter, dir)\n      action.addOp(new SGroupDataMove(sg.id, d))\n    })\n  })\n\n  flipBonds(selection, struct, action)\n\n  return action.perform(restruct)\n}\n\nfunction flipItemByCenter(item, center, dir) {\n  const d = new Vec2()\n  /* eslint-disable no-mixed-operators */\n  if (dir === 'horizontal') {\n    d.x =\n      center.x > item.pp.x\n        ? 2 * (center.x - item.pp.x)\n        : -2 * (item.pp.x - center.x)\n  } else {\n    // 'vertical'\n    d.y =\n      center.y > item.pp.y\n        ? 2 * (center.y - item.pp.y)\n        : -2 * (item.pp.y - center.y)\n  }\n  /* eslint-enable no-mixed-operators */\n  return d\n}\n\nexport function fromRotate(restruct, selection, center, angle) {\n  // eslint-disable-line\n  const struct = restruct.molecule\n\n  const action = new Action()\n\n  if (!selection) {\n    selection = structSelection(struct)\n  }\n\n  if (selection.atoms) {\n    selection.atoms.forEach((aid) => {\n      const atom = struct.atoms.get(aid)\n      action.addOp(new AtomMove(aid, rotateDelta(atom.pp, center, angle)))\n    })\n\n    if (!selection.sgroupData) {\n      const sgroups = getRelSgroupsBySelection(restruct, selection.atoms)\n\n      sgroups.forEach((sg) => {\n        action.addOp(\n          new SGroupDataMove(sg.id, rotateDelta(sg.pp, center, angle))\n        )\n      })\n    }\n  }\n\n  if (selection.rxnArrows) {\n    selection.rxnArrows.forEach((aid) => {\n      const arrow = struct.rxnArrows.get(aid)\n      action.addOp(\n        new RxnArrowMove(aid, rotateDelta(arrow.center(), center, angle))\n      )\n    })\n  }\n\n  if (selection.rxnPluses) {\n    selection.rxnPluses.forEach((pid) => {\n      const plus = struct.rxnPluses.get(pid)\n      action.addOp(new RxnPlusMove(pid, rotateDelta(plus.pp, center, angle)))\n    })\n  }\n\n  if (selection.sgroupData) {\n    selection.sgroupData.forEach((did) => {\n      const data = struct.sgroups.get(did)\n      action.addOp(new SGroupDataMove(did, rotateDelta(data.pp, center, angle)))\n    })\n  }\n\n  const stereoFlags =\n    selection.enhancedFlags || Array.from(restruct.enhancedFlags.keys())\n  if (stereoFlags) {\n    stereoFlags.forEach((flagId) => {\n      const frId = flagId\n      const frag = restruct.molecule.frags.get(frId)\n      action.addOp(\n        new EnhancedFlagMove(\n          flagId,\n          rotateDelta(\n            frag.stereoFlagPosition ||\n              Fragment.getDefaultStereoFlagPosition(restruct.molecule, frId),\n            center,\n            angle\n          )\n        )\n      )\n    })\n  }\n\n  return action.perform(restruct)\n}\n\nexport function fromBondAlign(restruct, bid, dir) {\n  const struct = restruct.molecule\n  const bond = struct.bonds.get(bid)\n  const begin = struct.atoms.get(bond.begin)\n  const end = struct.atoms.get(bond.end)\n\n  const center = begin.pp.add(end.pp).scaled(0.5)\n  let angle = utils.calcAngle(begin.pp, end.pp)\n  const atoms = Array.from(struct.getFragmentIds(begin.fragment))\n\n  // TODO: choose minimal angle\n  angle = dir === 'horizontal' ? -angle : Math.PI / 2 - angle\n\n  if (angle === 0 || Math.abs(angle) === Math.PI) {\n    return fromFlip(restruct, { atoms }, dir, center)\n  }\n\n  return fromRotate(restruct, { atoms }, center, angle)\n}\n\nfunction rotateDelta(v, center, angle) {\n  let v1 = v.sub(center)\n  v1 = v1.rotate(angle)\n  v1.add_(center) // eslint-disable-line no-underscore-dangle\n  return v1.sub(v)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  SimpleObjectAdd,\n  SimpleObjectDelete,\n  SimpleObjectResize\n} from '../operations'\n\nimport { Action } from './action'\n\nexport function fromSimpleObjectDeletion(restruct, id) {\n  const action = new Action()\n  action.addOp(new SimpleObjectDelete(id))\n  return action.perform(restruct)\n}\n\nexport function fromSimpleObjectAddition(restruct, pos, mode, toCircle) {\n  const action = new Action()\n  action.addOp(new SimpleObjectAdd(pos, mode, toCircle))\n  return action.perform(restruct)\n}\n\nexport function fromSimpleObjectResizing(\n  restruct,\n  id,\n  d,\n  current,\n  anchor,\n  toCircle\n) {\n  const action = new Action()\n  action.addOp(new SimpleObjectResize(id, d, current, anchor, false, toCircle))\n  return action.perform(restruct)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Vec2 } from 'domain/entities'\nimport { AtomAdd, BondAdd, CalcImplicitH } from '../operations'\nimport { atomForNewBond, atomGetAttr } from './utils'\nimport { fromAtomsAttrs, mergeSgroups } from './atom'\nimport { fromBondStereoUpdate, fromBondsAttrs, fromBondAddition } from './bond'\n\nimport { Action } from './action'\nimport closest from '../shared/closest'\nimport { fromAromaticTemplateOnBond } from './aromaticFusing'\nimport { fromPaste } from './paste'\nimport utils from '../shared/utils'\nimport { fromSgroupAddition } from './sgroup'\n\nexport function fromTemplateOnCanvas(restruct, template, pos, angle) {\n  const [action, pasteItems] = fromPaste(\n    restruct,\n    template.molecule,\n    pos,\n    angle\n  )\n\n  action.addOp(new CalcImplicitH(pasteItems.atoms).perform(restruct))\n\n  return [action, pasteItems]\n}\n\nfunction extraBondAction(restruct, aid, angle) {\n  let action = new Action()\n  const frid = atomGetAttr(restruct, aid, 'fragment')\n  let additionalAtom: any = null\n\n  if (angle === null) {\n    const middleAtom = atomForNewBond(restruct, aid)\n    const actionRes = fromBondAddition(\n      restruct,\n      { type: 1 },\n      aid,\n      middleAtom.atom,\n      middleAtom.pos.get_xy0()\n    )\n    action = actionRes[0]\n    action.operations.reverse()\n    additionalAtom = actionRes[2]\n  } else {\n    const operation = new AtomAdd(\n      { label: 'C', fragment: frid },\n      new Vec2(1, 0)\n        .rotate(angle)\n        .add(restruct.molecule.atoms.get(aid).pp)\n        .get_xy0()\n    ).perform(restruct) as AtomAdd\n\n    action.addOp(operation)\n    action.addOp(\n      new BondAdd(aid, operation.data.aid, { type: 1 }).perform(restruct)\n    )\n\n    additionalAtom = operation.data.aid\n  }\n\n  return { action, aid1: additionalAtom }\n}\n\nexport function fromTemplateOnAtom(restruct, template, aid, angle, extraBond) {\n  let action = new Action()\n\n  const tmpl = template.molecule\n  const struct = restruct.molecule\n\n  const isTmplSingleGroup = template.molecule.isSingleGroup()\n\n  let atom = struct.atoms.get(aid) // aid - the atom that was clicked on\n  let aid1 = aid // aid1 - the atom on the other end of the extra bond || aid\n\n  let delta: any = null\n\n  if (extraBond) {\n    // create extra bond after click on atom\n    const extraRes = extraBondAction(restruct, aid, angle)\n    action = extraRes.action\n    aid1 = extraRes.aid1\n\n    atom = struct.atoms.get(aid1)\n    delta = utils.calcAngle(struct.atoms.get(aid).pp, atom.pp) - template.angle0\n  } else {\n    if (angle === null) {\n      angle = utils.calcAngle(atom.pp, atomForNewBond(restruct, aid).pos)\n    }\n    delta = angle - template.angle0\n  }\n\n  const map = new Map()\n  const xy0 = tmpl.atoms.get(template.aid).pp\n  const frid = atomGetAttr(restruct, aid, 'fragment')\n\n  /* For merge */\n  const pasteItems: any = {\n    // only atoms and bonds now\n    atoms: [],\n    bonds: []\n  }\n  /* ----- */\n\n  tmpl.atoms.forEach((a, id) => {\n    const attrs: any = Atom.getAttrHash(a)\n    attrs.fragment = frid\n\n    if (id === template.aid) {\n      action.mergeWith(fromAtomsAttrs(restruct, aid1, attrs, true))\n      map.set(id, aid1)\n      pasteItems.atoms.push(aid1)\n    } else {\n      const v = Vec2.diff(a.pp, xy0).rotate(delta).add(atom.pp)\n\n      const operation = new AtomAdd(attrs, v.get_xy0()).perform(\n        restruct\n      ) as AtomAdd\n      action.addOp(operation)\n      map.set(id, operation.data.aid)\n      pasteItems.atoms.push(operation.data.aid)\n    }\n  })\n\n  if (!isTmplSingleGroup) mergeSgroups(action, restruct, pasteItems.atoms, aid)\n\n  tmpl.bonds.forEach((bond) => {\n    const operation = new BondAdd(\n      map.get(bond.begin),\n      map.get(bond.end),\n      bond\n    ).perform(restruct) as BondAdd\n    action.addOp(operation)\n\n    pasteItems.bonds.push(operation.data.bid)\n  })\n\n  tmpl.sgroups.forEach((sg) => {\n    const newsgid = restruct.molecule.sgroups.newId()\n    const sgAtoms = sg.atoms.map((aid) => map.get(aid))\n    const sgAction = fromSgroupAddition(\n      restruct,\n      sg.type,\n      sgAtoms,\n      sg.data,\n      newsgid,\n      atom.pp,\n      sg.type === 'SUP' ? sg.expanded : null,\n      sg.data.name\n    )\n    sgAction.operations.reverse().forEach((oper) => {\n      action.addOp(oper)\n    })\n  })\n\n  action.operations.reverse()\n\n  action.addOp(new CalcImplicitH([...pasteItems.atoms, aid]).perform(restruct))\n  action.mergeWith(\n    fromBondStereoUpdate(\n      restruct,\n      restruct.molecule.bonds.get(pasteItems.bonds[0])\n    )\n  )\n\n  return [action, pasteItems]\n}\n\nexport function fromTemplateOnBondAction(\n  restruct,\n  template,\n  bid,\n  events,\n  flip,\n  force\n) {\n  if (!force) return fromTemplateOnBond(restruct, template, bid, flip)\n\n  const simpleFusing = (restruct, template, bid) =>\n    fromTemplateOnBond(restruct, template, bid, flip) // eslint-disable-line\n  /* aromatic merge (Promise) */\n  return fromAromaticTemplateOnBond(\n    restruct,\n    template,\n    bid,\n    events,\n    simpleFusing\n  )\n}\n\nfunction fromTemplateOnBond(restruct, template, bid, flip) {\n  // TODO: refactor function !!\n  const action = new Action()\n\n  const tmpl = template.molecule\n  const struct = restruct.molecule\n\n  const bond = struct.bonds.get(bid)\n  const tmplBond = tmpl.bonds.get(template.bid)\n\n  const tmplBegin = tmpl.atoms.get(flip ? tmplBond.end : tmplBond.begin)\n\n  const atomsMap = new Map([\n    [tmplBond.begin, flip ? bond.end : bond.begin],\n    [tmplBond.end, flip ? bond.begin : bond.end]\n  ])\n\n  // calc angle\n  const bondAtoms = {\n    begin: flip ? tmplBond.end : tmplBond.begin,\n    end: flip ? tmplBond.begin : tmplBond.end\n  }\n  const { angle, scale } = utils.mergeBondsParams(struct, bond, tmpl, bondAtoms)\n\n  const frid = struct.getBondFragment(bid)\n\n  /* For merge */\n  const pasteItems: any = {\n    // only atoms and bonds now\n    atoms: [],\n    bonds: []\n  }\n  /* ----- */\n\n  tmpl.atoms.forEach((atom, id) => {\n    const attrs: any = Atom.getAttrHash(atom)\n    attrs.fragment = frid\n    if (id === tmplBond.begin || id === tmplBond.end) {\n      action.mergeWith(fromAtomsAttrs(restruct, atomsMap.get(id), attrs, true))\n      return\n    }\n\n    const v = Vec2.diff(atom.pp, tmplBegin.pp)\n      .rotate(angle)\n      .scaled(scale)\n      .add(struct.atoms.get(bond.begin).pp)\n    const mergeA = closest.atom(restruct, v, null, 0.1)\n\n    if (mergeA === null) {\n      const operation = new AtomAdd(attrs, v).perform(restruct) as AtomAdd\n      action.addOp(operation)\n      atomsMap.set(id, operation.data.aid)\n      pasteItems.atoms.push(operation.data.aid)\n    } else {\n      atomsMap.set(id, mergeA.id)\n\n      action.mergeWith(fromAtomsAttrs(restruct, atomsMap.get(id), attrs, true))\n      // TODO [RB] need to merge fragments?\n    }\n  })\n  mergeSgroups(action, restruct, pasteItems.atoms, bond.begin)\n\n  tmpl.bonds.forEach((tBond) => {\n    const existId = struct.findBondId(\n      atomsMap.get(tBond.begin),\n      atomsMap.get(tBond.end)\n    )\n    if (existId === null) {\n      const operation = new BondAdd(\n        atomsMap.get(tBond.begin),\n        atomsMap.get(tBond.end),\n        tBond\n      ).perform(restruct) as BondAdd\n      action.addOp(operation)\n\n      pasteItems.bonds.push(operation.data.bid)\n    } else {\n      const commonBond = bond.type > tmplBond.type ? bond : tmplBond\n      action.mergeWith(fromBondsAttrs(restruct, existId, commonBond, true))\n    }\n  })\n\n  if (pasteItems.atoms.length) {\n    action.addOp(\n      new CalcImplicitH([bond.begin, bond.end, ...pasteItems.atoms]).perform(\n        restruct\n      )\n    )\n  }\n\n  if (pasteItems.bonds.length) {\n    action.mergeWith(\n      fromBondStereoUpdate(\n        restruct,\n        restruct.molecule.bonds.get(pasteItems.bonds[0])\n      )\n    )\n  }\n\n  action.operations.reverse()\n\n  return [action, pasteItems]\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { TextCreate, TextDelete, TextUpdate } from '../operations'\n\nimport { Action } from './action'\nimport { ReStruct } from '../../render'\nimport { Vec2 } from 'domain/entities'\n\nexport function fromTextCreation(\n  restruct: ReStruct,\n  content: string,\n  position: Vec2,\n  pos: Array<Vec2>\n) {\n  const action = new Action()\n  action.addOp(new TextCreate(content, position, pos))\n  return action.perform(restruct)\n}\n\nexport function fromTextUpdating(\n  restruct: ReStruct,\n  id: number,\n  content: string\n) {\n  const action = new Action()\n  action.addOp(new TextUpdate(id, content))\n  return action.perform(restruct)\n}\n\nexport function fromTextDeletion(restruct: ReStruct, id: number) {\n  const action = new Action()\n\n  action.addOp(new TextDelete(id))\n\n  return action.perform(restruct)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Highlight } from 'domain/entities'\nimport { ReStruct } from '../../render'\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\n\ntype Data = {\n  atoms: Array<number>\n  bonds: Array<number>\n  color: string\n  highlightId?: number\n}\n\nexport class HighlightAdd extends BaseOperation {\n  data: Data\n\n  constructor(\n    atoms: Array<number>,\n    bonds: Array<number>,\n    color: string,\n    highlightId?: number\n  ) {\n    super(OperationType.ADD_HIGHLIGHT)\n    this.data = {\n      atoms: atoms,\n      bonds: bonds,\n      color: color,\n      highlightId: highlightId\n    }\n  }\n\n  execute(restruct: ReStruct) {\n    const { atoms, bonds, color } = this.data\n\n    if (!color) {\n      return\n    }\n\n    const struct = restruct.molecule\n    const highlight = new Highlight({\n      atoms,\n      bonds,\n      color\n    })\n\n    if (typeof this.data.highlightId !== 'number') {\n      this.data.highlightId = struct.highlights.add(highlight)\n    } else {\n      struct.highlights.set(this.data.highlightId, highlight)\n    }\n\n    notifyChanged(restruct, atoms, bonds)\n  }\n\n  invert() {\n    const { atoms, bonds, color, highlightId } = this.data\n    const inverted = new HighlightDelete(highlightId, atoms, bonds, color)\n    return inverted\n  }\n}\n\nexport class HighlightDelete extends BaseOperation {\n  data: Data\n\n  constructor(\n    highlightId?: number,\n    atoms?: Array<number>,\n    bonds?: Array<number>,\n    color?: string\n  ) {\n    super(OperationType.REMOVE_HIGHLIGHT, 5)\n    this.data = {\n      highlightId: highlightId,\n      atoms: atoms || [],\n      bonds: bonds || [],\n      color: color || 'white'\n    }\n  }\n\n  execute(restruct: ReStruct) {\n    if (typeof this.data.highlightId === 'number') {\n      const struct = restruct.molecule\n\n      const highlightToRemove = struct.highlights.get(this.data.highlightId)\n      if (typeof highlightToRemove === 'undefined') {\n        return\n      }\n\n      const { atoms, bonds, color } = highlightToRemove\n\n      this.data.atoms = atoms\n      this.data.bonds = bonds\n      this.data.color = color\n\n      struct.highlights.delete(this.data.highlightId)\n      notifyChanged(restruct, atoms, bonds)\n    }\n  }\n\n  invert() {\n    const { atoms, bonds, color, highlightId } = this.data\n    const inverted = new HighlightAdd(atoms, bonds, color, highlightId)\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport class HighlightUpdate extends BaseOperation {\n  // making sure highlightId is not optional\n  newData: Data & { highlightId: number }\n  oldData: Data & { highlightId: number }\n\n  constructor(\n    highlightId: number,\n    atoms: Array<number>,\n    bonds: Array<number>,\n    color: string\n  ) {\n    super(OperationType.UPDATE_HIGHLIGHT)\n    this.newData = {\n      atoms: atoms,\n      bonds: bonds,\n      color: color,\n      highlightId: highlightId\n    }\n\n    // pre-filling with new data. Upon execution this will be replaced\n    this.oldData = {\n      atoms: atoms,\n      bonds: bonds,\n      color: color,\n      highlightId: highlightId\n    }\n  }\n\n  execute(restruct: ReStruct) {\n    const { atoms, bonds, color } = this.newData\n    if (!color) {\n      return\n    }\n\n    const highlightId = this.newData.highlightId\n    const struct = restruct.molecule\n\n    const highlightToUpdate = struct.highlights.get(highlightId)\n\n    if (highlightToUpdate) {\n      // saving data of existing highlight\n      const {\n        atoms: oldAtoms,\n        bonds: oldBonds,\n        color: oldColor\n      } = highlightToUpdate\n      this.oldData = {\n        atoms: oldAtoms,\n        bonds: oldBonds,\n        color: oldColor,\n        highlightId\n      }\n\n      // creating new highlight with new data\n      const updatedHighlight = new Highlight({\n        atoms,\n        bonds,\n        color\n      })\n\n      // setting the new highlight\n      struct.highlights.set(this.newData.highlightId, updatedHighlight)\n\n      // notify atoms from both collections that repaint is needed\n      notifyChanged(restruct, [...atoms, ...oldAtoms], [...bonds, ...oldBonds])\n    }\n  }\n\n  invert() {\n    const { atoms, bonds, color } = this.oldData\n    const inverted = new HighlightUpdate(\n      this.newData.highlightId,\n      atoms,\n      bonds,\n      color\n    )\n    return inverted\n  }\n}\n\nfunction notifyChanged(restruct: ReStruct, atoms?: number[], bonds?: number[]) {\n  // Notifying ReStruct that repaint needed\n  const reAtoms = restruct.atoms\n  const reBonds = restruct.bonds\n\n  if (atoms) {\n    atoms.forEach((atomId) => {\n      if (typeof reAtoms.get(atomId) !== 'undefined') {\n        restruct.markAtom(atomId, 1)\n      }\n    })\n  }\n\n  if (bonds) {\n    bonds.forEach((bondId) => {\n      if (typeof reBonds.get(bondId) !== 'undefined') {\n        restruct.markBond(bondId, 1)\n      }\n    })\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReStruct } from '../../render'\n\nimport { HighlightAdd, HighlightDelete } from '../operations/highlight'\n\nimport { Action } from './action'\n\ntype HighlightType = {\n  atoms: number[]\n  bonds: number[]\n  color: string\n}\n\nexport function fromHighlightCreate(\n  restruct: ReStruct,\n  highlights: HighlightType[]\n): Action {\n  const action = new Action()\n\n  highlights.forEach((highlight) => {\n    const { atoms, bonds, color } = highlight\n\n    action.addOp(new HighlightAdd(atoms, bonds, color))\n  })\n  return action.perform(restruct)\n}\n\nexport function fromHighlightClear(restruct: ReStruct): Action {\n  const action = new Action()\n\n  const highlights = restruct.molecule.highlights\n\n  highlights.forEach((_, key) => {\n    action.addOp(new HighlightDelete(key))\n  })\n\n  return action.perform(restruct)\n}\n\n/*\n// Update highlight by placing new one on the given id\nexport function fromHighlightUpdate(\n  highlightId: number,\n  restruct: ReStruct,\n  atoms: number[],\n  bonds: number[],\n  color: string\n): Action {\n  const action = new Action()\n\n  const highlights = restruct.molecule.highlights\n\n  const selectedHighlight = highlights.get(highlightId)\n  if (!selectedHighlight) {\n    return action\n  }\n\n  const updateOperation = new HighlightUpdate(highlightId, atoms, bonds, color)\n  action.addOp(updateOperation)\n\n  return action.perform(restruct)\n}\n*/\n\n/*\n// Delete single highlight by id\nexport function fromHighlightDelete(\n  restruct: ReStruct,\n  highlightId: number\n): Action {\n  const action = new Action()\n\n  const highlights = restruct.molecule.highlights\n  if (highlights.has(highlightId)) {\n    action.addOp(new HighlightDelete(highlightId))\n\n    return action.perform(restruct)\n  }\n  return action\n}\n*/\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport const SgContexts = {\n  Fragment: 'Fragment',\n  Multifragment: 'Multifragment',\n  Bond: 'Bond',\n  Atom: 'Atom',\n  Group: 'Group'\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport utils from './shared/utils'\n\n// TODO: delete it\nexport const fracAngle = utils.fracAngle\nexport * from './operations'\nexport * from './actions'\nexport * from './shared/constants'\nexport * from './editor.types'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AutomapMode,\n  CalculateProps,\n  CalculateResult,\n  CheckResult,\n  CheckTypes,\n  ChemicalMimeType,\n  ConvertResult,\n  InfoResult,\n  OutputFormatType,\n  StructService\n} from 'domain/services'\nimport { StructOrString } from 'application/indigo.types'\nimport { KetSerializer } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\n\nconst defaultTypes: Array<CheckTypes> = [\n  'radicals',\n  'pseudoatoms',\n  'stereo',\n  'query',\n  'overlapping_atoms',\n  'overlapping_bonds',\n  'rgroups',\n  'chiral',\n  '3d'\n]\nconst defaultCalcProps: Array<CalculateProps> = [\n  'molecular-weight',\n  'most-abundant-mass',\n  'monoisotopic-mass',\n  'gross',\n  'mass-composition'\n]\n\ntype ConvertOptions = {\n  outputFormat?: ChemicalMimeType\n}\ntype AutomapOptions = {\n  mode?: AutomapMode\n}\ntype CheckOptions = {\n  types?: Array<CheckTypes>\n}\ntype CalculateOptions = {\n  properties?: Array<CalculateProps>\n}\ntype RecognizeOptions = {\n  version?: string\n}\ntype GenerateImageOptions = {\n  outputFormat?: OutputFormatType\n  backgroundColor?: string\n}\n\nfunction convertStructToString(\n  struct: StructOrString,\n  serializer: KetSerializer\n): string {\n  if (typeof struct !== 'string') {\n    const aidMap = new Map()\n    const result = struct.clone(null, null, false, aidMap)\n\n    return serializer.serialize(result)\n  }\n\n  return struct\n}\n\nexport class Indigo {\n  #structService: StructService\n  #ketSerializer: KetSerializer\n\n  constructor(structService) {\n    this.#structService = structService\n    this.#ketSerializer = new KetSerializer()\n  }\n\n  info(): Promise<InfoResult> {\n    return this.#structService.info()\n  }\n\n  convert(\n    struct: StructOrString,\n    options?: ConvertOptions\n  ): Promise<ConvertResult> {\n    const outputFormat = options?.outputFormat || ChemicalMimeType.KET\n\n    return this.#structService.convert({\n      struct: convertStructToString(struct, this.#ketSerializer),\n      output_format: outputFormat\n    })\n  }\n\n  layout(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .layout({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  clean(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .clean({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  aromatize(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .aromatize({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  dearomatize(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .dearomatize({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  calculateCip(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .calculateCip({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  automap(struct: StructOrString, options?: AutomapOptions): Promise<Struct> {\n    const mode = options?.mode || 'discard'\n\n    return this.#structService\n      .automap({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET,\n        mode\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  check(struct: StructOrString, options?: CheckOptions): Promise<CheckResult> {\n    const types = options?.types || defaultTypes\n\n    return this.#structService.check({\n      struct: convertStructToString(struct, this.#ketSerializer),\n      types\n    })\n  }\n\n  calculate(\n    struct: StructOrString,\n    options?: CalculateOptions\n  ): Promise<CalculateResult> {\n    const properties = options?.properties || defaultCalcProps\n\n    return this.#structService.calculate({\n      struct: convertStructToString(struct, this.#ketSerializer),\n      properties\n    })\n  }\n\n  recognize(image: Blob, options?: RecognizeOptions): Promise<Struct> {\n    const version = options?.version || ''\n\n    return this.#structService\n      .recognize(image, version)\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  generateImageAsBase64(\n    struct: StructOrString,\n    options?: GenerateImageOptions\n  ): Promise<string> {\n    const outputFormat = options?.outputFormat || 'png'\n    const backgroundColor = options?.backgroundColor || ''\n\n    return this.#structService.generateImageAsBase64(\n      convertStructToString(struct, this.#ketSerializer),\n      {\n        outputFormat,\n        backgroundColor\n      }\n    )\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  FormatterFactory,\n  SupportedFormat,\n  identifyStructFormat\n} from './formatters'\nimport { GenerateImageOptions, StructService } from 'domain/services'\n\nimport { Editor } from './editor'\nimport { Indigo } from 'application/indigo'\nimport { KetSerializer, MolfileFormat } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\nimport assert from 'assert'\nimport { EventEmitter } from 'events'\nimport { runAsyncAction } from 'utilities'\n\nconst allowedApiSettings = {\n  'general.dearomatize-on-load': 'dearomatize-on-load',\n  ignoreChiralFlag: 'ignoreChiralFlag'\n}\n\nasync function prepareStructToRender(\n  structStr: string,\n  structService: StructService,\n  ketcherInstance: Ketcher\n): Promise<Struct> {\n  const struct: Struct = await parseStruct(\n    structStr,\n    structService,\n    ketcherInstance\n  )\n  struct.initHalfBonds()\n  struct.initNeighbors()\n  struct.setImplicitHydrogen()\n  struct.markFragments()\n\n  return struct\n}\n\nfunction parseStruct(\n  structStr: string,\n  structService: StructService,\n  ketcherInstance: Ketcher\n) {\n  const format = identifyStructFormat(structStr)\n  const factory = new FormatterFactory(structService)\n  const options = ketcherInstance.editor.options()\n\n  const service = factory.create(format, {\n    'dearomatize-on-load': options['dearomatize-on-load'],\n    'ignore-no-chiral-flag': options.ignoreChiralFlag\n  })\n  return service.getStructureFromStringAsync(structStr)\n}\n\nfunction getStructure(\n  structureFormat = SupportedFormat.rxn,\n  formatterFactory: FormatterFactory,\n  struct: Struct\n): Promise<string> {\n  const formatter = formatterFactory.create(structureFormat)\n  return formatter.getStructureFromStructAsync(struct)\n}\n\nexport class Ketcher {\n  #structService: StructService\n  #formatterFactory: FormatterFactory\n  #editor: Editor\n  #indigo: Indigo\n  #eventBus: EventEmitter\n\n  get editor(): Editor {\n    return this.#editor\n  }\n\n  get eventBus(): EventEmitter {\n    return this.#eventBus\n  }\n\n  constructor(\n    editor: Editor,\n    structService: StructService,\n    formatterFactory: FormatterFactory\n  ) {\n    assert(editor != null)\n    assert(structService != null)\n    assert(formatterFactory != null)\n\n    this.#editor = editor\n    this.#structService = structService\n    this.#formatterFactory = formatterFactory\n    this.#indigo = new Indigo(this.#structService)\n    this.#eventBus = new EventEmitter()\n  }\n\n  get indigo() {\n    return this.#indigo\n  }\n\n  // TEMP.: getting only dearomatize-on-load setting\n  get settings() {\n    const options = this.#editor.options()\n    const result = Object.entries(allowedApiSettings).reduce(\n      (acc, [apiSetting, clientSetting]) => {\n        if (clientSetting in options) {\n          return { ...acc, [apiSetting]: clientSetting }\n        }\n        return acc\n      },\n      {}\n    )\n\n    if (!Object.keys(result).length) {\n      throw new Error('Allowed options are not provided')\n    }\n\n    return result\n  }\n\n  // TODO: create optoions type\n  setSettings(settings: Record<string, string>) {\n    // TODO: need to expand this and refactor this method\n    if (!settings) {\n      throw new Error('Please provide settings')\n    }\n    const options = {}\n    for (const [apiSetting, clientSetting] of Object.entries(\n      allowedApiSettings\n    )) {\n      options[clientSetting] = settings[apiSetting]\n    }\n\n    return this.#editor.setOptions(JSON.stringify(options))\n  }\n\n  getSmiles(isExtended = false): Promise<string> {\n    const format = isExtended\n      ? SupportedFormat.smilesExt\n      : SupportedFormat.smiles\n    return getStructure(format, this.#formatterFactory, this.editor.struct())\n  }\n\n  async getMolfile(molfileFormat?: MolfileFormat): Promise<string> {\n    if (this.containsReaction()) {\n      throw Error(\n        'The structure cannot be saved as *.MOL due to reaction arrrows.'\n      )\n    }\n\n    const formatPassed =\n      molfileFormat === 'v3000' ? SupportedFormat.molV3000 : SupportedFormat.mol\n    const format = molfileFormat ? formatPassed : SupportedFormat.molAuto\n\n    const molfile = await getStructure(\n      format,\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n\n    return molfile\n  }\n\n  async getRxn(molfileFormat: MolfileFormat = 'v2000'): Promise<string> {\n    if (!this.containsReaction()) {\n      throw Error(\n        'The structure cannot be saved as *.RXN: there is no reaction arrows.'\n      )\n    }\n    const format =\n      molfileFormat === 'v3000' ? SupportedFormat.rxnV3000 : SupportedFormat.rxn\n    const rxnfile = await getStructure(\n      format,\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n\n    return rxnfile\n  }\n\n  getKet(): Promise<string> {\n    return getStructure(\n      SupportedFormat.ket,\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n  }\n\n  getSmarts(): Promise<string> {\n    return getStructure(\n      SupportedFormat.smarts,\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n  }\n\n  getCml(): Promise<string> {\n    return getStructure(\n      SupportedFormat.cml,\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n  }\n\n  getInchi(withAuxInfo = false): Promise<string> {\n    return getStructure(\n      withAuxInfo ? SupportedFormat.inChIAuxInfo : SupportedFormat.inChI,\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n  }\n\n  async generateInchIKey(): Promise<string> {\n    const struct: string = await getStructure(\n      SupportedFormat.ket,\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n\n    return this.#structService.generateInchIKey(struct)\n  }\n\n  containsReaction(): boolean {\n    return this.editor.struct().hasRxnArrow()\n  }\n\n  async setMolecule(structStr: string): Promise<void> {\n    runAsyncAction<void>(async () => {\n      assert(typeof structStr === 'string')\n\n      const struct: Struct = await prepareStructToRender(\n        structStr,\n        this.#structService,\n        this\n      )\n\n      this.#editor.struct(struct)\n    }, this.eventBus)\n  }\n\n  async addFragment(structStr: string): Promise<void> {\n    runAsyncAction<void>(async () => {\n      assert(typeof structStr === 'string')\n\n      const struct: Struct = await prepareStructToRender(\n        structStr,\n        this.#structService,\n        this\n      )\n\n      this.#editor.structToAddFragment(struct)\n    }, this.eventBus)\n  }\n\n  async layout(): Promise<void> {\n    runAsyncAction<void>(async () => {\n      const struct = await this.#indigo.layout(this.#editor.struct())\n      const ketSerializer = new KetSerializer()\n      this.setMolecule(ketSerializer.serialize(struct))\n    }, this.eventBus)\n  }\n\n  recognize(image: Blob, version?: string): Promise<Struct> {\n    return this.#indigo.recognize(image, { version: version })\n  }\n\n  async generateImage(\n    data: string,\n    options: GenerateImageOptions = { outputFormat: 'png' }\n  ): Promise<Blob> {\n    let meta = ''\n\n    switch (options.outputFormat) {\n      case 'svg':\n        meta = 'image/svg+xml'\n        break\n\n      case 'png':\n      default:\n        meta = 'image/png'\n        options.outputFormat = 'png'\n    }\n\n    const base64 = await this.#structService.generateImageAsBase64(\n      data,\n      options\n    )\n    const byteCharacters = atob(base64)\n    const byteNumbers = new Array(byteCharacters.length)\n    for (let i = 0; i < byteCharacters.length; i++) {\n      byteNumbers[i] = byteCharacters.charCodeAt(i)\n    }\n    const byteArray = new Uint8Array(byteNumbers)\n    const blob = new Blob([byteArray], { type: meta })\n    return blob\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  StructService,\n  StructServiceOptions,\n  StructServiceProvider\n} from 'domain/services'\n\nimport { Editor } from 'application/editor'\nimport { FormatterFactory } from 'application/formatters'\nimport { Ketcher } from './ketcher'\nimport assert from 'assert'\n\nexport const DefaultStructServiceOptions = {\n  'smart-layout': true,\n  'ignore-stereochemistry-errors': true,\n  'mass-skip-error-on-pseudoatoms': false,\n  'gross-formula-add-rsites': true,\n  'aromatize-skip-superatoms': true,\n  'dearomatize-on-load': false,\n  'ignore-no-chiral-flag': false\n}\n\nexport class KetcherBuilder {\n  #structServiceProvider?: StructServiceProvider\n\n  withStructServiceProvider(\n    structServiceProvider: StructServiceProvider\n  ): KetcherBuilder {\n    this.#structServiceProvider = structServiceProvider\n    return this\n  }\n\n  build(editor: Editor, serviceOptions?: StructServiceOptions): Ketcher {\n    assert(editor != null)\n    assert(this.#structServiceProvider != null)\n\n    const mergedServiceOptions: StructServiceOptions = {\n      ...DefaultStructServiceOptions,\n      ...serviceOptions\n    }\n    const structService: StructService =\n      this.#structServiceProvider!.createStructService(mergedServiceOptions)\n    const ketcher = new Ketcher(\n      editor,\n      structService,\n      new FormatterFactory(structService)\n    )\n    ketcher[this.#structServiceProvider.mode] = true\n\n    return ketcher\n  }\n}\n"],"names":["ElementColor","H","He","Li","Be","B","C","N","O","F","Ne","Na","Mg","Al","Si","P","S","Cl","Ar","K","Ca","Sc","Ti","V","Cr","Mn","Fe","Co","Ni","Cu","Zn","Ga","Ge","As","Se","Br","Kr","Rb","Sr","Y","Zr","Nb","Mo","Tc","Ru","Rh","Pd","Ag","Cd","In","Sn","Sb","Te","I","Xe","Cs","Ba","La","Ce","Pr","Nd","Pm","Sm","Eu","Gd","Tb","Dy","Ho","Er","Tm","Yb","Lu","Hf","Ta","W","Re","Os","Ir","Pt","Au","Hg","Tl","Pb","Bi","Po","At","Rn","Fr","Ra","Ac","Th","Pa","U","Np","Pu","Am","Cm","Bk","Cf","Es","Fm","Md","No","Lr","Rf","Db","Sg","Bh","Hs","Mt","Ds","Rg","Cn","Nh","Fl","Mc","Lv","Ts","Og","elementsArray","number","label","period","group","title","state","origin","type","mass","leftH","elementsMap","reduce","acc","element","set","Map","Elements","get","key","filter","predicate","Generics","itemSets","displayName","items","description","subGroups","AtomList","params","_classCallCheck","notList","ids","_createClass","labels","_createForOfIteratorHelper","id","currenElement","push","labelList","join","atomList","sort","toString","Vec2","args","length","x","y","z","arguments","parseFloat","Error","Math","sqrt","v","s","y1","f","scaled","l","toFixed","assert","max","min","ceil","floor","angle","sin","cos","rotateSC","atan2","a","b","diff","v1","v2","cross","dot","i","addScaled","f1","f2","lc2","Pile","_inherits","_createSuper","item","setB","isSuperset","subset","has","expression","Array","from","union","add","thisSet","_toConsumableArray","sets","unionized","setsToReturn","prevSets","curSet","isCurSetMerged","newSets","map","intersec","intersection","size","unionIntersections","_wrapNativeSuper","Set","getValueOrDefault","value","defaultValue","isCorrectPseudo","getPseudo","radicalElectrons","radical","Atom","PATTERN","RADICAL","DOUPLET","SINGLET","TRIPLET","StereoLabel","attributes","fragment","alias","attrlist","isotope","charge","rglabel","attpnt","explicitValence","valence","implicitH","pp","sgs","ringBondCount","substitutionCount","unsaturatedAtom","hCount","aam","invRet","exactChangeFlag","rxnFragmentType","stereoLabel","stereoParity","neighbors","badConn","Object","defineProperty","enumerable","fidMap","ret","conn","isQuery","groupno","rad","hyd","absCharge","abs","atom","attrs","attr","NONE","STEREO_PARITY","ODD","EVEN","EITHER","Bond","begin","end","xxx","stereo","STEREO","topology","TOPOLOGY","reactingCenterStatus","len","sb","sa","center","struct","p1","atoms","p2","sub","normalized","aidMap","cp","sGroupsWithBeginAtom","sGroupsWithEndAtom","bond","TYPE","SINGLE","DOUBLE","TRIPLE","AROMATIC","SINGLE_OR_DOUBLE","SINGLE_OR_AROMATIC","DOUBLE_OR_AROMATIC","ANY","DATIVE","HYDROGEN","UP","DOWN","CIS_TRANS","RING","CHAIN","REACTING_CENTER","NOT_CENTER","UNMARKED","CENTER","UNCHANGED","MADE_OR_BROKEN","ORDER_CHANGED","MADE_OR_BROKEN_AND_CHANGED","StereoFlag","calcStereoFlag","stereoAids","undefined","filteredStereoAtoms","aid","hasAnotherLabel","some","stereoFlag","Mixed","match","Abs","And","Or","Fragment","stereoAtoms","stereoFlagPosition","_classPrivateFieldInitSpec","_classPrivateFieldSet","_classPrivateFieldGet","fr","frId","isAdd","includes","bonds","values","atomId","fragmentId","getFragment","bb","getCoordBoundingBox","scaled2obj","options","scale","obj2scaled","Scale","isCorrectStereoCenter","beginNeighs","endNeighs","beginAtom","EndAtomNeigh","NaN","Number","atomGetNeighbors","StereoValidator","FunctionalGroupsProvider","functionalGroupsList","list","instance","SaltsAndSolventsProvider","saltsAndSolventsList","Box2Abs","p0","lp","rb","p","ext","d","centre","relBox","width","height","b1","b2","c","dc","dd","da","db","SGroupBracketParams","w","h","n","SGroup","bracketBox","bracketDir","areas","hover","hovering","selected","selectionPlate","patoms","xBonds","neiAtoms","data","mul","connectivity","name","subscript","expanded","attached","absolute","showUnits","nCharsToDisplay","tagChar","daspPos","fieldType","fieldName","fieldValue","units","query","queryOp","keys","forEach","oldValue","offset","sum","topLeftPoint","context","contentBoxes","contentBB","direction","pos","bba","extend","bbb","include","sgroups","descriptorIntersects","sAtom","sAtomPP","getMassCentre","isInteger","attachPointId","getAttAtomId","neighbours","every","sgroup","moleculeName","saltsAndSolventsProvider","getInstance","saltsAndSolvents","getSaltsAndSolventsList","abbreviation","sgroupsOnCanvas","onlySaltsOrSolvents","isSaltOrSolvent","atomIdInSaltOrSolvent","bondId","bondIdInSaltOrSolvent","newAtoms","j","_mol","sg","atomMap","removeNegative","filterAtoms","field","elem","allAtoms","splice","mol","parentAtomSet","crossBonds","bid","sGroup","crossBondsPerAtom","remol","render","flat","getCenter","braketBox","getAtom","position","structBoundingBox","getVBoxObj","vext","atomSet","brackets","crossBondsPerAtomValues","bracketWidth","sz","cl","cr","bracketHeight","negated","cl0","cr0","dr","dl","getDir","a0","_atom","getAtoms","indexOf","inBonds","xAtom1","xAtom2","crossBond","bond1","bond2","tailAtom","amap","aid2","newBond","newCrossBond","xBond2","sGroupForest","getPathToRoot","reverse","sgid","atomAddToSGroup","SUP","MUL","SRU","MON","MER","COP","CRO","MOD","GRA","COM","MIX","FOR","DAT","GEN","sgBottomRightPoint","bottomRightPoint","segmentIntersection","FunctionalGroup","provider","functionalGroups","getFunctionalGroupsList","searchName","foundGroup","find","fg","relatedSGroup","molecule","getBonds","isFunctionalGroupReturned","relatedSGroupId","_","functionalGroup","isAttachmentBond","isAtomInSameFunctionalGroup","otherAtomId","isFunctionalGroup","isSGroupFound","isBondBeginInSGroupAndBondEndOutside","isBondEndInSGroupAndBondBeginOutside","isAttachedSGroup","sgroupsFromReStruct","contractedFunctionalGroups","isContractedFunctionalGroup","sGroups","sGroupId","atomsInSGroup","isContracted","sgroupId","isExpanded","HalfBond","dir","norm","ang","loop","contra","next","leftSin","leftCos","leftNeighbor","rightSin","rightCos","rightNeighbor","Loop","hbs","isConvex","dblBonds","aromatic","convex","hb","halfBonds","RGroup","atrributes","frags","resth","range","ifthen","index","fid","rgroups","frid","_rgid","rgroup","RxnArrowMode","RxnArrow","currentP","mode","defaultHeight","isElliptical","arrow","EllipticalArcFilledBow","EllipticalArcFilledTriangle","EllipticalArcOpenHalfAngle","EllipticalArcOpenAngle","RxnPlus","SGroupForest","parent","children","atomSets","order","queue","shift","newId","isStrictSuperset","isSubset","equals","parents","childs","findIndex","childId","path","guess","getAtomSetRelations","resetParentLink","parentId","childIndex","e","checkOverlapping","res","sid","sgAtoms","SimpleObjectMode","SimpleObject","line","rectangle","Pool","_defineProperty","_assertThisInitialized","nextId","entries","_slicedToArray","arrayAddIfMissing","array","Struct","loops","isReaction","rxnArrows","rxnPluses","simpleObjects","texts","highlights","_aid","hasRxnProps","_bid","hasRxnArrow","hasRxnPluses","bondSet","dropRxnSymbols","simpleObjectsSet","textsSet","mergeInto","rg","_fnum","clone","getFragmentIds","keepAllRGroups","fidMask","_frag","rgroupsIds","rgid","keepGroup","newfid","oldfid","bidMap","insert","soid","initHalfBonds","initNeighbors","updateHalfBonds","sortNeighbors","findLoops","addAtom","a1","a2","hb1","hb2","halfBondId","halfBond","startCoords","endCoords","coordsDifference","dist","turnLeft","oxAngle","clear","bondInitHalfBonds","hbid","left","hbl","ir","il","setHbNext","halfBondSetAngle","nei","nei2","nextNei","atomSortNeighbors","halfBondUpdate","atomUpdateHalfBonds","remove","vec","global","totalLength","cnt","bld","getBondLengthData","totalDist","minDist","k","firstaid","pop","neiId","discardExistingFragments","addedAtoms","components","component","findConnectedComponent","idSet","frag","updateStereoAtom","findConnectedComponents","comp","markFragment","isReactionStruct","avg","getAvgBondLength","getAvgClosestAtomDistance","hbi","ai","bi","hbj","aj","bj","subloops","continueFlag","atomToHalfBond","aid1","subloop","slice","hbid1","hbid2","hba","hbb","loopArr","halfBondAngle","totalAngle","PI","hbida","hbidb","newLoops","bondsToMark","hbIdNext","hbId","partitionLoop","loopId","loopIsInner","loopHasSelfIntersections","loopIsConvex","calcConn","isAromatic","correctConn","hasImplicitH","calcValenceMinusHyd","calcValence","calcImplicitHydrogen","connectedComponents","barriers","arrowPos","reactants","products","defineRxnFragmentTypeForAtomset","atomset","arrowpos","groupId","groupsIds","TextCommand","preparePositions","positions","Text","content","coords","Highlight","color","customizer","_typeof","clonedValue","cloneDeep","getNodeWithInvertedYCoord","node","cloneDeepWith","arrowToKet","arrowNode","plusToKet","plusNode","coord","location","prop","ifDef","target","isArray","tfx","parsedValue","KetcherAsyncEvents","runAsyncAction","_asyncToGenerator","_regeneratorRuntime","action","eventEmitter","emit","LOADING","SUCCESS","FAILURE","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","window","atob","byteArrays","byteNumbers","charCodeAt","byteArray","Uint8Array","blob","Blob","headerToKet","header","fromRlabel","rgi","val","moleculeToKet","body","rglabelToKet","atomListToKet","atomToKet","bondToKet","sgroupToKet","_objectSpread","source","result","stereoCare","weight","parseInt","refsToRGroups","rgnumber","toUpperCase","toRlabel","moleculeToStruct","ketItem","rglabelToStruct","atomListToStruct","atomToStruct","bondToStruct","sgroupToStruct","markFragments","bindSGroupsToFunctionalGroups","attachmentPoints","Boolean","mapping","$refs","el","elements","toLowerCase","placement","display","fieldData","prepareStructForKet","ketNodes","rgFrags","fragsAtoms","getFragmentCenter","filteredFragmentIds","addMolecules","ketNode","filteredSGroups","filteredSGroupsMap","fragmentIds","sGroupFragmentsMap","generateSGroupFragmentsMap","mergedFragments","fragments","atomsInFragment","hasAtomInSGroup","fragmentSet","rgroupToKet","rlogic","rgroupLogicToKet","rglogic","rgroupToStruct","rgroupLogicToStruct","_value","rxnToStruct","simpleObjectToKet","simpleObjectNode","simpleObjectToStruct","object","circleToEllipse","radius","pos0","ellipse","textToKet","textNode","textToStruct","validate","ket","ajv","Ajv","compile","schema","parseNode","currentStruct","KetSerializer","resultingStruct","JSON","parse","nodes","root","$ref","moleculeId","stringify","paddedNum","precision","numStr","replace","padStart","parseDecimalInt","str","isNaN","partitionLine","parts","withspace","partitionLineFixed","itemLength","fmtInfo","bondTypeMap","bondStereoMap","v30bondStereoMap","bondTopologyMap","countsLinePartition","atomLinePartition","bondLinePartition","atomListHeaderPartition","atomListHeaderLength","atomListHeaderItemLength","chargeMap","valenceMap","implicitHydrogenMap","v30atomPropMap","CHG","RAD","MASS","VAL","HCOUNT","INVRET","SUBST","UNSAT","RBCNT","rxnItemsPartition","FRAGMENT","REACTANT","PRODUCT","AGENT","rxnMerge","mols","nReactants","nProducts","nAgents","shouldReactionRelayout","bbReact","bbAgent","bbProd","molReact","molAgent","molProd","bondLengthData","bondLengthDataMol","avgBondLength","getCoordBoundingBoxObj","fragmentType","shiftMol","xorig","over","add_","bb1","bb2","bbReactAll","bbProdAll","defaultArrowLength","defaultOffset","arrowCenter","arrowStart","arrowEnd","rgMerge","scaffold","ctab","readKeyValuePairs","valueString","partition","utils","count","trim","readKeyMultiValuePairs","postLoadMul","atomReductionMap","m","raid","patomsMap","identityMap","bondsToRemove","beginIn","endIn","postLoadSru","postLoadSup","postLoadGen","postLoadDat","postLoadMon","postLoadMer","postLoadCop","postLoadCro","postLoadMod","postLoadGra","postLoadCom","postLoadMix","postLoadFor","postLoadAny","loadSGroup","postLoadMap","initSGroup","propData","kv","applySGroupProp","propName","numeric","core","applySGroupArrayProp","num","part","toIntArray","concat","applyDataSGroupName","applyDataSGroupExpand","applyDataSGroupQuery","applyDataSGroupQueryOp","applyDataSGroupDesc","split","applyDataSGroupInfo","applyDataSGroupInfoLine","substr","applyDataSGroupData","finalize","trimRight","startsWith","endsWith","applyDataSGroupDataLine","strArray","parseAtomLine","atomLine","atomSplit","massDifference","parseBondLine","bondLine","bondSplit","parseAtomListLine","atomListLine","parsePropertyLines","ctabLines","rLogic","props","charAt","propValue","isPseudo","test","propertyData","rglabels","a2rs","a2ri","a2r","iii","hhh","ooo","logic","pool","parsePropertyLineAtomList","expandedSGroups","eg","applyAtomProp","propId","propVal","parseCTabV2000","countsSplit","ignoreChiralFlag","atomCount","bondCount","atomListCount","isAbs","isAnd","stextLinesCount","propertyLinesCount","atomLines","bondLines","atomListLines","atomLists","pair","psg","call","emptyGroups","parseRg2000","coreLines","fragmentLines","parseCTab","strId","parseRxn2000","lines","search","labelsListToIds","hdr","lst","parseAtomLineV3000","subsplit","spacebarsplit","atomListParams","matchNotListInfo","matchedSubstr","splitonce","ival","rgrsplit","parseBondLineV3000","v3000parseCollection","v3000parseSGroup","stripV30","splitSGroupDef","parseBracedNumberList","ATOMS","PATOMS","BONDS","brkxyzStrs","BRKXYZ","brkxyz","MULT","LABEL","CONNECT","FIELDDISP","stripQuotes","FIELDDATA","FIELDNAME","QUERYTYPE","QUERYOP","ESTATE","parseCTabV3000","norgroups","vals","substring","readRGroups3000","rfrags","rlsplit","rfrag","parseRxn3000","findCtabEnd","findRGroupEnd","molLinesReactants","molLinesProducts","molLinesAgents","current","rGroups","molLines","bracketEquality","currentIndex","firstSliceIndex","quoted","currentSymbol","closingBracketIndex","delim","braceBalance","loadRGroupFragments","parseMol","v2000","version","v3000","parseRxn","prepareForSaving","prepareMulForSaving","prepareSruForSaving","prepareSupForSaving","prepareDatForSaving","prepareGenForSaving","message","saveToMolfile","saveMulToMolfile","saveSruToMolfile","saveSupToMolfile","saveDatToMolfile","saveGenToMolfile","sgMap","bondMap","idstr","makeAtomBondLines","smtLine","bracketsToMolfile","sdtLine","padEnd","sddLine","nCharnCharsToDisplay","normalizeNewlines","charsPerLine","chars","prefix","rem","salLine","getCrossBonds","bracketPos","getBracketParameters","bracket","yComplement","nlRe","END_V2000","Molfile","molfile","reaction","bondMapping","molfileLines","common","skipErrors","preserveIndigoDesc","toRemove","errors","getSGroupsBFS","errorIgnore","ex","sGroupDelete","prepareSGroups","writeCTab2000","skipSGroupErrors","getComponents","all","saver","submol","saveMolecule","getScaffold","getCTab","writePaddedNumber","writeHeader","date","Date","writeCR","writeWhiteSpace","write","getMonth","getDate","getFullYear","getHours","getMinutes","repeat","isAbsFlag","enhancedStereoFlag","writeCTab2000Header","atomsIds","atomsProps","pseudo","writeAtom","writeBond","writeAtomProps","chargeList","isotopeList","radicalList","rglabelList","rglogicList","aplabelList","rbcountList","unsaturatedList","substcountList","writeAtomPropList","writePadded","sgmap","sgmapback","sgorder","q","expandedGroups","expandedGroupsLine","atomLabel","writePaddedFloat","MolSerializer","DefaultOptions","parseCTFileParams","reactionRelayout","parseCTFile","badHeaderRecover","ex1","ex2","ignoreErrors","noRgroups","CisTrans","neighborsFunc","getNeighbors","PARITY","CIS","TRANS","prototype","each","func","getParity","idx","parity","getSubstituents","substituents","sameside","beg","neiBeg","neiEnd","normalize","normBeg","normEnd","prodBeg","prodEnd","samesides","iBeg","iEnd","iNeiBeg","iNeiEnd","sortSubstituents","h0","pureHydrogen","h1","h2","h3","swap","isGeomStereoBond","bondIdx","label1","label2","neiBegin","build","excludeBonds","ct","sign","arr","i1","i2","tmp","Dfs","atomData","atom_data","nComponentsInReactants","vertices","VertexDesc","edges","EdgeDesc","v_seq","dfs_state","parent_vertex","parent_edge","branches","opening_cycles","closing_cycle","SeqElem","vIdx","parVertex","parEdge","walk","vStack","cid","parentVertex","seqElem","atomD","neiIdx","edgeIdx","edgeClosingCycle","eIdx","numBranches","numOpeningCycles","Stereocenters","buildFromBonds","alleneMask","neiList","nei1","nei1nei","nei2nei","stereocenter","buildOneCenter","allowed_stereocenters","degree","n_double_bonds","implicit_degree","atomIdx","implicitDegree","pyramid","edgeIds","lastAtomDir","nDoubleBonds","nPureHydrogens","neiAtom","edge_idx","nei_idx","rank","as","main1","main2","side1","side2","mainDir","getBondStereo","xyz1","xyz2","xyzzy","stereo0","stereo1","stereo2","nUp","nDown","xyz","centerIdx","u","eps","sine1","cosine1","sine2","cosine2","v3","isPyramidMappingRigid","rigid","Smiles","smiles","writtenAtoms","writtenComponents","_Atom","lowercase","chirality","branch_cnt","paren_written","h_count","isBondInRing","inLoop","setImplicitHydrogen","allowedLowercase","prepareLoopStructure","bondsInLoops","hbids","touchedCistransbonds","markCisTrans","componentsAll","seqEl","vPrevIdx","openingCycles","stereocenters","sc","implicitHIdx","pyramidMapping","counter","cycleNumbers","firstComponent","writeCycleNumber","calcBondDirection","comma","writeRadicals","needBrackets","hydro","cis_trans","dbonds","ctbond_beg","ctbond_end","saved","aromFailBeg","aromFailEnd","updateSideBonds","subst","sidebonds","findBondId","n1","n2","n3","n4","vprev","ntouched","marked","SmiSerializer","_content","DelimeterRegex","SdfSerializer","molSerializer","exec","chunk","propChunks","deserialize","pc","isFinite","sdfItems","serialize","ChemicalMimeType","pollDeferred","process","complete","timeGap","startTimeGap","Promise","resolve","reject","iterate","then","setTimeout","err","parametrizeUrl","url","request","method","headers","responseHandler","requestUrl","response","fetch","assign","Accept","credentials","json","ok","error","indigoCall","baseUrl","defaultOptions","customHeaders","RemoteStructService","apiPath","output_format","isAvailable","indigoVersion","indigo_version","imagoVersions","imago_versions","parVersion","req","status","bind","upload_id","metadata","mol_str","outputFormat","resp","text","RemoteStructServiceProvider","currentApiPath","URLSearchParams","document","SupportedFormatProperties","mime","extensions","supportsCoords","formatProperties","molAuto","Mol","molV3000","rxn","Rxn","rxnV3000","DaylightSmiles","smilesExt","ExtendedSmiles","smarts","DaylightSmarts","inChI","InChI","inChIAuxInfo","InChIAuxInfo","cml","CML","KET","cdxml","CDXML","cdx","CDX","binaryCdx","unknown","UNKNOWN","imgFormatProperties","svg","extension","png","getPropertiesByImgFormat","format","getPropertiesByFormat","SupportedFormat","KetFormatter","serializer","_ketSerializer","RxnFormatter","_molSerializer","stringifiedMolfile","stringifiedStruct","ServerFormatter","structService","ketSerializer","_structService","convert","convertResult","withCoords","promise","layout","parsedStruct","rescale","formatError","MolfileV2000Formatter","FormatterFactory","structServiceOptions","_excluded","molfileParseOptions","separateOptions","molSerializerOptions","formatter","identifyStructFormat","sanitizedString","er","clearStr","isBase64String","cdxHeader","Raphael","translateAbs","delta","transform","st","LayerMap","StereoColoringType","StereLabelStyleType","Visel","paths","boxes","boundingBox","oldBoundingBox","exts","vector","translate","ReObject","viselType","visel","vbox","noredraw","removed","show","paper","setStart","drawHover","setFinish","hide","_render","_restruct","_paper","_styles","box","shiftRayBox","r","rc","rd","pid","nid","id0","id1","calcCoordinates","aPoint","bPoint","lengthHyp","obj","pos1","pos2","oPos2","D","util","rect","rectangleArrowHighlightAndSelection","b0x","wOffset","hOffset","transformedPath","svgPath","rotate","rx","ry","polyline","OpenAngle","arrowOpenAngle","FilledTriangle","arrowFilledTriangle","FilledBow","arrowFilledBow","DashedOpenAngle","arrowDashedOpenAngle","Failed","arrowFailed","BothEndsFilledTriangle","arrowBothEndsFilledTriangle","EquilibriumFilledHalfBow","arrowEquilibriumFilledHalfBow","EquilibriumFilledTriangle","arrowEquilibriumFilledTriangle","EquilibriumOpenAngle","arrowEquilibriumOpenAngle","UnbalancedEquilibriumFilledHalfBow","arrowUnbalancedEquilibriumFilledHalfBow","UnbalancedEquilibriumOpenHalfAngle","arrowUnbalancedEquilibriumOpenHalfAngle","UnbalancedEquilibriumLargeFilledHalfBow","arrowUnbalancedEquilibriumLargeFilledHalfBow","UnbalancedEquilibriumFilledHalfTriangle","arrowUnbalancedEquilibriumFilledHalfTriangle","arrowEllipticalArcFilledBow","arrowEllipticalArcFilledTriangle","arrowEllipticalArcOpenAngle","arrowEllipticalArcOpenHalfAngle","arrowLength","arrowAngle","arrowHeadLength","arrowHeadWidth","arrowHeadAttr","lineattr","triangleLength","triangleWidth","fill","dashInterval","failSignWidth","arrowLen","lineOffset","arrowOffset","unbalanceVal","plus","bondSingle","makeStroke","stroke","bondSingleUp","b3","bondSingleStereoBold","a3","a4","bondDoubleStereoBold","sgBondPath","bondSingleDown","nlines","step","bsp","stereoBond","bondSingleEither","bondDouble","cisTrans","bondSingleOrDouble","nSect","bondSpace","pi","bondTriple","bondAromatic","bondShift","l1","l2","bondAny","bondHydrogen","bondDative","reactingCenter","pathdesc","topologyMark","mark","font","fontszsub","rbb","getBBox","recenterText","radicalCap","lineWidth","dw","dh","radicalBullet","circle","b0","sgroupBracketStyle","selectionRectangle","lassoStyle","selectionPolygon","pstr","selectionLine","dashedPath","dash","t0","t1","black","t2","coordStr","aromaticBondPaths","mask","vml","gap","StereoLabelMinOpacity","ShowHydrogenLabels","ReAtom","showLabel","hydrogenOnTheLeft","makeHoverPlate","addReObjectPath","ps","isAtomInContractedFunctionalGroup","atomSelectionPlateRadius","hoverStyle","restruct","styles","selectionStyle","isAttachmentPointAtom","sgroupName","setHydrogenPos","isLabelVisible","rightMargin","leftMargin","implh","isHydrogen","buildLabel","zoom","showAtomIds","idPos","lc","draw","indices","setHover","hydroIndex","showHydroIndex","showRadical","showIsotope","displayHydrogen","showHydrogenLabels","showHydrogen","hydrogen","showCharge","showValence","showExplicitValence","showValenceWarnings","warning","showWarning","warnings","pathAndRBoxTranslate","lsb","bisectLargestSector","showAttpnt","aamText","getAamText","queryAttrsText","getQueryAttrsText","shouldDisplayStereoLabel","stereoLabelStyle","aamPath","atomColoring","getStereoAtomColor","childNodes","setAttribute","opacity","getStereoAtomOpacity","aamBox","t","fromRelBox","isHighlighted","highlightColor","highlight","hasCurrentHighlight","style","colorStereogenicCenters","Off","BondsOnly","getColorFromStereoLabel","stereoLabelType","colorOfAndCenters","colorOfOrCenters","colorOfAbsoluteCenters","stereoLabelNumber","autoFadeOfStereoLabels","labelStyle","flag","On","Classic","IUPAC","visibleTerminal","Hetero","neighborsLength","shouldBeVisible","carbonExplicitly","sameNotStereo","hydrogenLabels","Terminal","TerminalAndHetero","yl","yr","nl","nr","getLabelText","fontsz","hshift","vshift","mapValence","hydrogenLeft","asterisk","attpntText","attpntPath1","attpntRbb","lsbn","shiftBondEnd","arrowLeft","arrowRight","attpntPath","angles","daMax","margin","ReBond","doubleBondShift","bondRecalc","isBondInContractedFunctionalGroup","checkStereoBold","setDoubleBondShift","getBondPath","getReactingCenterPath","getTopologyMark","ipath","bondIdxOff","subFontSize","showBondIds","getIdsPath","showHalfBondIds","showLoopIds","highlightPath","getHighlightPath","beginning","pathString","findIncomingStereoUpBond","bid0","includeBoldStereoBond","neibond","singleUp","boldStereo","findIncomingUpBonds","halfbonds","neihbid1","neihbid2","shiftA","shiftB","getBondSingleStereoBoldPath","getBondSingleUpPath","getBondSingleDownPath","getBondSingleEitherPath","getStereoBondColor","getBondDoubleStereoBoldPath","getBondDoublePath","inAromaticLoop","getBondAromaticPath","getSingleOrDoublePath","stereoUpBondGetCoordinates","defaultColor","beginAtomStereoLabel","endAtomStereoLabel","LabelsOnly","coords1","coords2","getBondLineShift","neihbid","neihb","cosHalf","biss","denomAdd","interval","s1","s2","dashdotPattern","getAromaticBondPaths","lw","bs","alongIntRc","alongIntMadeBroken","alongSz","acrossInt","acrossSz","tiltTan","fixed","param1","param2","pb","irbb","selectDoubleBondShiftChain","loop1","loop2","d1","d2","selectDoubleBondShift","atom1","atom2","nLeft","nRight","ReEnhancedFlag","hoverPath","getDefaultStereoFlagPosition","stereoFlagMap","absFlagLabel","andFlagLabel","mixedFlagLabel","orFlagLabel","showStereoFlags","ReFrag","firstFrag","secondFrag","_ui_editor","calcBBox","keyOf","BORDER_EXT","ReRGroup","labelBox","fragGetAtoms","fragGetBonds","bbf","rGroupdrawBrackets","labelSet","fontRLabel","logicStyle","fontRLogic","rLogicToString","logicPath","logicBox","_draw","fnum","drawing","cy","leftBracket","rightBracket","ifThen","rangeExists","restH","nextRg","ReRxnArrow","point","distRef","getReferencePointDistance","calculateDistanceToLine","getReferencePoints","startPoint","endPoint","middlePoint","refPoint","refPoints","rp","generatePath","findMiddlePoint","scaleFactor","selectionSet","scaledRP","getArrowParams","x1","x2","y2","hypot","_id","per","minX","minY","coordinates1","coordinates2","ReRxnPlus","ReDataSGroupData","dataArea","ReSGroup","firstSgroupAtom","SGroupdrawBrackets","drawGroupDat","padding","startX","startY","sGroupItem","sGroupHasFirstAtom","firstAtomPosition","firstAtomId","reSGroupAtom","sGroupTextBoundingBox","getTextHighlightDimensions","getHighlighPathInfo","lowerIndexText","upperIndexText","indexAttribute","bracketR","renderIndex","indexPos","indexPath","indexBox","showValue","toFront","calculatePP","drawAttachedDat","drawAbsoluteDat","sbox","sgroupData","nameI","boxI","sboxI","BracketParams","crossBondsValues","tl","tr","tt","tb","cc","dt","contractedFunctionalGroupSize","hoverPp","ReSimpleObject","simpleObject","pointToCenter","topX","topY","bottomX","bottomY","distances","onlyOnObject","poly","atan","enhPaths","stylesApplied","enhPath","hoverStyleSimpleObject","ReLoop","rlid","apos","bpos","aromaticCircle","pathStr","halfAngle","minSin","qi","SCALE","ReText","getRelBox","topLeft","firstElOfFirstRow","leftEdge","firstRow","topEdge","widestRow","nextRow","getRowWidth","lastElOfWidestRow","rightEdge","lastRow","bottomEdge","row","rowWidth","paperScale","shiftY","rawContentState","blocks","block","ranges","getRanges","shiftX","start","setPos","flatten","getStyles","nextStyles","isEqual","inlineStyleRanges","inlineRange","customFontSize","FontSize","textRange","Bold","Italic","Subscript","Superscript","ReStruct","initLayers","clearMarks","lid","reloops","enhancedFlags","reAtom","adjacentComponents","neighbor","compId","aidSet","getConnectedComponent","ccFragmentType","ccid","removeConnectedComponent","addConnectedComponent","layers","visible","parentNode","insertBefore","maps","structChanged","markItem","mapChanged","clearVisel","selection","isSelectionEmpty","eachItem","scaleVisel","force","initialized","_item","atomsChanged","connectedComponentRemoveAtom","emptyFrags","clearConnectedComponents","atomsChangedArray","assignConnectedComponents","verifyLoops","updLoops","updateLoops","showLabels","showBonds","showLoops","showReactionSymbols","showSGroups","showFragments","showRGroups","showEnhancedFlags","showSimpleObjects","showTexts","reloop","markBond","simpleObjectsChanged","textsChanged","rxnArrowsChanged","rxnPlusesChanged","resgroup","bondlist","markAtom","isValid","loopRemove","enhancedFlagsChanged","chid","bondsChanged","mapValues","isSelectable","sgId","sGroupAtoms","showItemSelection","exists","isSelectionSvgObjectExists","makeSelectionPlate","anySelection","scaleRPath","FRAC","setFracAngle","calcAngle","fracAngle","angle2","round","calcNewAtomPos","ctrlKey","degrees","BONDS_MERGE_ANGLE","BONDS_MERGE_SCALE","mergeBondsParams","struct1","struct2","begin1","begin2","end1","end2","mergeAngle","merged","inRange","opt","rotationStep","labelFontSize","autoScale","autoScaleMargin","maxBondLength","hideImplicitHydrogen","hideTerminalLabels","doubleBondWidth","stereoBondWidth","bondThickness","Render","clientArea","renderWidth","clientWidth","renderHeight","clientHeight","userOpts","ZERO","updateOptions","opts","passedOptions","view2obj","isRelative","scroll","scrollPos","useOldZoom","obj2view","scrollLeft","scrollTop","page2obj","event","getBoundingClientRect","offsetTop","top","offsetLeft","clientX","clientY","setPaperSize","setSize","setViewBox","setOffset","newoffset","setZoom","calcExtend","canvasSize","x0","y0","newXSize","newYSize","ey","setScrollOffset","cx","update","setScale","canvas","setMolecule","viewSz","changes","setSelection","downScale","isAutoScale","UNIT","eb","vb","cb","oldCb","oldBb","sz1","marg","mv","csz","rescaleAmount","isForceDownscale","isBondsLengthFit","sz2","BaseOperation","priority","execute","_inverted","invert","level","invalidateLoop","halfBond1","halfBond2","invalidateAtom","invalidateBond","invalidateItem","OperationType","freeze","ATOM_ADD","ATOM_DELETE","ATOM_ATTR","ATOM_MOVE","CALC_IMPLICIT_H","BOND_ADD","BOND_DELETE","BOND_ATTR","BOND_MOVE","LOOP_MOVE","S_GROUP_ATOM_ADD","S_GROUP_ATOM_REMOVE","S_GROUP_ATTR","S_GROUP_CREATE","S_GROUP_DELETE","S_GROUP_ADD_TO_HIERACHY","S_GROUP_REMOVE_FROM_HIERACHY","R_GROUP_ATTR","R_GROUP_FRAGMENT","UPDATE_IF_THEN","RESTORE_IF_THEN","RXN_ARROW_ADD","RXN_ARROW_DELETE","RXN_ARROW_MOVE","RXN_ARROW_RESIZE","RXN_PLUS_ADD","RXN_PLUS_DELETE","RXN_PLUS_MOVE","S_GROUP_DATA_MOVE","CANVAS_LOAD","ALIGN_DESCRIPTORS","SIMPLE_OBJECT_ADD","SIMPLE_OBJECT_DELETE","SIMPLE_OBJECT_MOVE","SIMPLE_OBJECT_RESIZE","RESTORE_DESCRIPTORS_POSITION","FRAGMENT_ADD","FRAGMENT_DELETE","FRAGMENT_STEREO_FLAG","FRAGMENT_ADD_STEREO_ATOM","FRAGMENT_DELETE_STEREO_ATOM","ENHANCED_FLAG_MOVE","TEXT_CREATE","TEXT_UPDATE","TEXT_DELETE","TEXT_MOVE","ADD_HIGHLIGHT","UPDATE_HIGHLIGHT","REMOVE_HIGHLIGHT","AtomAttr","attribute","data2","inverted","AtomMove","noinvalidate","reatom","AtomAdd","atomSetPos","AtomDelete","restructedAtom","markItemRemoved","BondAttr","BondMove","BondAdd","structBond","atomAddNeighbor","BondDelete","rebond","prev","CanvasLoad","oldStruct","clearVisels","AlignDescriptors","history","structBox","alignPoint","RestoreDescriptorsPosition","EnhancedFlagMove","currentPosition","newPosition","UpdateIfThen","rgNew","rgOld","skipRgids","rgid_new","rgid_old","ifThenHistory","RestoreIfThen","rgValue","FragmentAdd","FragmentDelete","enhancedFalg","FragmentAddStereoAtom","invalidateEnhancedFlag","FragmentDeleteStereoAtom","FragmentStereoFlag","updateStereoFlag","CalcImplicitH","aids","atomIds","aIds","LoopMove","RGroupAttr","rgroupId","rgp","RGroupFragment","rg_new","rg_old","findRGroupByFragment","removeOld","setNew","RxnArrowMove","Base","move","RxnArrowResize","anchor","previousPos0","get_xy0","previousPos1","reItem","angleInRadians","cosAngle","sinAngle","diffX","diffY","newMiddlePoint","RxnPlusMove","RxnPlusAdd","plid","newRxn","structRxn","rxnPlusSetPos","RxnPlusDelete","RxnArrowAdd","itemId","rxnArrowSetPos","RxnArrowDelete","performed","SimpleObjectAdd","toCircle","makeCircleFromEllipse","simpleObjectSetPos","SimpleObjectDelete","SimpleObjectMove","handleRectangleChangeWithAnchor","SimpleObjectResize","circlePoint","position0","position1","SGroupAtomAdd","SGroupAtomRemove","removeAtom","SGroupAttr","setAttr","SGroupDataMove","SGroupAddToHierarchy","relations","SGroupRemoveFromHierarchy","SGroupCreate","SGroupDelete","relatedFGroupId","fgid","TextCreate","textSetPosition","TextDelete","TextUpdate","previousContent","TextMove","difference","Action","operations","operation","isDummy","sortedOperations","invertedOperation","perform","addOp","fromAromaticTemplateOnBond","template","events","simpleFusing","getBondFragment","getFragmentWithBondMap","atomsInStruct","SELECTION_DISTANCE_COEFFICIENT","SELECTION_WITHIN_TEXT","findMaps","findClosestAtom","findClosestBond","findClosestEnhancedFlag","findClosestDataSGroupData","findClosestSGroup","findClosestRxnArrow","findClosestRxnPlus","findClosestFrag","findClosestRGroup","findClosestSimpleObject","findClosestText","cursorPosition","referencePoints","calcDistance","ref","skip","closestAtom","maxMinDist","skipId","closestBond","closestBondCenter","minCDist","mid","cdist","inStripe","_minDist","inBox","xDist","contains","rxnArrow","firstAtomPp","pg","findClosestItem","mp","other","findCloseMerge","srcId","merge","atomGetAttr","atomGetDegree","atomGetSGroups","atomGetPos","findStereoAtoms","structSelection","atomForNewBond","atomNeighbours","prevBondId","prevBond","prevBondType","neiPos","maxI","maxAngle","neiNeighbours","neiV","neiAngle","neiNei","neiNeiPos","vDiff","shallBe180DegToPrevBond","prevBondAngle","closest","getRelSgroupsBySelection","selectedAtoms","_sgid","isBondStartsInSelectionAndEndsOutside","isBondEndsInSelectionAndStartsOutside","fromRGroupAttrs","fromRGroupFragment","rgidNew","fromUpdateIfThen","rgidOld","fromSeveralSgroupAddition","descriptors","fromSgroupAddition","fValue","localAttrs","mergeWith","fromSgroupAttrs","setExpandSGroup","fromAtomsAttrs","sGroupAttributeAction","fromSgroupDeletion","sG","sGroupsRecalcCrossBonds","getAttrs","asteriskAction","plainCarbon","isPlainCarbon","fromSgroupAction","newSg","sourceAtoms","SgContexts","fromBondAction","atomsFromBonds","getAtomsFromBonds","newSourceAtoms","uniq","fromGroupAction","Multifragment","fromMultiFragmentAction","Group","fromAtomAction","targetAtoms","allFragments","fragId","getAtomsBondIds","currSelection","bondid","removeAtomFromSgroupIfNeeded","removeSgroupIfNeeded","sgCounts","fromBondAddition","mergeFragments","mergeSgroups","bnd","fromBondStereoUpdate","mergeFragmentsIfNeeded","fromBondsAttrs","reset","bids","attrGetDefault","fromBondsMerge","mergeMap","atomPairs","dstId","bondCI","dst","src","fromAtomMerge","fromBondFlipping","withReverse","beginFrId","endFrId","fragmentStereoBonds","stereoAtomsMap","getStereoAtomsMap","stereoProp","aId","fromStereoAtomAttrs","correctAtomIds","getStereoParity","newAtomParity","bondChangingAction","itemID","bondProps","newItemId","plainBondTypes","fromAtomAddition","atomNeighbors","fromAtomsFragmentAttr","newfrid","oldfrid","fragAction","mergeBondId","getAttrHash","sgChanged","dstAtomNeighbors","frid2","fridAtoms","atomsToNewFrag","moveAtomsAction","srcAtoms","dstAtom","notExpandedContexts","atomsToSgroup","without","checkAtomValence","fromNewCanvas","fromDescriptorsAlign","fromChain","dx","dy","chainItems","fromItemsFuse","usedAtoms","connectedAtomIds","getAllConnectedAtomsIds","mergeMapOfItemsToSet","valenceCheck","getItemsToFuse","editor","mergeItems","closestToMerge","findMerge","getHoverToFuse","hoverItems","now","itemsSet","closestMap","bondsIds","initialAtoms","connectedAtoms","initialAtom","relevantConnectedComponent","fromMultipleMove","lists","atomsToInvalidate","rxnPulse","sgData","fromStereoFlagUpdate","processAtom","usedIds","fromFragmentSplit","rgForRemove","fromOneAtomDeletion","fromFragmentDeletion","fromBondDeletion","skipAtoms","atomsToRemove","fromOneBondDeletion","frids","actionRemoveBonds","frid3","fromPaste","pstruct","xy0","getStructCenter","fridMap","pasteItems","tmpAtom","newsgid","sgAction","oper","__frag","newRgId","onlyOneStructsSgroupId","xmin","ymin","xmax","ymax","fromArrowAddition","fromArrowResizing","fromArrowDeletion","fromPlusAddition","fromPlusDeletion","fromFlip","fids","fidsNumberKeys","isFragFound","allFragmentsOfStructure","selectedFragmentsOfStructure","flipPartOfStructure","flipStandaloneStructure","getRotationPoint","isSelectedAtom","getAttachmentBond","getRotationPointAtomId","attachmentBondId","attachmentBond","rotationPointAtomId","flipBonds","rotationPoint","flipItemByCenter","bbox","calcCenter","fromRotate","rotateDelta","did","stereoFlags","flagId","fromBondAlign","fromSimpleObjectDeletion","fromSimpleObjectAddition","fromSimpleObjectResizing","fromTemplateOnCanvas","extraBondAction","additionalAtom","middleAtom","actionRes","fromTemplateOnAtom","extraBond","tmpl","isTmplSingleGroup","isSingleGroup","extraRes","angle0","fromTemplateOnBondAction","flip","fromTemplateOnBond","tmplBond","tmplBegin","atomsMap","bondAtoms","mergeA","tBond","existId","commonBond","fromTextCreation","fromTextUpdating","fromTextDeletion","HighlightAdd","highlightId","notifyChanged","HighlightDelete","highlightToRemove","newData","oldData","highlightToUpdate","oldAtoms","oldBonds","oldColor","updatedHighlight","HighlightUpdate","reAtoms","reBonds","fromHighlightCreate","fromHighlightClear","defaultTypes","defaultCalcProps","convertStructToString","Indigo","info","clean","aromatize","dearomatize","calculateCip","automap","types","check","properties","calculate","image","recognize","backgroundColor","generateImageAsBase64","allowedApiSettings","prepareStructToRender","structStr","ketcherInstance","parseStruct","factory","service","create","getStructureFromStringAsync","getStructure","structureFormat","formatterFactory","getStructureFromStructAsync","Ketcher","EventEmitter","apiSetting","clientSetting","settings","setOptions","isExtended","molfileFormat","containsReaction","formatPassed","rxnfile","withAuxInfo","generateInchIKey","eventBus","structToAddFragment","meta","base64","DefaultStructServiceOptions","KetcherBuilder","structServiceProvider","serviceOptions","mergedServiceOptions","createStructService","ketcher"],"mappings":"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"}